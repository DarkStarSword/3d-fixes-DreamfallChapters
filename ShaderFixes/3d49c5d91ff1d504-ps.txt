// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3d49c5d91ff1d504-ps.txt
// 3DMigoto: 3d49c5d91ff1d504 |    Unity headers extracted from Standard_Disintegrate_VertexPosition.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Bumped Diffuse VertexPos" {
//      Properties {
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _IlumMap ("Ilum Texture", 2D) = "White" { }
//       _IlumColor ("Ilum Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _IlumStrength ("Ilum Strength", Float) = 0.000000
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,4.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _PlayerPos ("Player position(Set in script)", Vector) = (0.000000,0.000000,0.000000,1.000000)
//       _curveVal ("CurveValue", Float) = 1.000000
//       _test ("squash test", Float) = 1.000000
//       _flip ("Flip", Range(-1.000000,1.000000)) = 1.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 103367
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 165
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_VertexPosition.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 129 5 2
//   Keywords { "POINT_COOKIE" "FOG_EXP" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 400
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 192 [_MetalNess]
//   Float 196 [_AlphaFactor]
//   Float 200 [_glossHigh]
//   Float 204 [_glossLow]
//   Float 208 [_MetalNessAlphaFactor]
//   Vector 224 [_DissolveColor]
//   Float 240 [_DissolveEdge]
//   Float 244 [_TileFactor]
//   Vector 288 [_PlayerPos] 3
//   Float 300 [_curveVal]
//   Float 304 [_test]
//   Float 308 [_flip]
//   Float 340 [_UVxSpeed]
//   Float 384 [_Cutoff]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_NoiseTex] 2D 4
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_LightTextureB0] 2D 1
//   SetTexture 4 [_LightTexture0] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:09:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[25], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3d49c5d91ff1d504-ps.txt
mov r9.xyzw, cb1[4].xyzw
mul r10.x, -r8.x, r8.y
mul r11.xyzw, cb10[0].xyzw, r10.xxxx
add r9.xyz, r9.xyz, -r11.xyz

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.y, v5.y, cb0[19].x
mov r3.xz, v5.xxzx
add r3.xyz, -r3.xyzx, cb0[18].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
sqrt r1.w, r1.w
mul r2.w, r1.w, cb0[18].w
mad r3.y, cb1[0].x, cb0[21].y, v1.y
mad r3.z, -r1.w, cb0[18].w, l(1.000000)
sample r4.xyzw, v1.xyxx, t0.xyzw, s2
mul r5.xyzw, r4.xyzw, v6.xyzw
mul r3.z, r3.z, cb0[19].y
mul r3.w, cb0[15].x, cb0[19].y
mov r3.x, v1.x
mul r3.xy, r3.xyxx, cb0[15].yyyy
sample r6.xyzw, r3.xyxx, t1.xyzw, s4
mad r3.x, r1.w, cb0[18].w, r6.x
mul r3.x, r3.x, r3.w
lt r3.x, r3.z, r3.x
lt r2.w, l(0.000000), r2.w
and r2.w, r2.w, r3.x
if_nz r2.w
  mad r1.w, -r1.w, cb0[18].w, r6.x
  mul r3.w, r1.w, cb0[19].y
  mov r4.xyw, cb0[14].xyxz
else 
  mov r4.xyw, r5.xyxz
  mov r3.w, l(0)
endif 
sample r6.xyzw, v1.zwzz, t2.xyzw, s3
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
add r5.xy, r5.wyww, r5.wxww
max r1.w, r5.x, cb0[13].x
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[12].x
mad r2.w, r4.z, v6.z, r5.y
mul r4.z, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[12].z
mad r2.w, cb0[12].w, r2.w, r4.z
max r4.z, r5.w, cb0[12].y
add r5.x, r3.w, -cb0[24].x
lt r5.x, r5.x, l(0.000000)
discard_nz r5.x
mul r5.xyz, v5.yyyy, cb0[9].xyzx
mad r5.xyz, cb0[8].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[10].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[11].xyzx
dp3 r5.w, r5.xyzx, r5.xyzx
sample r7.xyzw, r5.wwww, t3.xyzw, s1
sample r5.xyzw, r5.xyzx, t4.xyzw, s0
mul r5.x, r5.w, r7.x
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
dp3 r5.y, r7.xyzx, r1.xyzx
max r5.y, r5.y, l(0.000000)
mul r5.xzw, r5.xxxx, cb0[6].xxyz
dp3 r6.x, r7.xyzx, r7.xyzx
rsq r6.x, r6.x
mul r6.xyz, r6.xxxx, r7.xyzx
add r7.xyz, r4.xywx, -cb0[2].xyzx
mad r7.xyz, r1.wwww, r7.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r4.xyw, r1.wwww, r4.xyxw
mad r1.w, -r2.w, r4.z, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r6.xyzx, r0.xyzx
dp3 r2.x, r6.xyzx, r2.xyzx
max r2.x, r2.x, l(0.000000)
dp3 r0.x, r1.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r1.w, r1.w
mul r0.z, r0.y, l(0.797884583)
mad r0.y, -r0.y, l(0.797884583), l(1.000000)
mad r1.x, r5.y, r0.y, r0.z
mad r0.y, r2.x, r0.y, r0.z
mad r0.y, r1.x, r0.y, l(0.000010)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r1.w, l(1.000000)
mad r0.z, r0.z, l(0.968000), l(0.030000)
log r0.z, r0.z
div r0.z, l(10.000000), r0.z
mul r1.x, r0.z, r0.z
mad r0.z, r0.z, r0.z, l(2.000000)
mul r0.z, r0.z, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.x
exp r0.w, r0.w
mul r0.z, r0.z, r0.w
add r0.w, -r5.y, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r1.x, -r2.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mul r1.y, r0.x, r0.x
dp2 r1.y, r1.yyyy, r1.wwww
add r1.y, r1.y, l(-0.500000)
mad r0.w, r1.y, r0.w, l(1.000000)
mad r1.x, r1.y, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, l(0.785398185)
eq r0.z, cb0[3].w, l(0.000000)
max r1.x, r0.y, l(0.000100)
sqrt r1.x, r1.x
movc r0.y, r0.z, r1.x, r0.y
mul r0.yz, r5.yyyy, r0.yywy
max r0.y, r0.y, l(0.000000)
dp3 r0.w, r7.xyzx, r7.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.y, r0.w, r0.y
mul r1.xyz, r0.zzzz, r5.xzwx
mul r0.yzw, r5.xxzw, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r7.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r4.xywx, r1.xyzx, r0.xyzx
mul r0.w, v2.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul r3.xyz, r0.xyzx, r0.wwww
mov o0.xyzw, r3.xyzw
ret 
// Approximately 0 instruction slots used