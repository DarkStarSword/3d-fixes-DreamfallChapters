// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed af53f0e6016d88d3-ps.txt
// 3DMigoto: af53f0e6016d88d3 |    Unity headers extracted from Rim_Transparent_2side.shader
//    Shader "Chickenlord/Transparent Rim Lighting 2Side" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RS ("Pre Power", Range(1.000000,10.000000)) = 2.500000
//       _RM ("Post Multiplier", Range(0.000000,5.000000)) = 2.000000
//       _RPS ("Post Power", Range(1.000000,5.000000)) = 2.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 112657
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 105
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rim_Transparent_2side.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 84 3 0
//   Keywords { "POINT" "FOG_EXP" }
//   undeciphered2: 1 3 5 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 192 [_Color]
//   Float 208 [_Shininess]
//   Float 212 [_RS]
//   Float 216 [_RM]
//   Float 220 [_RPS]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:43:26 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 5      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed af53f0e6016d88d3-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

mul r0.xyz, v5.yyyy, cb0[9].xyzx
mad r0.xyz, cb0[8].xyzx, v5.xxxx, r0.xyzx
mad r0.xyz, cb0[10].xyzx, v5.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb0[11].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sample r0.xyzw, r0.xxxx, t2.xyzw, s0
mul r0.xyz, r0.xxxx, cb0[6].xyzx
mul r1.xyz, r0.xyzx, cb0[7].xyzx
add r2.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mad r4.xyz, r3.xyzx, r0.wwww, r2.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
sample r5.xyzw, v1.zwzz, t1.xyzw, s2
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r0.w, r6.xyzx, r4.xyzx
dp3 r1.w, r6.xyzx, r3.xyzx
max r1.w, r1.w, l(0.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
mul r2.w, cb0[13].x, l(128.000000)
mul r0.w, r0.w, r2.w
exp r0.w, r0.w
sample r3.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.w, r0.w, r3.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r4.xyzw, r3.xyzw, cb0[12].xyzw
mul r0.xyz, r0.xyzx, r4.xyzx
mad r0.xyz, r0.xyzx, r1.wwww, r1.xyzx
mul r0.w, v2.w, cb4[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
mul r0.xyz, r2.yyyy, v3.xyzx
mad r0.xyz, v2.xyzx, r2.xxxx, r0.xyzx
mad r0.xyz, v4.xyzx, r2.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, r5.xyzx, r0.xyzx
min r0.x, |r0.x|, l(1.000000)
log r0.x, r0.x
mul r0.y, r0.x, r2.w
exp r0.y, r0.y
mul r0.y, r3.w, r0.y
max r0.y, r0.y, l(0.000000)
mul r1.xyz, cb0[3].xyzx, cb0[7].xyzx
add r0.zw, r1.yyyz, r1.xxxx
mul r0.w, r0.w, r1.y
mad r0.z, cb0[7].z, cb0[3].z, r0.z
sqrt r0.w, r0.w
dp2 r0.w, cb0[3].wwww, r0.wwww
add r0.z, r0.w, r0.z
mul r0.y, r0.z, r0.y
add r0.z, cb0[13].y, cb0[13].y
mul r0.x, r0.x, r0.z
exp r0.x, r0.x
mul r0.x, r0.x, cb0[13].z
mul r0.x, r0.x, l(0.500000)
min r0.x, r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[13].w
exp r0.x, r0.x
mad r0.x, r4.w, r0.x, r0.y
mul r0.yzw, cb0[3].xxyz, cb3[0].xxyz
add r1.xyz, r0.yzwy, r0.yzwy
add r0.yz, r1.yyzy, r1.xxxx
mul r0.z, r0.z, r1.y
mad r0.y, r0.w, l(2.000000), r0.y
sqrt r0.z, r0.z
dp2 r0.z, cb0[3].wwww, r0.zzzz
add r0.y, r0.z, r0.y
add o0.w, -r0.y, r0.x
ret 
// Approximately 0 instruction slots used