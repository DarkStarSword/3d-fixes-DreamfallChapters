// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fa8cf3759cec82c6-ps.txt
// 3DMigoto: fa8cf3759cec82c6 |    Unity headers extracted from StandardVertexColor_CheapGloss.shader
//    Shader "Dreamfall/Unity5/Standard VertexColor_CheapGloss" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//       _NormalTex ("Normal (RGB)", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _VColorMult ("Vertex Color Strength", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 38534
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 102
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from StandardVertexColor_CheapGloss.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 123 5 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 7 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Float 128 [_MetalNess]
//   Float 132 [_NormalMul]
//   Float 136 [_AlphaFactor]
//   Float 140 [_glossHigh]
//   Float 144 [_glossLow]
//   Float 148 [_MetalNessAlphaFactor]
//   Float 152 [_VColorMult]
//   Vector 160 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_NormalTex] 2D 4
//   SetTexture 2 [_DitherMaskLOD2D] 2D 2
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:03:52 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 8      w        7     NONE   float      w
// TEXCOORD                 6   xyzw        8     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v7.w
dcl_input_ps linear v8.xy
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fa8cf3759cec82c6-ps.txt
mov r16.xyzw, cb1[4].xyzw
mul r17.x, -r15.x, r15.y
mul r18.xyzw, cb10[0].xyzw, r17.xxxx
add r16.xyz, r16.xyz, -r18.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s3
mul r3.xyz, r2.xyzx, cb0[10].xyzx
add r0.w, -cb0[9].z, l(1.000000)
add r4.xyz, -v5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
mul r5.xyz, r3.xyzx, r4.xyzx
sample r6.xyzw, v1.zwzz, t1.xyzw, s4
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[8].yyyy
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
add r2.xy, r2.wyww, r2.wxww
max r0.w, r2.x, cb0[9].y
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[8].x
add r1.w, r2.z, r2.y
mul r2.x, r1.w, l(0.333333343)
mad r1.w, -r1.w, l(0.333333343), cb0[8].w
mad r1.w, cb0[9].x, r1.w, r2.x
max r2.x, r2.w, cb0[8].z
div r7.xy, v7.xyxx, v7.zzzz
frc r2.y, r7.y
mad r7.z, r2.y, l(0.062500), cb2[20].y
sample r7.xyzw, r7.xzxx, t2.xyzw, s2
add r2.y, r7.w, l(-0.500000)
lt r2.y, r2.y, l(0.000000)
discard_nz r2.y
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
mad r2.y, -r1.w, r2.x, l(1.000000)
dp3 r2.z, -r1.xyzx, r7.xyzx
add r2.z, r2.z, r2.z
mad r6.xyz, r7.xyzx, -r2.zzzz, -r1.xyzx
sample r8.xyzw, v8.xyxx, t3.xyzw, s0
log r2.z, r8.w
mul r2.z, r2.z, cb0[4].y
exp r2.z, r2.z
mul r2.z, r2.z, cb0[4].x
mul r8.xyz, r8.xyzx, r2.zzzz
sample r9.xyzw, v8.xyxx, t4.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r2.z, r7.xyzx, r9.xyzx
add r2.z, r2.z, l(0.500000)
mul r8.xyz, r2.zzzz, r8.xyzx
max r2.z, r9.w, l(0.000100)
div r8.xyz, r8.xyzx, r2.zzzz
lt r2.z, l(0.000000), cb4[2].w
if_nz r2.z
  dp3 r2.z, r6.xyzx, r6.xyzx
  rsq r2.z, r2.z
  mul r9.xyz, r2.zzzz, r6.xyzx
  add r10.xyz, -r0.xyzx, cb4[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb4[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r2.z, r10.y, r10.x
  min r2.z, r10.z, r2.z
  add r10.xyz, r0.xyzx, -cb4[2].xyzx
  mad r9.xyz, r9.xyzx, r2.zzzz, r10.xyzx
else 
  mov r9.xyz, r6.xyzx
endif 
log r2.z, r2.y
mul r2.z, r2.z, l(0.750000)
exp r2.z, r2.z
mad r2.w, -r2.z, l(0.700000), l(1.700000)
mul r2.z, r2.w, r2.z
mul r2.z, r2.z, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t5.xyzw, s1, r2.z
log r2.w, r9.w
mul r2.w, r2.w, cb4[3].y
exp r2.w, r2.w
mul r2.w, r2.w, cb4[3].x
mul r10.xyz, r9.xyzx, r2.wwww
lt r3.w, cb4[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb4[6].w
  if_nz r3.w
    dp3 r3.w, r6.xyzx, r6.xyzx
    rsq r3.w, r3.w
    mul r11.xyz, r3.wwww, r6.xyzx
    add r12.xyz, -r0.xyzx, cb4[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb4[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r3.w, r12.y, r12.x
    min r3.w, r12.z, r3.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r6.xyz, r11.xyzx, r3.wwww, r0.xyzx
  endif 
  sample_l r6.xyzw, r6.xyzx, t6.xyzw, s1, r2.z
  log r0.x, r6.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r6.xyzx, r0.xxxx
  mad r6.xyz, r2.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb4[1].wwww, r6.xyzx, r0.xyzx
endif 
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r7.xyzx
mad r3.xyz, r3.xyzx, r4.xyzx, -cb0[2].xyzx
mad r3.xyz, r0.wwww, r3.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r4.xyz, r0.wwww, r5.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r2.y, r2.y
eq r0.z, cb0[3].w, l(0.000000)
mul r1.x, r0.y, r2.y
mad r1.x, -r1.x, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r1.x, r0.y
mad r0.z, r1.w, r2.x, -r0.w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r10.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r3.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r4.xyzx, r8.xyzx, r0.xyzx
mul r0.w, v7.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used