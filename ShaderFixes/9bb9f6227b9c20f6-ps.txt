// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 9bb9f6227b9c20f6-ps.txt
// 3DMigoto: 9bb9f6227b9c20f6 |    Unity headers extracted from Internal-DeferredShading.shader
//    Shader "Hidden/Internal-DeferredShading" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//       _SrcBlend ("", Float) = 1.000000
//       _DstBlend ("", Float) = 1.000000
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 36028
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 73
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Internal-DeferredShading.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 117 5 0
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
//   undeciphered2: 1 7 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 128 [_LightPos]
//   Vector 144 [_LightColor]
//   Vector 240 [_ShadowOffsets0]
//   Vector 256 [_ShadowOffsets1]
//   Vector 272 [_ShadowOffsets2]
//   Vector 288 [_ShadowOffsets3]
//   Matrix 176 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_LightTexture0] 2D 2
//   SetTexture 2 [_LightTextureB0] 2D 1
//   SetTexture 3 [_CameraGBufferTexture0] 2D 4
//   SetTexture 4 [_CameraGBufferTexture1] 2D 5
//   SetTexture 5 [_CameraGBufferTexture2] 2D 6
//   SetTexture 6 [_ShadowMapTexture] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:37:21 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 11

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 9bb9f6227b9c20f6-ps.txt

mul r6.w, -r6.x, r6.y
ne r8.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r8.x
  mul r6.w, r6.w, v2.w
  mad r7.xyz, -r6.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

add r0.x, -cb3[24].x, l(1.000000)
div r0.y, cb1[5].z, v2.z
mul r0.yzw, r0.yyyy, v2.xxyz
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r1.z, cb1[7].x, r2.x, cb1[7].y
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul r2.xyz, r0.yzwy, r1.zzzz

// copy depth from r2.z to r9.x:
mov r9.x, r2.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 9bb9f6227b9c20f6-ps.txt

add r10.x, r9.x, -r6.y
mul r10.x, r6.x, r10.x
ne r6.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r6.w
  mad r2.x, -r10.x, v2.w, r2.x
endif

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

if_z r6.w
  mad r2.xyw, -r10.xxxx, cb10[0].xyxz, r2.xyzw
endif

mul r3.xyzw, r2.yyyy, cb3[9].xyzw
mad r3.xyzw, cb3[8].xyzw, r2.xxxx, r3.xyzw
mad r3.xyzw, cb3[10].xyzw, r2.wwww, r3.xyzw
add r3.xyzw, r3.xyzw, cb3[11].xyzw
div r3.xyz, r3.xyzx, r3.wwww
add r4.xyz, r3.xyzx, cb0[15].xyzx
sample_c_lz r4.x, r4.xyxx, t6.xxxx, s3, r4.z
add r5.xyz, r3.xyzx, cb0[16].xyzx
sample_c_lz r4.y, r5.xyxx, t6.xxxx, s3, r5.z
add r5.xyz, r3.xyzx, cb0[17].xyzx
add r3.xyz, r3.xyzx, cb0[18].xyzx
sample_c_lz r4.w, r3.xyxx, t6.xxxx, s3, r3.z
sample_c_lz r4.z, r5.xyxx, t6.xxxx, s3, r5.z
mad r3.xyzw, r4.xyzw, r0.xxxx, cb3[24].xxxx
dp4 r0.x, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
add r3.xyz, r2.xywx, -cb3[25].xyzx
dp3 r0.y, r3.xyzx, r3.xyzx
sqrt r0.y, r0.y
mad r0.y, -r0.w, r1.z, r0.y
mad r0.y, cb3[25].w, r0.y, r2.z
mad_sat r0.y, r0.y, cb3[24].z, cb3[24].w
add_sat r0.x, r0.y, r0.x
mul r0.yzw, r2.yyyy, cb0[12].xxyw
mad r0.yzw, cb0[11].xxyw, r2.xxxx, r0.yyzw
mad r0.yzw, cb0[13].xxyw, r2.wwww, r0.yyzw
add r0.yzw, r0.yyzw, cb0[14].xxyw
div r0.yz, r0.yyzy, r0.wwww
lt r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
sample_b r3.xyzw, r0.yzyy, t1.xyzw, s2, l(-8.000000)
mul r0.y, r0.w, r3.w
add r3.xyz, -r2.xywx, cb0[8].xyzx
add r2.xyz, r2.xywx, -r7.xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
mul r0.w, r0.z, cb0[8].w
rsq r0.z, r0.z
sample r4.xyzw, r0.wwww, t2.xyzw, s1
mul r0.y, r0.y, r4.x
mul r0.x, r0.x, r0.y
mul r0.xyw, r0.xxxx, cb0[9].xyxz
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
mad r4.xyz, r3.xyzx, r0.zzzz, -r2.xyzx
mul r3.xyz, r0.zzzz, r3.xyzx
dp3 r0.z, r4.xyzx, r4.xyzx
max r0.z, r0.z, l(0.001000)
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, r4.xyzx
sample r5.xyzw, r1.xyxx, t5.xyzw, s6
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
dp3 r0.z, r5.xyzx, r4.xyzx
dp3 r1.z, r3.xyzx, r4.xyzx
dp3 r1.w, r5.xyzx, r3.xyzx
dp3 r2.x, r5.xyzx, -r2.xyzx
max r2.x, r2.x, l(0.000000)
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, r0.z
sample r3.xyzw, r1.xyxx, t4.xyzw, s5
sample r4.xyzw, r1.xyxx, t3.xyzw, s4
add r5.xyzw, -r3.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r1.x, r5.x, r5.x
mad r1.y, r1.x, r1.x, l(-1.000000)
mad r0.z, r0.z, r1.y, l(1.000000)
mul r1.y, r0.z, l(3.14159274)
mad r0.z, r1.y, r0.z, l(1.000000012E-007)
mul r1.y, r1.x, r1.x
div r0.z, r1.y, r0.z
mad r1.y, -r5.x, r5.x, l(1.000000)
mad r2.y, r2.x, r1.y, r1.x
mad r1.x, r1.w, r1.y, r1.x
mul r1.x, r1.x, r2.x
add r1.y, -r2.x, l(1.000000)
mad r1.x, r1.w, r2.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, l(0.785398185)
max r1.x, r0.z, l(0.000100)
sqrt r1.x, r1.x
eq r2.x, cb0[3].w, l(0.000000)
movc r0.z, r2.x, r1.x, r0.z
mul r0.z, r1.w, r0.z
max r0.z, r0.z, l(0.000000)
dp3 r1.x, r3.xyzx, r3.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.z, r0.z, r1.x
mul r2.xyz, r0.xywx, r0.zzzz
add r0.z, -r1.z, l(1.000000)
mul r1.x, r1.z, r1.z
dp2 r1.x, r1.xxxx, r5.xxxx
add r1.x, r1.x, l(-0.500000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r3.xyz, r5.yzwy, r0.zzzz, r3.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r0.z, r1.y, r1.y
mul r0.z, r0.z, r0.z
mul r0.z, r1.y, r0.z
mad r0.z, r1.x, r0.z, l(1.000000)
add r1.y, -r1.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r1.x, r1.x, r1.y, l(1.000000)
mul r0.z, r0.z, r1.x
mul r0.z, r1.w, r0.z
mul r0.xyz, r0.zzzz, r0.xywx
mad r0.xyz, r4.xyzx, r0.xyzx, r2.xyzx
mov r0.w, l(1.000000)
exp o0.xyzw, -r0.xyzw
ret 
// Approximately 0 instruction slots used