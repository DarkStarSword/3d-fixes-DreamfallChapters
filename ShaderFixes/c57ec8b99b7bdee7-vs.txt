// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c57ec8b99b7bdee7-vs.txt
// 3DMigoto: c57ec8b99b7bdee7 | Matched 6 variants of 6 shaders: Particles/Additive, Particles/Additive (Soft), Particles/Alpha Blended, Particles/Multiply, Particles/Multiply (Double), Particles/~Additive-Multiply
//
// 01:    Unity headers extracted from Particle Add.shader
// 04:    Unity headers extracted from Particle AddMultiply.shader
// 08:    Unity headers extracted from Particle AddSmooth.shader
// 02:    Unity headers extracted from Particle Alpha Blend.shader
// 10:    Unity headers extracted from Particle Multiply.shader
// 20:    Unity headers extracted from Particle MultiplyDouble.shader
// 08:    Shader "Particles/Additive (Soft)" {
// 01:    Shader "Particles/Additive" {
// 02:    Shader "Particles/Alpha Blended" {
// 20:    Shader "Particles/Multiply (Double)" {
// 10:    Shader "Particles/Multiply" {
// 04:    Shader "Particles/~Additive-Multiply" {
//          Properties {
// 07:       _TintColor ("Tint Color", Color) = (0.500000,0.500000,0.500000,0.500000)
//           _MainTex ("Particle Texture", 2D) = "white" { }
//           _InvFade ("Soft Particles Factor", Range(0.010000,3.000000)) = 1.000000
//          }
//          SubShader 1/1 {
//            Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" }
//            Pass 1/1 {
//              Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" }
//              ZWrite Off
//              Cull Off
// 20:          Blend DstColor SrcColor
// 04:          Blend One OneMinusSrcAlpha
// 08:          Blend One OneMinusSrcColor
// 01:          Blend SrcAlpha One
// 02:          Blend SrcAlpha OneMinusSrcAlpha
// 10:          Blend Zero SrcColor
// 2f:          ColorMask RGB
// 10:          GpuProgramID 51568
// 04:          GpuProgramID 14284
// 02:          GpuProgramID 27975
// 08:          GpuProgramID 49473
// 01:          GpuProgramID 58941
// 20:          GpuProgramID 63113
//              Program "vp" {
//                SubProgram "d3d11_9x " {
//                  GpuProgramIndex 8
//                }
//              }
//            }
//          }
//        }
//
// 01: Unity 5.3 headers extracted from Particle Add.shader.decompressed:
// 04: Unity 5.3 headers extracted from Particle AddMultiply.shader.decompressed:
// 08: Unity 5.3 headers extracted from Particle AddSmooth.shader.decompressed:
// 02: Unity 5.3 headers extracted from Particle Alpha Blend.shader.decompressed:
// 10: Unity 5.3 headers extracted from Particle Multiply.shader.decompressed:
// 20: Unity 5.3 headers extracted from Particle MultiplyDouble.shader.decompressed:
//       API d3d11_9x
//       Shader model vs_4_0_level_9_1
//       undeciphered1: 201510240 6 0 0
//       Keywords { "FOG_LINEAR" }
//       undeciphered2: 1 0 3 0 0 0
//       undeciphered3: 13 3 0 0 2 1 3 4
//       ConstBuffer "$Globals" 144
//       Vector 112 [_MainTex_ST]
//       ConstBuffer "UnityPerDraw" 352
//       Matrix 0 [glstate_matrix_mvp]
//       ConstBuffer "UnityFog" 32
//       Vector 16 [unity_FogParams]
//       BindCB "$Globals" 0
//       BindCB "UnityPerDraw" 1
//       BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:53:30 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     z         2     NONE   float     z 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c6         cb2             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mad oT1.xy, v2, c1, c1.zwzw
    mul r0, v0.y, c3
    mad r0, c2, v0.x, r0
    mad r0, c4, v0.z, r0
    add r0, r0, c5
    mad oT1.z, r0.z, c6.z, c6.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT0, v1

// approximately 9 instruction slots used
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.z
dcl_temps 2

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c57ec8b99b7bdee7-vs.txt
ne r1.w, r0.w, l(1.0)
if_nz r1.w
  add r1.w, r0.w, -r1.y
  mad r0.x, r1.w, r1.x, r0.x
endif

mad o2.z, r0.z, cb2[1].z, cb2[1].w
mov o1.xyzw, v1.xyzw
mad o2.xy, v2.xyxx, cb0[7].xyxx, cb0[7].zwzz
ret 
// Approximately 0 instruction slots used