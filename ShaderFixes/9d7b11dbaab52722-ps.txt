// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9d7b11dbaab52722-ps.txt
// 3DMigoto: 9d7b11dbaab52722 |    Unity headers extracted from Standard_River_DepthTest.shader
//    Shader "Dreamfall/Unity5/Standard_River_Depth" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _FoamColor ("Foam Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FoamTex ("Foam Texture", 2D) = "white" { }
//       _FoamBump ("Foam Normal Map", 2D) = "bump" { }
//       _FoamMask ("Foam Mask", 2D) = "white" { }
//       _MaskScale ("Mask Scale", Float) = 1.000000
//       _MaskMin ("Foam Min", Float) = 0.000000
//       _MaskMax ("Foam Max", Float) = 1.000000
//       _ParallaxMap ("Height Map", 2D) = "white" { }
//       _BumpAmt ("BumpAmount", Range(0.000000,1.000000)) = 1.000000
//       _Gloss ("Water Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _Parallax ("Height", Range(-10.000000,10.000000)) = 0.000000
//       _MapTrength ("Parallax Map Strength", Range(-1.000000,1.000000)) = 1.000000
//       _WaterSpeed ("Water Speed1", Float) = 1.000000
//       _WaterSpeed2 ("Water Speed1", Float) = 1.000000
//       _InvFade ("Water Edge", Range(0.010000,3.000000)) = 1.000000
//       _FoamSpeed ("Foam Speed", Float) = 1.000000
//       _FoamBoost ("Foam Boost", Float) = 1.000000
//       _FoamScale ("Foam Scale", Float) = 1.000000
//       _Caustics ("Caustic Amount", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 107039
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 161
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_River_DepthTest.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 174 15 0
//   Keywords { "DIRECTIONAL" "FOG_EXP" }
//   undeciphered2: 1 7 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Float 144 [_BumpAmt]
//   Float 148 [_Gloss]
//   Float 152 [_Metallic]
//   Float 156 [_WaterSpeed]
//   Float 160 [_WaterSpeed2]
//   Float 168 [_MapTrength]
//   Float 172 [_InvFade]
//   Vector 176 [_FoamColor]
//   Float 192 [_FoamSpeed]
//   Float 196 [_FoamBoost]
//   Float 200 [_FoamScale]
//   Float 204 [_MaskMin]
//   Float 208 [_MaskMax]
//   Float 212 [_MaskScale]
//   Vector 224 [_MainTex_TexelSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 6
//   SetTexture 1 [_ParallaxMap] 2D 1
//   SetTexture 2 [_BumpMap] 2D 5
//   SetTexture 3 [_FoamMask] 2D 4
//   SetTexture 4 [_FoamTex] 2D 2
//   SetTexture 5 [_FoamBump] 2D 3
//   SetTexture 6 [_MainTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:37:51 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 7     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9d7b11dbaab52722-ps.txt
mov r9.xyzw, cb1[4].xyzw
mul r10.x, -r8.x, r8.y
mul r11.xyzw, cb10[0].xyzw, r10.xxxx
add r9.xyz, r9.xyz, -r11.xyz

mul r0.xy, v1.xyxx, cb0[13].yyyy
mad r0.z, cb1[0].x, cb0[9].w, r0.y
sample r1.xyzw, r0.xzxx, t3.xyzw, s4
mad r0.w, cb1[0].x, cb0[10].x, r0.y
sample r0.xyzw, r0.xwxx, t3.xyzw, s4
add r0.x, r0.x, r1.x
lt r0.y, cb0[14].y, l(0.000000)
add r0.z, -v6.y, l(1.000000)
movc r1.y, r0.y, r0.z, v6.y
mov r1.x, v6.x
div r0.yz, r1.xxyx, v6.wwww
sample r1.xyzw, r0.yzyy, t0.xyzw, s6
mad r0.y, cb1[7].z, r1.x, cb1[7].w
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.y, r0.y, -v6.z
mul_sat r0.y, r0.y, cb0[10].w
add r0.z, -r0.y, l(1.000000)
add r0.w, r0.z, -cb0[12].w
mul r0.xz, r0.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
add r1.x, -cb0[12].w, cb0[13].x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r0.w, r0.w, r1.x
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
mul r0.x, r0.w, r0.x
mad r1.y, cb1[0].x, cb0[9].w, v1.y
mov r1.xz, v1.xxxx
sample r2.xyzw, r1.xyxx, t2.xyzw, s5
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
mad r1.w, cb1[0].x, cb0[10].x, v1.y
sample r1.xyzw, r1.zwzz, t2.xyzw, s5
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
add r1.xyz, r1.xyzx, r2.xyzx
mad r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r1.xyz, cb0[9].xxxx, r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r0.w, cb0[12].x, cb1[0].x
mad r2.z, v1.y, cb0[12].z, r0.w
mul r3.xyz, r0.wwww, l(0.666666687, 0.500000, 0.333333343, 0.000000)
mul r2.xy, v1.xyxx, cb0[12].zzzz
sample r4.xyzw, r2.xzxx, t5.xyzw, s3
sample r5.xyzw, r2.xzxx, t4.xyzw, s2
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
mad r6.xy, v1.yxyy, cb0[12].zzzz, -r3.xzxx
mad r6.z, v1.x, cb0[12].z, r3.y
mov r2.w, r6.x
sample r3.xyzw, r2.xwxx, t5.xyzw, s3
sample r7.xyzw, r2.xwxx, t4.xyzw, s2
mov r6.w, r2.y
add r2.xyz, r5.xyzx, r7.xyzx
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
add r3.xyz, r3.xyzx, r4.xyzx
sample r4.xyzw, r6.zwzz, t5.xyzw, s3
sample r5.xyzw, r6.zwzz, t4.xyzw, s2
add r2.xyz, r2.xyzx, r5.xyzx
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
add r3.xyz, r3.xyzx, r4.xyzx
sample r4.xyzw, r6.ywyy, t5.xyzw, s3
sample r5.xyzw, r6.ywyy, t4.xyzw, s2
add r2.xyz, r2.xyzx, r5.xyzx
mul r2.xyz, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mul r2.xyz, r2.xyzx, cb0[11].xyzx
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
add r3.xyz, r3.xyzx, r4.xyzx
mad r3.xyz, r3.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), -r1.xyzx
mad r3.xyz, r0.xxxx, r3.xyzx, r1.xyzx
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r4.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
add r4.xyz, -v5.xyzx, r9.xyzx
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mad r5.xyz, r4.xyzx, r1.zzzz, cb2[0].xyzx
mul r4.xyz, r1.zzzz, r4.xyzx
dp3 r1.z, r5.xyzx, r5.xyzx
max r1.z, r1.z, l(0.001000)
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, r5.xyzx
dp3 r1.z, r3.xyzx, r5.xyzx
dp3 r1.w, r3.xyzx, r4.xyzx
dp3 r2.w, cb2[0].xyzx, r5.xyzx
max r2.w, r2.w, l(0.000000)
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.z, r1.z
add r3.x, -cb0[9].y, l(1.000000)
add r3.y, -r3.x, l(1.000000)
mad r3.y, r3.y, l(0.968000), l(0.030000)
log r3.y, r3.y
div r3.y, l(10.000000), r3.y
mul r3.z, r3.y, r3.y
mad r3.y, r3.y, r3.y, l(2.000000)
mul r3.y, r3.y, l(0.159154937)
mul r1.z, r1.z, r3.z
exp r1.z, r1.z
mul r1.z, r3.y, r1.z
mul r3.y, r3.x, r3.x
mul r3.z, r3.y, l(0.797884583)
mad r3.y, -r3.y, l(0.797884583), l(1.000000)
mad r3.w, r0.w, r3.y, r3.z
mad r3.y, r1.w, r3.y, r3.z
add r1.w, -r1.w, l(1.000000)
mad r3.y, r3.w, r3.y, l(0.000010)
div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r3.y
mul r1.z, r1.z, r3.y
mul r1.z, r1.z, l(0.785398185)
max r3.y, r1.z, l(0.000100)
sqrt r3.y, r3.y
eq r3.z, cb0[3].w, l(0.000000)
movc r1.z, r3.z, r3.y, r1.z
mul r1.z, r0.w, r1.z
max r1.z, r1.z, l(0.000000)
mul r3.yzw, r4.yyyy, v3.xxyz
mad r3.yzw, v2.xxyz, r4.xxxx, r3.yyzw
mad r3.yzw, v4.xxyz, r4.zzzz, r3.yyzw
dp3 r4.x, r3.yzwy, r3.yzwy
rsq r4.x, r4.x
mul r3.yz, r3.yyzy, r4.xxxx
mad r3.w, r3.w, r4.x, l(0.420000)
div r3.yz, r3.yyzy, r3.wwww
sample r4.xyzw, v1.xyxx, t1.xyzw, s1
mul r3.w, r4.x, cb0[10].z
mul r3.w, r3.w, l(0.500000)
mad r3.yz, r3.wwww, r3.yyzy, r0.yyyy
add r3.yz, r3.yyzy, v1.xxyx
add r1.xy, r1.xyxx, r3.yzyy
sample r4.xyzw, r1.xyxx, t6.xyzw, s0
mul r3.yzw, r4.xxyz, cb0[8].xxyz
mad r2.xyz, r2.xyzx, cb0[12].yyyy, -r3.yzwy
mad r2.xyz, r0.xxxx, r2.xyzx, r3.yzwy
mad r3.yzw, r2.xxyz, r0.zzzz, -cb0[2].xxyz
mul r0.xyz, r0.zzzz, r2.xyzx
mad r2.xyz, cb0[9].zzzz, r3.yzwy, cb0[2].xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r1.x, r1.x, r1.z
mul r1.xyz, r1.xxxx, cb0[6].xyzx
add r3.yzw, -r2.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
add r4.x, -r2.w, l(1.000000)
mul r2.w, r2.w, r2.w
dp2 r2.w, r2.wwww, r3.xxxx
add r2.w, r2.w, l(-0.500000)
mul r3.x, r4.x, r4.x
mul r3.x, r3.x, r3.x
mul r3.x, r4.x, r3.x
mad r2.xyz, r3.yzwy, r3.xxxx, r2.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
mad r2.x, -cb0[9].z, cb0[2].w, cb0[2].w
mul r0.xyz, r0.xyzx, r2.xxxx
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
mad r1.w, r2.w, r1.w, l(1.000000)
add r2.x, -r0.w, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.x, r2.y
mad r2.x, r2.w, r2.x, l(1.000000)
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
mul r2.xyz, r0.wwww, cb0[6].xyzx
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mul r0.w, v1.z, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used