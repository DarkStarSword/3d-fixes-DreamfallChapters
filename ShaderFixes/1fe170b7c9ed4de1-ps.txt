// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1fe170b7c9ed4de1-ps.txt
// 3DMigoto: 1fe170b7c9ed4de1 |    Unity headers extracted from Standard_VertexBlend_2Tex.shader
//    Shader "Dreamfall/Unity5/Standard_VertexBlend_2Tex" {
//      Properties {
//       _Col ("Tint Color 1", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Col2 ("Tint Color 2", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base", 2D) = "black" { }
//       _2ndTex ("2nd - vertex Red", 2D) = "black" { }
//       _Bump1 ("_Bump Base", 2D) = "bump" { }
//       _Bump2 ("_Bump 2nd", 2D) = "bump" { }
//       _NoiseTex ("VertexColor Noise (RGB)", 2D) = "black" { }
//       _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//       _2ndMainAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//       _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//       _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//       _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//       _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 33215
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 84
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_VertexBlend_2Tex.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 188 9 6
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 9 6 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 128 [_MainAlphaFactor]
//   Float 132 [_2ndAlphaFactor]
//   Float 136 [_MainGloss]
//   Float 140 [_2ndGloss]
//   Float 144 [_MainMetallness]
//   Float 148 [_2ndMetallness]
//   Vector 160 [_Col]
//   Vector 176 [_Col2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NoiseTex] 2D 7
//   SetTexture 1 [_MainTex] 2D 3
//   SetTexture 2 [_2ndTex] 2D 4
//   SetTexture 3 [_Bump1] 2D 5
//   SetTexture 4 [_Bump2] 2D 6
//   SetTexture 5 [_DitherMaskLOD2D] 2D 2
//   SetTexture 6 [unity_SpecCube0] CUBE 0
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:02:23 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   x   
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1fe170b7c9ed4de1-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.zwzz, t0.xyzw, s7
mad r1.w, v5.x, l(2.000000), l(-1.000000)
add_sat r1.w, r3.x, r1.w
sample r3.xyzw, v1.xyxx, t1.xyzw, s3
mul r3.xyzw, r3.xyzw, cb0[10].xyzw
sample r4.xyzw, v1.xyxx, t2.xyzw, s4
mad r4.xyzw, r4.xyzw, cb0[11].xyzw, -r3.xyzw
mad r3.xyzw, r1.wwww, r4.xyzw, r3.xyzw
sample r4.xyzw, v1.xyxx, t3.xyzw, s5
sample r5.xyzw, v1.xyxx, t4.xyzw, s6
add r4.xz, -r4.wwyw, r5.wwyw
mad r4.xy, r1.wwww, r4.xzxx, r4.wyww
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
max r5.xy, r3.wwww, cb0[8].xyxx
mul r2.w, r5.x, cb0[8].z
mad r3.w, cb0[8].w, r5.y, -r2.w
mad r2.w, r1.w, r3.w, r2.w
add r3.w, -cb0[9].x, cb0[9].y
mad r1.w, r1.w, r3.w, cb0[9].x
div r5.xy, v6.xyxx, v6.zzzz
frc r3.w, r5.y
mad r5.z, r3.w, l(0.062500), cb3[20].y
sample r5.xyzw, r5.xzxx, t5.xyzw, s2
add r3.w, r5.w, l(-0.500000)
lt r3.w, r3.w, l(0.000000)
discard_nz r3.w
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r3.w, r5.xyzx, cb2[0].xyzx
max r3.w, r3.w, l(0.000000)
add r4.x, -r2.w, l(1.000000)
dp3 r4.y, -r2.xyzx, r5.xyzx
add r4.y, r4.y, r4.y
mad r4.yzw, r5.xxyz, -r4.yyyy, -r2.xxyz
eq r6.x, cb5[0].x, l(1.000000)
if_nz r6.x
  eq r6.x, cb5[0].y, l(1.000000)
  mul r6.yzw, v3.wwww, cb5[2].xxyz
  mad r6.yzw, cb5[1].xxyz, v2.wwww, r6.yyzw
  mad r6.yzw, cb5[3].xxyz, v4.wwww, r6.yyzw
  add r6.yzw, r6.yyzw, cb5[4].xxyz
  movc r6.xyz, r6.xxxx, r6.yzwy, r0.xyzx
  add r6.xyz, r6.xyzx, -cb5[6].xyzx
  mul r6.yzw, r6.xxyz, cb5[5].xxyz
  mul r6.y, r6.y, l(0.250000)
  mul r7.x, cb5[0].z, l(0.500000)
  mad r7.y, -cb5[0].z, l(0.500000), l(0.250000)
  max r6.y, r6.y, r7.x
  min r6.x, r7.y, r6.y
  sample r7.xyzw, r6.xzwx, t8.xyzw, s1
  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t8.xyzw, s1
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t8.xyzw, s1
  mov r5.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r5.xyzw
  dp4 r7.y, r8.xyzw, r5.xyzw
  dp4 r7.z, r6.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r5.xyzw
  dp4 r7.y, cb2[39].xyzw, r5.xyzw
  dp4 r7.z, cb2[40].xyzw, r5.xyzw
endif 
add r6.xyz, r7.xyzx, v7.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r5.w, cb0[3].w, l(0.000000)
log r7.xyz, r6.xyzx
mul r7.xyz, r7.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r7.xyz, r7.xyzx
mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r6.xyz, r5.wwww, r7.xyzx, r6.xyzx
lt r6.w, l(0.000000), cb4[2].w
if_nz r6.w
  dp3 r6.w, r4.yzwy, r4.yzwy
  rsq r6.w, r6.w
  mul r7.xyz, r4.yzwy, r6.wwww
  add r8.xyz, -r0.xyzx, cb4[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb4[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r6.w, r8.y, r8.x
  min r6.w, r8.z, r6.w
  add r8.xyz, r0.xyzx, -cb4[2].xyzx
  mad r7.xyz, r7.xyzx, r6.wwww, r8.xyzx
else 
  mov r7.xyz, r4.yzwy
endif 
log r6.w, r4.x
mul r6.w, r6.w, l(0.750000)
exp r6.w, r6.w
mad r7.w, -r6.w, l(0.700000), l(1.700000)
mul r6.w, r6.w, r7.w
mul r6.w, r6.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r6.w
log r7.w, r7.w
mul r7.w, r7.w, cb4[3].y
exp r7.w, r7.w
mul r7.w, r7.w, cb4[3].x
mul r8.xyz, r7.xyzx, r7.wwww
lt r8.w, cb4[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb4[6].w
  if_nz r8.w
    dp3 r8.w, r4.yzwy, r4.yzwy
    rsq r8.w, r8.w
    mul r9.xyz, r4.yzwy, r8.wwww
    add r10.xyz, -r0.xyzx, cb4[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb4[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r8.w, r10.y, r10.x
    min r8.w, r10.z, r8.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r4.yzw, r9.xxyz, r8.wwww, r0.xxyz
  endif 
  sample_l r9.xyzw, r4.yzwy, t7.xyzw, s0, r6.w
  log r0.x, r9.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r4.yzw, r7.wwww, r7.xxyz, -r0.xxyz
  mad r8.xyz, cb4[1].wwww, r4.yzwy, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
add r4.yzw, r3.xxyz, -cb0[2].xxyz
mad r4.yzw, r1.wwww, r4.yyzw, cb0[2].xxyz
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r4.x, r4.x
mul r1.x, r0.z, l(0.797884583)
mad r1.y, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r3.w, r1.y, r1.x
mad r1.x, r0.x, r1.y, r1.x
mad r1.x, r1.z, r1.x, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r4.x, l(1.000000)
mad r1.y, r1.y, l(0.968000), l(0.030000)
log r1.y, r1.y
div r1.y, l(10.000000), r1.y
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.y, l(2.000000)
mul r1.y, r1.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
mul r0.w, r1.y, r0.w
add r1.y, -r3.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r4.xxxx
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r5.w, r1.x, r0.w
mul r0.w, r3.w, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r3.w, r1.y
mul r1.y, r0.z, r4.x
mad r1.y, -r1.y, l(0.280000), l(1.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
movc r0.z, r5.w, r1.y, r0.z
dp3 r1.y, r4.yzwy, r4.yzwy
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
add r1.y, -r1.w, r2.w
add_sat r1.y, r1.y, l(1.000000)
mad r1.xzw, cb0[6].xxyz, r1.xxxx, r6.xxyz
mul r2.xyz, r0.wwww, cb0[6].xyzx
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r5.xyz, -r4.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, r4.yzwy
mul r2.xyz, r2.xyzx, r5.xyzx
mad r1.xzw, r3.xxyz, r1.xxzw, r2.xxyz
mul r0.yzw, r8.xxyz, r0.zzzz
add r2.xyz, -r4.yzwy, r1.yyyy
mad r2.xyz, r0.xxxx, r2.xyzx, r4.yzwy
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used