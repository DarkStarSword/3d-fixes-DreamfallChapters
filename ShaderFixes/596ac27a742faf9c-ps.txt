// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 596ac27a742faf9c-ps.txt
// 3DMigoto: 596ac27a742faf9c |    Unity headers extracted from Standard_DirectionBlend.shader
//    Shader "Dreamfall/Unity5/Standard_DirectionBlend" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _BlendColor ("Blend Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//       _BlendTile ("Blend Map Tile Factor", Float) = 1.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _Boost ("Fresnel Boost", Float) = 1.000000
//       _Direction ("Direction", Vector) = (0.000000,1.000000,0.000000,1.000000)
//       _Adjust ("Fresnel Adjust", Range(-1.000000,1.000000)) = 0.000000
//       _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//       _2ndAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//       _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//       _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//       _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//       _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Specular"
//      SubShader 1/3 {
//        LOD 1500
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 64821
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 97
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_DirectionBlend.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 151 9 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 11 7 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Vector 144 [_BlendColor]
//   Vector 160 [_Direction]
//   Float 176 [_Adjust]
//   Float 180 [_Boost]
//   Float 184 [_BlendTile]
//   Float 188 [_MainAlphaFactor]
//   Float 192 [_2ndAlphaFactor]
//   Float 196 [_MainGloss]
//   Float 200 [_2ndGloss]
//   Float 204 [_MainMetallness]
//   Float 208 [_2ndMetallness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_BlendTex] 2D 6
//   SetTexture 2 [_Detail] 2D 7
//   SetTexture 3 [_BumpMap] 2D 5
//   SetTexture 4 [_DetailBump] 2D 8
//   SetTexture 5 [_BlendBump] 2D 9
//   SetTexture 6 [_DitherMaskLOD2D] 2D 2
//   SetTexture 7 [_ShadowMapTexture] 2D 3
//   SetTexture 8 [unity_Lightmap] 2D 0
//   SetTexture 9 [unity_SpecCube0] CUBE 1
//   SetTexture 10 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerDraw" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:17:14 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 7      w        5     NONE   float      w
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xy
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 596ac27a742faf9c-ps.txt
mov r13.xyzw, cb1[4].xyzw
mul r14.x, -r12.x, r12.y
mul r15.xyzw, cb10[0].xyzw, r14.xxxx
add r13.xyz, r13.xyz, -r15.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r13.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s4
mul r3.xy, v1.xyxx, cb0[11].zzzz
sample r4.xyzw, r3.xyxx, t1.xyzw, s6
sample r5.xyzw, v1.zwzz, t2.xyzw, s7
mul r5.xyz, r5.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000)
min r5.xyz, r5.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000)
add r5.xyz, r5.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
mul r2.xyz, r2.xyzx, r5.xyzx
sample r5.xyzw, v1.xyxx, t3.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
sample r6.xyzw, v1.zwzz, t4.xyzw, s8
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
add r5.xyz, r5.xyzx, r6.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r5.xyzx
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
add r7.xyz, r7.xyzx, -cb0[11].xxxx
dp3_sat r1.w, r7.xyzx, cb0[10].xyzx
mul_sat r1.w, r1.w, cb0[11].y
mul r7.xyz, r2.xyzx, cb0[8].xyzx
mad r8.xyz, r4.xyzx, cb0[9].xyzx, -r7.xyzx
mad r7.xyz, r1.wwww, r8.xyzx, r7.xyzx
sample r3.xyzw, r3.xyxx, t5.xyzw, s9
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r3.z, r2.w
mad r3.xyz, -r5.xyzx, r0.wwww, r3.xyzx
mad r3.xyz, r1.wwww, r3.xyzx, r6.xyzx
add r0.w, r2.y, r2.x
mad r0.w, r2.z, l(0.333333343), r0.w
max r0.w, r0.w, cb0[11].w
mul r0.w, r0.w, cb0[12].y
add r2.x, r4.y, r4.x
mad r2.x, r4.z, l(0.333333343), r2.x
max r2.x, r2.x, cb0[12].x
mad r2.x, cb0[12].z, r2.x, -r0.w
mad r0.w, r1.w, r2.x, r0.w
add r2.x, -cb0[12].w, cb0[13].x
mad r1.w, r1.w, r2.x, cb0[12].w
div r2.xy, v5.xyxx, v5.zzzz
frc r2.y, r2.y
mad r2.z, r2.y, l(0.062500), cb4[20].y
sample r2.xyzw, r2.xzxx, t6.xyzw, s2
add r2.x, r2.w, l(-0.500000)
lt r2.x, r2.x, l(0.000000)
discard_nz r2.x
div r2.xy, v7.xyxx, v7.wwww
sample r2.xyzw, r2.xyxx, t7.xyzw, s3
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
add r2.y, -r0.w, l(1.000000)
dp3 r2.z, -r1.xyzx, r4.xyzx
add r2.z, r2.z, r2.z
mad r3.xyz, r4.xyzx, -r2.zzzz, -r1.xyzx
sample r5.xyzw, v6.xyxx, t8.xyzw, s0
log r2.z, r5.w
mul r2.z, r2.z, cb0[4].y
exp r2.z, r2.z
mul r2.z, r2.z, cb0[4].x
mul r6.xyz, r5.xyzx, r2.zzzz
dp3_sat r2.w, r4.xyzx, cb2[0].xyzx
add r3.w, -r2.x, l(1.000000)
mul r2.w, r2.w, r3.w
mad r8.xyz, -r2.wwww, cb0[6].xyzx, r6.xyzx
mul r9.xyz, r2.xxxx, r5.xyzx
max r8.xyz, r8.xyzx, r9.xyzx
mad r2.xzw, r2.zzzz, r5.xxyz, -r8.xxyz
mad r2.xzw, cb3[24].xxxx, r2.xxzw, r8.xxyz
min r2.xzw, r2.xxzw, r6.xxyz
lt r3.w, l(0.000000), cb6[2].w
if_nz r3.w
  dp3 r3.w, r3.xyzx, r3.xyzx
  rsq r3.w, r3.w
  mul r5.xyz, r3.wwww, r3.xyzx
  add r6.xyz, -r0.xyzx, cb6[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r8.xyz, -r0.xyzx, cb6[1].xyzx
  div r8.xyz, r8.xyzx, r5.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r9.xyzx, r6.xyzx, r8.xyzx
  min r3.w, r6.y, r6.x
  min r3.w, r6.z, r3.w
  add r6.xyz, r0.xyzx, -cb6[2].xyzx
  mad r5.xyz, r5.xyzx, r3.wwww, r6.xyzx
else 
  mov r5.xyz, r3.xyzx
endif 
log r3.w, r2.y
mul r3.w, r3.w, l(0.750000)
exp r3.w, r3.w
mad r4.w, -r3.w, l(0.700000), l(1.700000)
mul r3.w, r3.w, r4.w
mul r3.w, r3.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t9.xyzw, s1, r3.w
log r4.w, r5.w
mul r4.w, r4.w, cb6[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb6[3].x
mul r6.xyz, r5.xyzx, r4.wwww
lt r5.w, cb6[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb6[6].w
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r8.xyz, r3.xyzx, r5.wwww
    add r9.xyz, -r0.xyzx, cb6[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -r0.xyzx, cb6[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r5.w, r9.y, r9.x
    min r5.w, r9.z, r5.w
    add r0.xyz, r0.xyzx, -cb6[6].xyzx
    mad r3.xyz, r8.xyzx, r5.wwww, r0.xyzx
  endif 
  sample_l r3.xyzw, r3.xyzx, t10.xyzw, s1, r3.w
  log r0.x, r3.w
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r0.xyz, r3.xyzx, r0.xxxx
  mad r3.xyz, r4.wwww, r5.xyzx, -r0.xyzx
  mad r6.xyz, cb6[1].wwww, r3.xyzx, r0.xyzx
endif 
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
add r3.xyz, r7.xyzx, -cb0[2].xyzx
mad r3.xyz, r1.wwww, r3.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r4.xyz, r1.wwww, r7.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r2.y, r2.y
eq r0.z, cb0[3].w, l(0.000000)
mul r1.x, r0.y, r2.y
mad r1.x, -r1.x, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r1.x, r0.y
add r0.z, r0.w, -r1.w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r6.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r3.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r4.xyzx, r2.xzwx, r0.xyzx
mad_sat r0.w, v5.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used