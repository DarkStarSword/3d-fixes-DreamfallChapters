// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed a5a9346f83049c18-ps.txt
// 3DMigoto: a5a9346f83049c18 |    Unity headers extracted from Internal-PrePassLighting.shader
//    Shader "Hidden/Internal-PrePassLighting" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 3/3 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 133957
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 103
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Internal-PrePassLighting.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 69 7 0
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 5 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 128 [_LightPos]
//   Vector 144 [_LightColor]
//   Vector 160 [unity_LightmapFade]
//   Vector 240 [_CameraNormalsTexture_ST]
//   Matrix 176 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 720
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_LightTextureB0] 2D 1
//   SetTexture 2 [_ShadowMapTexture] CUBE 3
//   SetTexture 3 [_LightTexture0] CUBE 2
//   SetTexture 4 [_CameraNormalsTexture] 2D 4
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityShadows" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:40:25 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed a5a9346f83049c18-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

div r0.xy, v1.xyxx, v1.wwww
sample r1.xyzw, r0.xyxx, t0.xyzw, s0
mad r0.xy, r0.xyxx, cb0[15].xyxx, cb0[15].zwzz
sample r0.xyzw, r0.xyxx, t4.xyzw, s4
mad r1.x, cb1[7].x, r1.x, cb1[7].y
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
div r1.y, cb1[5].z, v2.z
mul r1.yzw, r1.yyyy, v2.xxyz
mul r2.xyz, r1.xxxx, r1.yzwy

// copy depth from r2.z to r10.x:
mov r10.x, r2.z

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed a5a9346f83049c18-ps.txt

add r11.x, r10.x, -r6.y
mul r11.x, r6.x, r11.x
mul r12.xyzw, cb10[0].xyzw, r11.xxxx
add r2.xyw, r2.xyzw, -r12.xyxz

add r3.xyz, r2.xywx, -cb0[8].xyzx
add r4.xyz, r3.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
sample r4.xyzw, r4.xyzx, t2.xyzw, s3
add r5.xyz, r3.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
sample r5.xyzw, r5.xyzx, t2.xyzw, s3
mov r4.y, r5.x
add r5.xyz, r3.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
sample r5.xyzw, r5.xyzx, t2.xyzw, s3
mov r4.z, r5.x
add r5.xyz, r3.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
sample r5.xyzw, r5.xyzx, t2.xyzw, s3
mov r4.w, r5.x
dp3 r1.y, r3.xyzx, r3.xyzx
sqrt r1.z, r1.y
mul r1.z, r1.z, cb3[1].w
mul r1.z, r1.z, l(0.970000)
lt r4.xyzw, r4.xyzw, r1.zzzz
movc r4.xyzw, r4.xyzw, cb4[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
dp4 r1.z, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
mul r3.w, r1.y, cb0[8].w
rsq r1.y, r1.y
mul r3.xyz, r1.yyyy, r3.xyzx
sample r4.xyzw, r3.wwww, t1.xyzw, s1
mul r1.y, r1.z, r4.x
mul r4.xyz, r2.yyyy, cb0[12].xyzx
mad r4.xyz, cb0[11].xyzx, r2.xxxx, r4.xyzx
mad r4.xyz, cb0[13].xyzx, r2.wwww, r4.xyzx
add r4.xyz, r4.xyzx, cb0[14].xyzx
sample_b r4.xyzw, r4.xyzx, t3.xyzw, s2, l(-8.000000)
mul r1.y, r1.y, r4.w
mov_sat r1.z, r1.y
add r4.xyz, r2.xywx, -r7.xyzx
add r2.xyw, r2.xyxw, -cb4[25].xyxz
dp3 r2.x, r2.xywx, r2.xywx
sqrt r2.x, r2.x
mad r1.x, -r1.w, r1.x, r2.x
mad r1.x, cb4[25].w, r1.x, r2.z
mad r1.x, r1.x, cb0[10].z, cb0[10].w
add_sat r1.x, -r1.x, l(1.000000)
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mad r2.xyz, -r4.xyzx, r1.wwww, -r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r0.w, r0.w, l(128.000000)
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
dp3 r1.w, r2.xyzx, r0.xyzx
dp3 r0.x, -r3.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.x, r1.y, r0.x
mul r2.yzw, r0.xxxx, cb0[9].xxyz
max r0.x, r1.w, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.w
exp r0.x, r0.x
mul r0.x, r1.z, r0.x
mul r0.yzw, cb0[3].xxyz, cb0[9].xxyz
add r0.yw, r0.zzzw, r0.yyyy
mul r0.z, r0.w, r0.z
mad r0.y, cb0[9].z, cb0[3].z, r0.y
sqrt r0.z, r0.z
dp2 r0.z, cb0[3].wwww, r0.zzzz
add r0.y, r0.z, r0.y
mul r2.x, r0.y, r0.x
mul o0.xyzw, r1.xxxx, r2.xyzw
ret 
// Approximately 0 instruction slots used