// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 14359437b478e765-ps.txt
// 3DMigoto: 14359437b478e765 |    Unity headers extracted from ghost_diffuse.shader
//    Shader "Character/Ghost Shader" {
//      Properties {
//       _MainTex ("Texture", 2D) = "white" { }
//       _RimColor ("Rim Color", Color) = (0.460000,0.000000,1.000000,0.000000)
//       _RimPower ("Rim Power", Range(0.200000,2.000000)) = 0.500000
//       _Brightness ("Brightness", Range(0.000000,3.000000)) = 1.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 93032
//          Program "fp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 95
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ghost_diffuse.shader.decompressed:
//   API d3d11_9x
//   Shader model ps_4_0_level_9_1
//   undeciphered1: 201510240 24 2 0
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 2 3 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 96 [_LightColor0]
//   Vector 192 [_RimColor]
//   Float 208 [_RimPower]
//   Float 212 [_Brightness]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:59:13 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             8         6  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c8         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, 0.300000012, 0.589999974, 0.109999999, 1
    def c10, 0.333333343, 0, 0, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl t2.xyz
    dcl_2d s0
    dcl_2d s1
    mul r0.xy, t2.y, c2
    mad r0.xy, c1, t2.x, r0
    mad r0.xy, c3, t2.z, r0
    add r0.xy, r0, c4
    texld_pp r1, t0, s1
    texld_pp r0, r0, s0
    mul_pp r0.xyz, r0.w, c0
    dp3_pp r0.w, r1, c9
    mul_pp r0.xyz, r0, r0.w
    dp3_pp r0.w, t1, c8
    max_pp r1.x, r0.w, c10.y
    mul_pp r0.xyz, r0, r1.x
    add r1.xyz, -t2, c7
    nrm_pp r2.xyz, r1
    dp3_sat r1.x, r2, t1
    add_pp r1.x, -r1.x, c9.w
    pow r2.x, r1.x, c6.x
    mul r1.xyz, r2.x, c5
    mul_pp r1.xy, r1, c6.y
    add_pp r1.x, r1.y, r1.x
    mad_pp r1.x, r1.z, c6.y, r1.x
    mul_pp r0.w, r1.x, c10.x
    mov_pp oC0, r0

// approximately 27 instruction slots used (2 texture, 25 arithmetic)
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 4
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 14359437b478e765-ps.txt

mul r2.w, -r2.x, r2.y
mad r3.xyz, -r2.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.x, r0.xyzx, v2.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[13].x
exp r0.x, r0.x
mul r0.xyz, r0.xxxx, cb0[12].xyzx
mul r0.xy, r0.xyxx, cb0[13].yyyy
add r0.x, r0.y, r0.x
mad r0.x, r0.z, cb0[13].y, r0.x
mul o0.w, r0.x, l(0.333333343)
mul r0.xy, v3.yyyy, cb0[9].xyxx
mad r0.xy, cb0[8].xyxx, v3.xxxx, r0.xyxx
mad r0.xy, cb0[10].xyxx, v3.zzzz, r0.xyxx
add r0.xy, r0.xyxx, cb0[11].xyxx
sample r0.xyzw, r0.xyxx, t1.xyzw, s0
mul r0.xyz, r0.wwww, cb0[6].xyzx
sample r1.xyzw, v1.xyxx, t0.xyzw, s1
dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.xyz, r0.xyzx, r0.wwww
dp3 r0.w, v2.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul o0.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 0 instruction slots used