// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 01482731283ec21a-vs.txt
// 3DMigoto: 01482731283ec21a |    Unity headers extracted from BillboardTree.shader
//    Shader "Hidden/TerrainEngine/BillboardTree" {
//      Properties {
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent-100" "IGNOREPROJECTOR"="true" "RenderType"="TreeBillboard" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent-100" "IGNOREPROJECTOR"="true" "RenderType"="TreeBillboard" }
//          ZWrite Off
//          Cull Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 33260
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 5
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BillboardTree.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 16 0 0
//   Keywords { "FOG_LINEAR" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 29 4 0 0 2 1 3 4 4 5
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityTerrain" 272
//   Vector 196 [_TreeBillboardCameraRight] 3
//   Vector 208 [_TreeBillboardCameraUp]
//   Vector 224 [_TreeBillboardCameraFront]
//   Vector 240 [_TreeBillboardCameraPos]
//   Vector 256 [_TreeBillboardDistances]
//   BindCB "UnityPerDraw" 0
//   BindCB "UnityFog" 1
//   BindCB "UnityTerrain" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:00:43 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     z         2     NONE   float     z 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         4  ( FLT, FLT, FLT, FLT)
// c5         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c6         cb2            12         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c11, 0, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    slt oT1.y, c11.x, v2.y
    add r0.xyz, v0, -c9
    dp3 r0.x, r0, r0
    slt r0.x, c10.x, r0.x
    mov r1.xy, v3
    mov r1.z, v2.y
    mad r0.xyz, r0.x, -r1, r1
    mad r1.xyz, c6.yzww, r0.x, v0
    lrp r1.w, c9.w, r0.z, r0.y
    abs r0.x, r0.x
    mul r0.xyz, r0.x, c8
    mad r1.xyz, c7, r1.w, r1
    mad r0.xyz, r0, c7.w, r1
    mul r1, r0.y, c2
    mad r1, c1, r0.x, r1
    mad r0, c3, r0.z, r1
    add r0, r0, c4
    mad oT1.z, r0.z, c5.z, c5.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT0, v1
    mov oT1.x, v2.x

// approximately 22 instruction slots used
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[2], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.z
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, -cb2[15].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
lt r0.x, cb2[16].x, r0.x
mov r1.xy, v3.xyxx
mov r1.z, v2.y
movc r0.xyz, r0.xxxx, l(0,0,0,0), r1.xyzx
add r0.z, -r0.y, r0.z
mad r0.y, cb2[15].w, r0.z, r0.y
mad r1.xyz, cb2[12].yzwy, r0.xxxx, v0.xyzx
mul r0.xzw, |r0.xxxx|, cb2[14].xxyz
mad r1.xyz, cb2[13].xyzx, r0.yyyy, r1.xyzx
mad r0.xyz, r0.xzwx, cb2[13].wwww, r1.xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 01482731283ec21a-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mad o2.z, r0.z, cb1[1].z, cb1[1].w
mov o1.xyzw, v1.xyzw
lt r0.x, l(0.000000), v2.y
and o2.y, r0.x, l(0x3f800000)
mov o2.x, v2.x
ret 
// Approximately 0 instruction slots used