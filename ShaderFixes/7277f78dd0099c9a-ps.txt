// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7277f78dd0099c9a-ps.txt
// 3DMigoto: 7277f78dd0099c9a |    Unity headers extracted from Standard_BumpedDetail_Cutout.shader
//    Shader "Dreamfall/Unity5/Standard_BumpedDetail_Cutout" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _DetailBumpFactor ("Detail Bump Ammount", Range(0.000000,1.000000)) = 1.000000
//       _AlphaFactor ("Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _GlossHigh ("Glossy High", Range(0.000000,1.000000)) = 0.800000
//       _GlossLow ("Glossy Low", Range(0.000000,1.000000)) = 0.200000
//       _Metallness ("Metallness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNesAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _VColorMult ("Vertex Color Strength", Range(0.000000,1.000000)) = 0.000000
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 54604
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 69
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BumpedDetail_Cutout.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 125 5 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 7 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Float 128 [_NormalMul]
//   Vector 144 [_Color]
//   Float 160 [_DetailBumpFactor]
//   Float 164 [_AlphaFactor]
//   Float 168 [_GlossHigh]
//   Float 172 [_GlossLow]
//   Float 176 [_MetalNesAlphaFactor]
//   Float 180 [_Metallness]
//   Float 184 [_VColorMult]
//   Float 240 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_Detail] 2D 4
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_DetailBump] 2D 5
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:24:30 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 8     z         2     NONE   float     z 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyz 
// TEXCOORD                 5   xyzw        7     NONE   float       
// TEXCOORD                 6   xyzw        8     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v8.xy
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7277f78dd0099c9a-ps.txt
mov r15.xyzw, cb1[4].xyzw
mul r16.x, -r14.x, r14.y
mul r17.xyzw, cb10[0].xyzw, r16.xxxx
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v3.w
mov r0.y, v4.w
mov r0.z, v5.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
add r0.w, -cb0[11].z, l(1.000000)
add r2.xyz, -v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, v6.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
sample r4.xyzw, v2.xyxx, t1.xyzw, s4
mul r4.xyzw, r4.xyzw, l(1.800000, 1.800000, 1.800000, 1.800000)
min r4.xyzw, r4.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
add r4.xyzw, r4.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)
mul r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r3.xyzw, cb0[9].xyzw
mul r5.xyz, r2.xyzx, r4.xyzx
sample r6.xyzw, v1.zwzz, t2.xyzw, s3
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[8].xxxx
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
sample r7.xyzw, v2.xyxx, t3.xyzw, s5
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r7.xyxx, cb0[8].xxxx
dp2 r0.w, r7.xyxx, r7.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r7.z, r0.w
mad r6.xyz, r7.xyzx, cb0[10].xxxx, r6.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
add r3.xy, r3.ywyy, r3.xwxx
mad r0.w, r3.z, l(0.333333343), r3.x
add r1.w, -r0.w, cb0[10].z
mad r0.w, cb0[10].w, r1.w, r0.w
max r1.w, r3.w, cb0[10].y
max r2.w, r3.y, cb0[11].x
min r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, cb0[11].y
mad r3.x, r3.w, cb0[9].w, -cb0[15].x
lt r3.x, r3.x, l(0.000000)
discard_nz r3.x
dp3 r3.x, v3.xyzx, r6.xyzx
dp3 r3.y, v4.xyzx, r6.xyzx
dp3 r3.z, v5.xyzx, r6.xyzx
mad r3.w, -r0.w, r1.w, l(1.000000)
dp3 r5.w, -r1.xyzx, r3.xyzx
add r5.w, r5.w, r5.w
mad r6.xyz, r3.xyzx, -r5.wwww, -r1.xyzx
sample r7.xyzw, v8.xyxx, t4.xyzw, s0
log r5.w, r7.w
mul r5.w, r5.w, cb0[4].y
exp r5.w, r5.w
mul r5.w, r5.w, cb0[4].x
mul r7.xyz, r7.xyzx, r5.wwww
lt r5.w, l(0.000000), cb3[2].w
if_nz r5.w
  dp3 r5.w, r6.xyzx, r6.xyzx
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r6.xyzx
  add r9.xyz, -r0.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r5.w, r9.y, r9.x
  min r5.w, r9.z, r5.w
  add r9.xyz, r0.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
else 
  mov r8.xyz, r6.xyzx
endif 
log r5.w, r3.w
mul r5.w, r5.w, l(0.750000)
exp r5.w, r5.w
mad r6.w, -r5.w, l(0.700000), l(1.700000)
mul r5.w, r5.w, r6.w
mul r5.w, r5.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r5.w
log r6.w, r8.w
mul r6.w, r6.w, cb3[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb3[3].x
mul r9.xyz, r8.xyzx, r6.wwww
lt r7.w, cb3[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb3[6].w
  if_nz r7.w
    dp3 r7.w, r6.xyzx, r6.xyzx
    rsq r7.w, r7.w
    mul r10.xyz, r6.xyzx, r7.wwww
    add r11.xyz, -r0.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r6.xyz, r10.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l r10.xyzw, r6.xyzx, t6.xyzw, s1, r5.w
  log r0.x, r10.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r6.xyz, r6.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb3[1].wwww, r6.xyzx, r0.xyzx
endif 
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r3.xyzx
mad r2.xyz, r4.xyzx, r2.xyzx, -cb0[2].xyzx
mad r2.xyz, r2.wwww, r2.xyzx, cb0[2].xyzx
mad r2.w, -r2.w, cb0[2].w, cb0[2].w
mul r3.xyz, r2.wwww, r5.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r3.w, r3.w
eq r0.z, cb0[3].w, l(0.000000)
mul r1.x, r0.y, r3.w
mad r1.x, -r1.x, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r1.x, r0.y
mad r0.z, r0.w, r1.w, -r2.w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r9.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r2.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r3.xyzx, r7.xyzx, r0.xyzx
mad_sat r0.w, v2.z, cb2[1].z, cb2[1].w
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, r4.w
ret 
// Approximately 0 instruction slots used