// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 489f68180a5c441a-ps.txt
// 3DMigoto: 489f68180a5c441a |    Unity headers extracted from Reflect-Parallax_Fresnel_Illum_Window.shader
//    Shader "Self-Illumin/Dreamfall/Reflective/Fresnel/Parallax Diffuse Illum Window" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.010000,6.000000)) = 1.000000
//       _Parallax ("Height", Range(-10.000000,10.000000)) = 0.000000
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _IllumMap ("IllumMap (RGB)", 2D) = "black" { }
//       _IllumMask ("IllumMask (RGB)", 2D) = "white" { }
//       _IllumMapScale ("Illum Map Scale", Float) = 1.000000
//       _IllumMaskScale ("Illum Mask Scale", Float) = 1.000000
//       _IllumMaskOffset ("Illum Mask Offset", Float) = 1.000000
//       _IllumDepth ("IllumDepth", Float) = 0.400000
//       _IllumColor ("Illum Color", Color) = (0.500000,0.500000,0.500000,0.500000)
//       _IllumColorScale ("IllumColor Scale", Float) = 1.000000
//       _EmissionLM ("Emission (Lightmapper)", Float) = 0.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 5059
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 69
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Parallax_Fresnel_Illum_Window.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 83 9 2
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 7 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Parallax]
//   Float 164 [_Fresnel]
//   Float 168 [_IllumMapScale]
//   Vector 176 [_IllumColor] 3
//   Float 188 [_IllumColorScale]
//   Float 200 [_IllumDepth]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_IllumMask] 2D 6
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_Cube] CUBE 4
//   SetTexture 4 [_IllumMap] 2D 5
//   SetTexture 5 [_ShadowMapTexture] 2D 1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:12:58 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyz 
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyzw        7     NONE   float   xy w
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 489f68180a5c441a-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r8.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
max r0.x, cb0[10].y, l(0.100000)
min r0.x, r0.x, l(32.000000)
mul r1.w, cb0[10].x, l(0.500000)
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r2.xyzx
mad r2.x, r2.z, r2.w, l(0.420000)
div r2.xy, r3.xyxx, r2.xxxx
mul r2.zw, r1.wwww, r2.xxxy
add r1.w, cb0[12].z, l(-0.500000)
sample r4.xyzw, v1.xyxx, t0.xyzw, s2
mad r2.xy, r1.wwww, r2.xyxx, v1.xyxx
sample r5.xyzw, r2.xyxx, t1.xyzw, s6
mul r4.xyz, r4.xyzx, cb0[8].xyzx
sample r6.xyzw, v1.zwzz, t2.xyzw, s3
mad r5.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r1.w, -r1.xyzx, r6.xyzx
add r1.w, r1.w, r1.w
mad r1.xyz, r6.xyzx, -r1.wwww, -r1.xyzx
sample r1.xyzw, r1.xyzx, t3.xyzw, s4
mul r1.xyz, r4.wwww, r1.xyzx
dp3 r1.w, r3.xyzx, r5.xyzx
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r0.x, r0.x, r1.w
exp r0.x, r0.x
min r0.x, r0.x, l(1.000000)
mul r1.xyz, r0.xxxx, r1.xyzx
mad r2.xy, r2.zwzz, cb0[10].zzzz, v1.xyxx
sample r2.xyzw, r2.xyxx, t4.xyzw, s5
mul r3.xyz, v5.xyzx, cb0[11].xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, cb0[11].wwww
mul r2.xyz, r4.wwww, r2.xyzx
mul r1.xyz, r1.xyzx, cb0[9].xyzx
add r1.xyz, r1.xyzx, r1.xyzx
mad r1.xyz, r2.xyzx, r5.wwww, r1.xyzx
div r2.xy, v7.xyxx, v7.wwww
sample r2.xyzw, r2.xyxx, t5.xyzw, s1
mul r2.xyz, r2.xxxx, cb0[6].xyzx
eq r0.x, cb3[0].x, l(1.000000)
if_nz r0.x
  eq r0.x, cb3[0].y, l(1.000000)
  mul r3.xyz, v3.wwww, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v2.wwww, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r0.xyz, r0.xxxx, r3.xyzx, r0.yzwy
  add r0.xyz, r0.xyzx, -cb3[6].xyzx
  mul r0.yzw, r0.xxyz, cb3[5].xxyz
  mul r0.y, r0.y, l(0.250000)
  mul r1.w, cb3[0].z, l(0.500000)
  mad r2.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r1.w
  min r0.x, r2.w, r0.y
  sample r3.xyzw, r0.xzwx, t6.xyzw, s0
  add r5.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t6.xyzw, s0
  add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r0.xyzw, r0.xyzx, t6.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r3.x, r3.xyzw, r6.xyzw
  dp4 r3.y, r5.xyzw, r6.xyzw
  dp4 r3.z, r0.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r3.x, cb2[38].xyzw, r6.xyzw
  dp4 r3.y, cb2[39].xyzw, r6.xyzw
  dp4 r3.z, cb2[40].xyzw, r6.xyzw
endif 
add r0.xyz, r3.xyzx, v6.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r0.w, cb0[3].w, l(0.000000)
log r3.xyz, r0.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
dp3 r0.w, r6.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul r2.xyz, r2.xyzx, r4.xyzx
mul r0.xyz, r0.xyzx, r4.xyzx
mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
add o0.xyz, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used