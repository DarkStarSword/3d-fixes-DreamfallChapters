// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 11d8176c9a0477fd-ps.txt
// 3DMigoto: 11d8176c9a0477fd |    Unity headers extracted from FogVolume_Rotation.shader
//    Shader "Hidden/FogVolume_Rotation" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//          ZTest Always
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha OneMinusSrcAlpha
//          GpuProgramID 59518
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 247
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FogVolume_Rotation.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 140 1 3
//   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 96 [_Color]
//   Vector 112 [_InscatteringColor]
//   Vector 128 [_BoxMin]
//   Vector 144 [_BoxMax]
//   Vector 160 [Speed]
//   Vector 176 [Stretch]
//   Vector 208 [_ShadowColor]
//   Vector 240 [L] 3
//   Float 252 [_InscatteringIntensity]
//   Float 256 [InscatteringShape]
//   Float 260 [_Visibility]
//   Float 264 [InscatteringStartDistance]
//   Float 272 [InscatteringTransitionWideness]
//   Float 276 [_3DNoiseScale]
//   Float 280 [_RayStep]
//   Float 284 [gain]
//   Float 288 [threshold]
//   Float 292 [SwirlAdjust]
//   Float 296 [Shade]
//   Float 304 [ShadowBrightness]
//   Float 312 [Exposure]
//   Float 316 [FadeDistance]
//   Float 320 [ShadowShift]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 192 [unity_ObjectToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_Gradient] 2D 1
//   SetTexture 2 [_NoiseVolume] 3D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:05:22 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 22
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 11d8176c9a0477fd-ps.txt
mov r18.xyzw, cb1[4].xyzw
mov r19.xyzw, l(0)
mul r19.x, -r17.x, r17.y
mul r21.xyzw, cb10[0].xyzw, r19.xxxx
mad r21.xyzw, cb10[1].xyzw, r19.yyyy, r21.xyzw
mad r21.xyzw, cb10[2].xyzw, r19.zzzz, r21.xyzw
mad r21.xyzw, cb10[3].xyzw, r19.wwww, r21.xyzw
mul r20.xyzw, cb11[12].xyzw, r21.xxxx
mad r20.xyzw, cb11[13].xyzw, r21.yyyy, r20.xyzw
mad r20.xyzw, cb11[14].xyzw, r21.zzzz, r20.xyzw
mad r20.xyzw, cb11[15].xyzw, r21.wwww, r20.xyzw
add r18.xyz, r18.xyz, -r20.xyz

add r0.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
add r2.xyz, -v5.xyzx, cb0[8].xyzx
div r2.xyz, r2.xyzx, r0.xyzx
add r3.xyz, -v5.xyzx, cb0[9].xyzx
div r3.xyz, r3.xzyx, r0.xzyx
mov r2.w, r3.x
movc r1.xw, r1.xxxx, r2.xxxw, r2.wwwx
mov r3.xw, r2.zzzy
movc r2.xy, r1.yyyy, r3.wzww, r3.zwzz
lt r0.w, r1.x, r2.x
movc r0.w, r0.w, r2.x, r1.x
lt r1.x, r2.y, r1.w
movc r1.x, r1.x, r2.y, r1.w
movc r1.yz, r1.zzzz, r3.xxyx, r3.yyxy
lt r1.w, r0.w, r1.y
movc r0.w, r1.w, r1.y, r0.w
lt r1.y, r1.z, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.yzw, |v5.xxyz|, -cb0[9].xxyz
ge r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.yzw, r1.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.y, r1.z, r1.y
add r1.y, r1.w, r1.y
min r1.y, r1.y, l(1.000000)
mul r0.w, r0.w, r1.y
div r1.yz, v2.xxyx, v2.wwww
sample r2.xyzw, r1.yzyy, t0.xyzw, s0
mad r1.y, cb1[7].z, r2.x, cb1[7].w
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
dp3 r1.z, v4.xyzx, v4.xyzx
rsq r1.z, r1.z
mul r1.z, r1.z, v4.z
div r1.y, r1.y, r1.z
max r1.z, r1.x, r0.w
min r1.w, r1.x, r0.w
min r1.zw, |r1.yyyy|, r1.zzzw
add r1.z, -r1.w, r1.z
div r1.z, r1.z, cb0[16].y
exp r1.z, -r1.z
add r1.z, -r1.z, l(1.000000)
max r1.z, r1.z, l(0.000000)
add r2.xyz, v1.xyzx, -r18.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
div r1.y, |r1.y|, cb0[17].x
add_sat r1.y, r1.y, -cb0[16].z
mad r3.xyz, r0.xyzx, r0.wwww, v5.xyzx
mad r0.xyz, r0.xyzx, r1.xxxx, v5.xyzx
add r0.xyz, -r3.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
add r1.x, cb0[8].y, -cb0[9].y
mul r4.xyzw, cb0[10].xyzw, cb1[0].xxxx
mul r5.xyz, cb0[11].xyzx, cb0[17].yyyy
mul r6.xyz, r4.yzwy, l(0.800000, 0.800000, 0.800000, 0.000000)
add r7.xyz, -cb0[13].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, -cb0[18].z, l(1.000000)
add r2.w, -r1.w, l(1.000000)
mov r8.w, l(1.000000)
mov r3.w, r0.w
mov r10.xyz, r3.xyzx
mov r9.xyzw, l(0,0,0,0)
mov r5.w, l(0)
loop 
  ilt r6.w, r5.w, l(50)
  lt r7.w, l(0.000000), r3.w
  and r6.w, r6.w, r7.w
  breakc_z r6.w
  dp3 r11.x, r10.xyzx, cb2[12].xyzx
  dp3 r11.y, r10.xyzx, cb2[13].xyzx
  dp3 r11.z, r10.xyzx, cb2[14].xyzx
  dp3 r6.w, r11.xyzx, r11.xyzx
  sqrt r6.w, r6.w
  div r6.w, r6.w, cb0[19].w
  mul r6.w, r6.w, l(-1.442695)
  exp r6.w, r6.w
  min r6.w, r6.w, l(1.000000)
  div r11.xy, r10.xyxx, r1.xxxx
  add r11.xy, -r11.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  add r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
  mul r7.w, r11.w, cb0[17].w
  mul r6.w, r6.w, r7.w
  mul r7.w, r6.w, cb0[18].y
  mad r10.w, cb0[10].x, cb1[0].x, r7.w
  sincos r12.x, r13.x, r10.w
  mov r13.yz, r12.xxxx
  mad r12.xyz, r13.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r12.xyz, r12.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r7.w, r4.x, l(1.200000), r7.w
  sincos r13.x, r14.x, r7.w
  mov r14.yz, r13.xxxx
  mad r13.xyz, r14.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r14.xyz, r10.xyzx, r5.xyzx, r4.yzwy
  dp2 r15.x, r14.xyxx, r12.xzxx
  dp2 r15.y, r14.yxyy, r12.xyxx
  mad r12.xyz, r10.xyzx, r5.xyzx, r6.xyzx
  dp2 r16.x, r12.xyxx, r13.xzxx
  dp2 r16.y, r12.yxyy, r13.xyxx
  mov r15.z, r14.z
  sample_l r13.xyzw, r15.xyzx, t2.xyzw, s2, l(1.000000)
  mov r16.z, r12.z
  sample_l r12.xyzw, r16.xyzx, t2.xyzw, s2, l(0.000000)
  add r7.w, -r13.x, r12.x
  mad r7.w, r7.w, l(0.500000), r13.x
  mul r10.w, r6.w, r7.w
  mad r6.w, r7.w, r6.w, -cb0[18].x
  mul_sat r6.w, r10.w, r6.w
  mov r8.xyz, r11.xyzx
  mul r11.xyzw, r8.xyzw, r6.wwww
  mov r8.xyz, r15.xzyx
  mov r6.w, l(1.000000)
  mov r7.w, l(0)
  mov r10.w, l(0)
  loop 
    ige r12.x, r10.w, l(3)
    breakc_nz r12.x
    mul r12.x, r7.w, v6.y
    mad r8.xy, r7.wwww, v6.xzxx, r8.xyxx
    mad r8.z, r12.x, l(0.001000), r8.z
    sample_l r12.xyzw, r8.xzyx, t2.xyzw, s2, l(0.000000)
    mad r6.w, -r12.x, r6.w, r6.w
    mad r7.w, cb0[20].x, l(0.333333343), r7.w
    iadd r10.w, r10.w, l(1)
  endloop 
  mul r7.w, r6.w, cb0[19].x
  mul r8.x, r7.w, r7.w
  mul r7.w, r7.w, r8.x
  mad r8.xyz, r7.wwww, r7.xyzx, cb0[13].xyzx
  mov r12.xyz, r16.xzyx
  mov r7.w, l(1.000000)
  mov r10.w, l(0)
  mov r12.w, l(0)
  loop 
    ige r13.x, r12.w, l(3)
    breakc_nz r13.x
    mul r13.x, r10.w, v6.y
    mad r12.xy, r10.wwww, v6.xzxx, r12.xyxx
    mad r12.z, r13.x, l(0.001000), r12.z
    sample_l r13.xyzw, r12.xzyx, t2.xyzw, s2, l(0.000000)
    mad r7.w, -r13.x, r7.w, r7.w
    mad r10.w, cb0[20].x, l(0.333333343), r10.w
    iadd r12.w, r12.w, l(1)
  endloop 
  mul r10.w, r7.w, cb0[19].x
  mul r12.x, r10.w, r10.w
  mul r10.w, r10.w, r12.x
  mad r12.xyz, r10.wwww, r7.xyzx, cb0[13].xyzx
  add r12.xyz, -r8.xyzx, r12.xyzx
  mad r8.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r8.xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r1.wwww
  mul r11.xyz, r8.xyzx, r11.xyzx
  add r8.x, -r9.w, l(1.000000)
  mad_sat r9.xyzw, r11.xyzw, r8.xxxx, r9.xyzw
  iadd r5.w, r5.w, l(1)
  mad r10.xyz, r0.xyzx, cb0[17].zzzz, r10.xyzx
  add r3.w, r3.w, -cb0[17].z
endloop 
mul r0.xyz, r9.xyzx, cb0[6].xyzx
mul r3.xyz, r0.xyzx, r0.xyzx
dp3_sat r0.w, r2.xyzx, cb0[15].xyzx
mad r1.x, -cb0[16].x, cb0[16].x, l(1.000000)
dp2 r0.w, r0.wwww, cb0[16].xxxx
mad r0.w, cb0[16].x, cb0[16].x, -r0.w
add r0.w, r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, l(1.500000)
exp r0.w, r0.w
div r0.w, r1.x, r0.w
mul r0.w, r0.w, l(0.0795772821)
mul r1.x, r1.z, r1.y
mul r0.w, r0.w, r1.x
mul r1.xyz, r3.xyzx, cb0[7].xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mul r9.xyz, r0.xyzx, cb0[19].zzzz
mov_sat o0.xyzw, r9.xyzw
ret 
// Approximately 0 instruction slots used