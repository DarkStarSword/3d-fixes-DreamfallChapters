// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed cb95a567d3d21850-vs.txt
// 3DMigoto: cb95a567d3d21850 |    Unity headers extracted from WavingGrass.shader
//    Shader "Hidden/TerrainEngine/Details/WavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff ("Cutoff", Float) = 0.500000
//      }
//      Fallback Off
//      SubShader 1/2 {
//        LOD 200
//        Tags { "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="Grass" }
//        Pass 5/5 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="true" "RenderType"="Grass" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 321219
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 356
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from WavingGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 74 0 0
//   Keywords { "SHADOWS_DEPTH" }
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 176
//   Vector 160 [_MainTex_ST]
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 352
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityTerrain" 272
//   Vector 0 [_WavingTint]
//   Vector 16 [_WaveAndDistance]
//   Vector 32 [_CameraPosition]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityShadows" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityTerrain" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:53:00 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             5         1  ( FLT, FLT, FLT, FLT)
// c4         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c8         cb3            12         7  ( FLT, FLT, FLT, FLT)
// c15        cb4            17         4  ( FLT, FLT, FLT, FLT)
// c19        cb5             0         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c22, 1.20000005, 2, 1.60000002, 4.80000019
    def c23, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c24, 0.00600000005, 0.0199999996, 0.0500000007, -0.161616161
    def c25, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c26, 0.0120000001, 0.0199999996, 0.0599999987, 0.0240000002
    def c27, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c28, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c29, -0.5, 0.5, 0, 1
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mul r0.xy, v0.xzzw, c20.y
    mul r1, r0.y, c24.xyyz
    mad r0, r0.x, c26, r1
    mov r1.x, c20.x
    mad r0, r1.x, c22, r0
    frc r0, r0
    mad r0, r0, c23.x, c23.y
    mul r1, r0, r0
    mul r2, r0, r1
    mad r0, r2, c24.w, r0
    mul r2, r1, r2
    mul r1, r1, r2
    mad r0, r2, c23.z, r0
    mad r0, r1, c23.w, r0
    mul r0, r0, r0
    mul r0, r0, r0
    mul r1.x, v7.w, c20.z
    mul r1, r0, r1.x
    dp4 r0.x, r0, c25.xxyz
    mul r0.x, r0.x, c25.w
    dp4 r2.x, r1, c27
    dp4 r2.z, r1, c28
    mad r1.xz, r2, -c20.z, v0
    mov r1.y, v0.y
    add r0.yzw, r1.xxyz, -c21.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    add r0.y, -r0.y, c20.w
    mul r0.y, r0.y, c21.w
    add r0.y, r0.y, r0.y
    max r0.y, r0.y, c29.z
    min oT2.w, r0.y, c29.w
    mov r2.x, c29.x
    add r0.yzw, r2.x, c19.xxyz
    mad r0.xyz, r0.x, r0.yzww, c29.y
    add r0.xyz, r0, r0
    mul oT2.xyz, r0, v7
    mad oT0.xy, v3, c1, c1.zwzw
    mul r0.xyz, v0.y, c9
    mad r0.xyz, c8, r1.x, r0
    mad r0.xyz, c10, r1.z, r0
    mad oT1.xyz, c11, v0.w, r0
    add r0.xyz, r0, c11
    mul r2, v0.y, c5
    mad r2, c4, r1.x, r2
    mad r1, c6, r1.z, r2
    add r1, r1, c7
    mad r2.xyz, r0, -c2.w, c2
    nrm r3.xyz, r2
    mul r2.x, v2.x, c12.x
    mul r2.y, v2.x, c13.x
    mul r2.z, v2.x, c14.x
    mul r4.x, v2.y, c12.y
    mul r4.y, v2.y, c13.y
    mul r4.z, v2.y, c14.y
    add r2.xyz, r2, r4
    mul r4.x, v2.z, c12.z
    mul r4.y, v2.z, c13.z
    mul r4.z, v2.z, c14.z
    add r2.xyz, r2, r4
    nrm r4.xyz, r2
    dp3 r0.w, r4, r3
    mad r0.w, r0.w, -r0.w, c29.w
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c3.z
    mad r0.xyz, r4, -r0.w, r0
    mul r2, r0.y, c16
    mad r2, c15, r0.x, r2
    mad r0, c17, r0.z, r2
    add r0, r0, c18
    mul r2.x, c3.z, c3.z
    slt r2.x, -r2.x, r2.x
    lrp r3, r2.x, r0, r1
    rcp r0.x, r3.w
    mul r0.x, r0.x, c3.x
    max r0.x, r0.x, c29.z
    min r0.x, r0.x, c29.w
    add r0.x, r0.x, r3.z
    max r0.y, r0.x, c29.z
    add r0.y, -r0.x, r0.y
    mad oPos.z, c3.y, r0.y, r0.x
    mad oPos.xy, r3.w, c0, r3
    mov oPos.w, r3.w

// approximately 87 instruction slots used
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, v2.x, cb3[16].x
mul r0.y, v2.x, cb3[17].x
mul r0.z, v2.x, cb3[18].x
mul r1.x, v2.y, cb3[16].y
mul r1.y, v2.y, cb3[17].y
mul r1.z, v2.y, cb3[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, v2.z, cb3[16].z
mul r1.y, v2.z, cb3[17].z
mul r1.z, v2.z, cb3[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xy, v0.xzxx, cb5[1].yyyy
mul r2.xyzw, r1.yyyy, l(0.006000, 0.020000, 0.020000, 0.050000)
mad r1.xyzw, r1.xxxx, l(0.012000, 0.020000, 0.060000, 0.024000), r2.xyzw
mad r1.xyzw, cb5[1].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r1.xyzw
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r2.xyzw, r1.xyzw, r1.xyzw
mul r3.xyzw, r1.xyzw, r2.xyzw
mad r1.xyzw, r3.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r1.xyzw
mul r3.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
mad r1.xyzw, r3.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r1.xyzw
mad r1.xyzw, r2.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r0.w, v7.w, cb5[1].z
mul r2.xyzw, r0.wwww, r1.xyzw
dp4 r0.w, r1.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.w, r0.w, l(0.700000)
dp4 r1.x, r2.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
dp4 r1.z, r2.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
mad r1.xz, -r1.xxzx, cb5[1].zzzz, v0.xxzx
mul r2.xyz, v0.yyyy, cb3[13].xyzx
mad r2.xyz, cb3[12].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb3[14].xyzx, r1.zzzz, r2.xyzx
add r3.xyz, r2.xyzx, cb3[15].xyzx
mad o2.xyz, cb3[15].xyzx, v0.wwww, r2.xyzx
mad r2.xyz, -r3.xyzx, cb1[0].wwww, cb1[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, r0.xyzx, r2.xyzx
mad r1.w, -r1.w, r1.w, l(1.000000)
sqrt r1.w, r1.w
mul r1.w, r1.w, cb2[5].z
mad r0.xyz, -r0.xyzx, r1.wwww, r3.xyzx
mul r2.xyzw, r0.yyyy, cb4[18].xyzw
mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb4[20].xyzw
mul r3.xyzw, v0.yyyy, cb3[1].xyzw
mad r3.xyzw, cb3[0].xyzw, r1.xxxx, r3.xyzw
mad r3.xyzw, cb3[2].xyzw, r1.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb3[3].xyzw
ne r0.x, cb2[5].z, l(0.000000)
movc r2.xyzw, r0.xxxx, r2.xyzw, r3.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r2.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed cb95a567d3d21850-vs.txt
ne r4.w, r2.w, l(1.0)
if_nz r4.w
  add r4.w, r2.w, -r4.y
  mad r2.x, r4.w, r4.x, r2.x
endif

div_sat r0.x, cb2[5].x, r2.w
add r0.x, r0.x, r2.z

// mov o0.xyw, r2.xyxw // Relocated from here with asmtool.py

max r0.y, r0.x, l(0.000000)
add r0.y, -r0.x, r0.y
mad o0.z, cb2[5].y, r0.y, r0.x
mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
mov r1.y, v0.y
add r0.xyz, r1.xyzx, -cb5[2].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
add r0.x, -r0.x, cb5[1].w
add r0.x, r0.x, r0.x
mul_sat o3.w, r0.x, cb5[2].w
add r0.xyz, cb5[0].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r0.xyz, r0.wwww, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.xyzx, v7.xyzx
add o3.xyz, r0.xyzx, r0.xyzx
ret 
// Approximately 0 instruction slots used