// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8c037e4fac0d4852-ps.txt
// 3DMigoto: 8c037e4fac0d4852 |    Unity headers extracted from Standard_Moss.shader
//    Shader "Dreamfall/Unity5/Standard_Moss" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FresnelColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _ParallaxMap ("Height Map", 2D) = "white" { }
//       _Gloss ("Moss Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _Fresnel ("Reflection Fresnel Exponent", Float) = 2.000000
//       _Parallax ("Height", Range(-1.000000,1.000000)) = 0.000000
//       _MapTrength ("Parallax Map Strength", Range(-1.000000,1.000000)) = 1.000000
//       _Smudge ("Water Smudge", Range(-10.000000,10.000000)) = 1.000000
//       _ReflAmount ("Reflection amount", Float) = 0.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _distortScale ("Distort Scale", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 130470
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 85
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Moss.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 114 4 0
//   Keywords { "POINT" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 304
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 192 [_Color]
//   Float 236 [_Gloss]
//   Float 240 [_Metallic]
//   Float 244 [_Parallax]
//   Float 248 [_MapTrength]
//   Float 256 [_distortScale]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_ParallaxMap] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:32:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8c037e4fac0d4852-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

mul r0.xy, v1.xyxx, cb0[16].xxxx
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
mul r0.x, r0.x, cb0[15].z
mul r0.x, r0.x, l(0.500000)
add r0.yzw, -v5.xxyz, r7.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mul r1.xyz, r0.zzzz, v3.xyzx
mad r1.xyz, v2.xyzx, r0.yyyy, r1.xyzx
mad r1.xyz, v4.xyzx, r0.wwww, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xy, r1.wwww, r1.xyxx
mad r1.z, r1.z, r1.w, l(0.420000)
div r1.xyzw, r1.xyxy, r1.zzzz
mul r2.x, cb0[15].y, l(0.500000)
mul r2.xyzw, r1.xyzw, r2.xxxx
mad r1.xyzw, r0.xxxx, r1.zwzw, r2.xyzw
add r1.xyzw, r1.xyzw, v1.xyzw
sample r2.xyzw, r1.zwzz, t1.xyzw, s3
sample r1.xyzw, r1.xyxx, t2.xyzw, s1
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r2.xyxx, r2.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r2.z, r0.x
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.y, v3.xyzx, r2.xyzx
dp3 r3.z, v4.xyzx, r2.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r3.xyzx
add r4.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mad r5.xyz, r4.xyzx, r0.xxxx, r0.yzwy
dp3 r0.y, r2.xyzx, r0.yzwy
mul r0.xzw, r0.xxxx, r4.xxyz
dp3 r1.w, r5.xyzx, r5.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r5.xyzx
dp3 r1.w, r2.xyzx, r4.xyzx
dp3 r2.x, r0.xzwx, r4.xyzx
dp3 r0.x, r3.xyzx, r0.xzwx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.z, r2.x, l(0.000000)
max r0.w, r1.w, l(0.000000)
log r0.w, r0.w
add r1.w, r1.y, r1.x
mad r1.w, r1.z, l(0.333333343), r1.w
mad r1.w, r1.w, cb0[12].w, cb0[14].w
add r1.w, -r1.w, l(1.000000)
add r2.x, -r1.w, l(1.000000)
mad r2.x, r2.x, l(0.968000), l(0.030000)
log r2.x, r2.x
div r2.x, l(10.000000), r2.x
mul r2.y, r2.x, r2.x
mad r2.x, r2.x, r2.x, l(2.000000)
mul r2.x, r2.x, l(0.159154937)
mul r0.w, r0.w, r2.y
exp r0.w, r0.w
mul r0.w, r2.x, r0.w
mul r2.x, r1.w, r1.w
mul r2.y, r2.x, l(0.797884583)
mad r2.x, -r2.x, l(0.797884583), l(1.000000)
mad r2.z, r0.y, r2.x, r2.y
mad r2.x, r0.x, r2.x, r2.y
mad r2.x, r2.x, r2.z, l(0.000010)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r0.w, r0.w, r2.x
mul r0.w, r0.w, l(0.785398185)
max r2.x, r0.w, l(0.000100)
sqrt r2.x, r2.x
eq r2.y, cb0[3].w, l(0.000000)
movc r0.w, r2.y, r2.x, r0.w
mul r0.w, r0.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r2.xyz, r1.xyzx, cb0[12].xyzx, -cb0[2].xyzx
mul r1.xyz, r1.xyzx, cb0[12].xyzx
mad r2.xyz, cb0[15].xxxx, r2.xyzx, cb0[2].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r0.w, r0.w, r2.w
mul r3.xyz, v5.yyyy, cb0[9].xyzx
mad r3.xyz, cb0[8].xyzx, v5.xxxx, r3.xyzx
mad r3.xyz, cb0[10].xyzx, v5.zzzz, r3.xyzx
add r3.xyz, r3.xyzx, cb0[11].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
sample r3.xyzw, r2.wwww, t3.xyzw, s0
mul r3.xyz, r3.xxxx, cb0[6].xyzx
mul r4.xyz, r0.wwww, r3.xyzx
add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.yw, -r0.yyyz, l(0.000000, 1.000000, 0.000000, 1.000000)
mul r0.z, r0.z, r0.z
dp2 r0.z, r0.zzzz, r1.wwww
add r0.z, r0.z, l(-0.500000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r2.xyz, r5.xyzx, r0.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r0.y, r0.z, r0.y, l(1.000000)
add r0.w, -r0.x, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.z, r0.z, r0.w, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, r3.xyzx
mad r0.w, -cb0[15].x, cb0[2].w, cb0[2].w
mul r1.xyz, r0.wwww, r1.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used