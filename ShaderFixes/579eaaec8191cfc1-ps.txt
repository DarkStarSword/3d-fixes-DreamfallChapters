// asmtool.py --remap-cb 0 100 -I /home/dss/Dreamfall Chapters 579eaaec8191cfc1-ps.txt
// 3DMigoto: 579eaaec8191cfc1 |    Unity headers extracted from FinalInterpolation.shader
//    Shader "Hidden/Final Interpolation" {
//      Properties {
//       _ZTest ("", Float) = 8.000000
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest [_ZTest]
//          ZWrite Off
//          Blend One SrcAlpha
//          GpuProgramID 38947
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 25
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FinalInterpolation.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 105 7 2
//   Keywords { "DIRECTIONAL_SHAFTS" "LIGHT_OFF_SCREEN" "QUAD_SHAFTS" }
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 96 [_LightPos]
//   Vector 192 [_CameraPosLocal]
//   Vector 224 [_CoordTexDim]
//   Float 256 [_DepthThreshold]
//   Matrix 128 [_FrustumRays]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [_DepthEpi] 2D 0
//   SetTexture 2 [_RaymarchedLight] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:16:45 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 14
dcl_resource_structured t100, 272

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 -I /home/dss/Dreamfall Chapters 579eaaec8191cfc1-ps.txt
ld_structured r7.xyzw, l(0), l(160), t100.xyzw
ld_structured r8.xyzw, l(0), l(144), t100.xyzw
ld_structured r9.xyzw, l(0), l(192), t100.xyzw
ld_structured r10.xyzw, l(0), l(224), t100.xyzw
ld_structured r11.xyzw, l(0), l(128), t100.xyzw
ld_structured r12.xyzw, l(0), l(256), t100.xyzw
ld_structured r13.xyzw, l(0), l(96), t100.xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mov r1.x, r11.x
mov r1.y, r8.x
mov r1.z, r7.x
add r2.x, -r1.x, r11.y
add r2.y, -r1.y, r8.y
add r2.z, -r1.z, r7.y
mad r0.yzw, v1.xxxx, r2.xxyz, r1.xxyz
mov r1.x, r11.w
mov r1.y, r8.w
mov r1.z, r7.w
add r2.x, -r1.x, r11.z
add r2.y, -r1.y, r8.z
add r2.z, -r1.z, r7.z
mad r1.xyz, v1.xxxx, r2.xyzx, r1.xyzx
add r1.xyz, -r0.yzwy, r1.xyzx
mad r0.yzw, v1.yyyy, r1.xxyz, r0.yyzw
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
div r0.yzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.yyzw
add r1.yzw, -r9.xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
mul r1.yzw, r0.yyzw, r1.yyzw
add r2.xyz, -r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.yzw, r0.yyzw, r2.xxyz
min r2.xyz, r1.yzwy, r0.yzwy
max r0.yzw, r1.yyzw, r0.yyzw
max r1.yz, r2.yyzy, r2.xxxx
max r1.y, r1.z, r1.y
min r0.yz, r0.zzwz, r0.yyyy
min r0.y, r0.z, r0.y
div r0.y, r0.y, r1.x
min r0.x, r0.y, r0.x
mad r0.yz, v1.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
add r1.zw, r0.yyyz, -r13.xxxy
dp2 r0.w, r1.zwzz, r1.zwzz
rsq r0.w, r0.w
mul r2.xy, r0.wwww, r1.zwzz
mad r3.xyzw, v1.xxyy, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -2.000000, 0.000000, -2.000000)
mul r3.xyzw, r2.yyxx, r3.xyzw
lt r3.xyzw, r3.xyyx, r3.zzww
and r4.xyzw, r3.wxyz, l(1, 1, 1, 1)
movc r3.xyzw, r3.xyzw, l(0,0,0,0), l(1,1,1,1)
imul null, r3.xyzw, r3.xyzw, r4.xyzw
add r4.xyzw, -r13.xyxy, l(-1.000000, -1.000000, 1.000000, 1.000000)
lt r5.xyzw, |r2.xyxy|, l(0.000001, 0.000001, 0.000001, 0.000001)
and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mad r5.xyzw, r1.zwzw, r0.wwww, r5.xyzw
div r5.xyzw, r4.xyzw, r5.xyzw
movc r3.xyzw, r3.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
dp4 r0.w, r3.xyzw, r5.xyzw
mul r1.zw, r0.wwww, r2.xxxy
mad r2.xy, r2.xyxx, r0.wwww, r13.xyxx
dp2 r0.w, r1.zwzz, r1.zwzz
sqrt r0.w, r0.w
div r1.zw, r1.zzzw, r0.wwww
lt r5.xyzw, l(0.000010, 0.000010, 0.000010, 0.000010), |r1.zwzw|
and r6.xyzw, r5.zwzw, l(1, 1, 1, 1)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r5.xyzw, r1.zwzw, r5.xyzw
div r4.xyzw, r4.xyzw, r5.xyzw
add r0.w, r0.w, l(-0.001000)
lt r5.xyzw, r4.xyzw, r0.wwww
and r5.xyzw, r5.xyzw, l(1, 1, 1, 1)
imul null, r5.xyzw, r5.xyzw, r6.xyzw
movc r6.xyzw, r5.xyzw, l(-0.000000,-0.000000,-0.000000,-0.000000), l(-39.000000,-39.000000,-39.000000,-39.000000)
movc r5.xyzw, r5.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
mad r4.xyzw, r5.xyzw, r4.xyzw, r6.xyzw
max r0.w, r4.x, l(0.000000)
max r0.w, r4.y, r0.w
max r0.w, r4.z, r0.w
max r0.w, r4.w, r0.w
mad r1.zw, r1.zzzw, r0.wwww, r13.xxxy
mad r4.xyzw, r2.yxyx, l(-0.500000, 0.500000, 0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad r4.xyzw, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000), l(0.000000, 0.250000, 0.500000, 0.750000)
dp4 r3.y, r3.xyzw, r4.xyzw
add r2.xy, -r1.zwzz, r2.xyxx
dp2 r0.w, r2.xyxx, r2.xyxx
sqrt r0.w, r0.w
max r2.z, r0.w, l(0.000001)
div r2.xy, r2.xyxx, r2.zzzz
add r0.yz, r0.yyzy, -r1.zzwz
dp2 r0.y, r0.yzyy, r2.xyxx
div r0.y, r0.y, r0.w
add r0.y, r0.y, r10.z
add r0.z, r10.x, l(-1.000000)
mul r0.z, r0.z, r10.z
mul r3.x, r0.z, r0.y
div r0.y, r1.y, r1.x
lt r0.y, r0.y, r0.x
mul r0.zw, r3.xxxy, r10.xxxy
round_ni r0.zw, r0.zzzw
mad r1.xy, r3.xyxx, r10.xyxx, -r0.zwzz
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.xy, r0.zwzz, r10.zwzz
mad r3.xyzw, -r10.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000), r2.xyxy
sample r4.xyzw, r3.xyxx, t1.xyzw, s0
mov r4.x, |r4.x|
sample r2.xyzw, r2.xyxx, t1.xyzw, s0
mov r4.y, |r2.x|
sample r2.xyzw, r3.zwzz, t1.xyzw, s0
mov r4.z, |r2.x|
mad r0.zw, r0.zzzw, r10.zzzw, -r10.zzzw
sample r2.xyzw, r0.zwzz, t1.xyzw, s0
mov r4.w, |r2.x|
add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r1.xyzw, r1.yyxw, r1.zxwz
add r2.xyzw, r0.xxxx, -r4.xyzw
max r2.xyzw, |r2.xyzw|, r12.xxxx
div_sat r2.xyzw, r12.xxxx, r2.xyzw
mul r2.xyzw, r2.xyzw, r2.xyzw
mul r2.xyzw, r2.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
dp4 r0.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r1.xyzw, r1.xyzw, r0.xxxx
add r1.xw, r1.wwwy, r1.zzzx
max r2.xy, r1.xwxx, l(0.001000, 0.001000, 0.000000, 0.000000)
div r1.yz, r1.zzyz, r2.xxyx
mul r2.xy, r1.yzyy, r10.zzzz
mov r2.z, l(0)
add r1.yz, r0.zzwz, r2.xxzx
sample r3.xyzw, r1.yzyy, t2.xyzw, s1
mov r2.w, r10.w
add r0.xz, r0.zzwz, r2.yywy
sample r2.xyzw, r0.xzxx, t2.xyzw, s1
if_nz r0.y
  mul r0.xyz, r1.wwww, r2.xyzx
  mad r0.xyz, r1.xxxx, r3.xyzx, r0.xyzx
else 
  mov r0.xyz, l(0,0,0,0)
endif 
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used