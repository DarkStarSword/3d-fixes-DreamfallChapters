// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed be6c2c62a46f222f-vs.txt
// 3DMigoto: be6c2c62a46f222f |    Unity headers extracted from Standard_BillboardGrass.shader
//    Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff ("Cutoff", Float) = 0.500000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 32072
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 51
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 99 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8
//   ConstBuffer "$Globals" 176
//   Vector 144 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 32 [unity_4LightPosX0]
//   Vector 48 [unity_4LightPosY0]
//   Vector 64 [unity_4LightPosZ0]
//   Vector 80 [unity_4LightAtten0]
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityTerrain" 272
//   Vector 0 [_WavingTint]
//   Vector 16 [_WaveAndDistance]
//   Vector 32 [_CameraPosition]
//   Vector 48 [_CameraRight] 3
//   Vector 64 [_CameraUp] 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityTerrain" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:51:40 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c11        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c18        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c22        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c29        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c30        cb5             0         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c35, 0.00600000005, 0.0199999996, 0.0500000007, -0.161616161
    def c36, 1.20000005, 2, 1.60000002, 4.80000019
    def c37, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c38, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c39, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c40, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c41, -0.5, 0.5, 0, 1
    def c42, 0.416666657, 1.05499995, -0.0549999997, 0
    def c43, 0.0120000001, 0.0199999996, 0.0599999987, 0.0240000002
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    add r0.xyz, v0, -c32
    dp3 r0.x, r0, r0
    slt r0.x, c31.w, r0.x
    mad r0.xy, r0.x, -v1, v1
    mad r0.xzw, r0.x, c33.xyyz, v0.xyyz
    mad r0.xyz, r0.y, c34, r0.xzww
    mul r1.xy, r0.xzzw, c31.y
    mul r2, r1.y, c35.xyyz
    mad r1, r1.x, c43, r2
    mov r2.x, c31.x
    mad r1, r2.x, c36, r1
    frc r1, r1
    mad r1, r1, c37.x, c37.y
    mul r2, r1, r1
    mul r3, r1, r2
    mad r1, r3, c35.w, r1
    mul r3, r2, r3
    mul r2, r2, r3
    mad r1, r3, c37.z, r1
    mad r1, r2, c37.w, r1
    mul r1, r1, r1
    mul r1, r1, r1
    mul r2, r1, v1.y
    dp4 r0.w, r1, c38.xxyz
    mul r0.w, r0.w, c38.w
    dp4 r1.x, r2, c39
    dp4 r1.z, r2, c40
    mad r0.xz, r1, -c31.z, r0
    add r1.xyz, r0, -c32
    dp3 r1.x, r1, r1
    add r1.x, -r1.x, c31.w
    add r1.x, r1.x, r1.x
    mul r1.x, r1.x, c32.w
    max r1.x, r1.x, c41.z
    min oT3.w, r1.x, c41.w
    mov r1.xw, c41
    add r1.xyz, r1.x, c30
    mad r1.xyz, r0.w, r1, c41.y
    mul r1.xyz, r1, v7
    add oT3.xyz, r1, r1
    mad oT0.xy, v3, c1, c1.zwzw
    mul r1.xyz, r0.y, c23
    mul r2, r0.y, c19
    mad r2, c18, r0.x, r2
    mad r2, c20, r0.z, r2
    add r2, r2, c21
    mad r0.xyw, c22.xyzz, r0.x, r1.xyzz
    mad r0.xyz, c24, r0.z, r0.xyww
    mad r0.xyz, c25, v0.w, r0
    add r3, -r0.y, c4
    mul r4, r3, r3
    add r5, -r0.x, c3
    mad r4, r5, r5, r4
    add r6, -r0.z, c5
    mov oT2.xyz, r0
    mad r0, r6, r6, r4
    rsq r4.x, r0.x
    rsq r4.y, r0.y
    rsq r4.z, r0.z
    rsq r4.w, r0.w
    mad r0, r0, c6, r1.w
    mul r1.x, v2.x, c26.x
    mul r1.y, v2.x, c27.x
    mul r1.z, v2.x, c28.x
    mul r7.x, v2.y, c26.y
    mul r7.y, v2.y, c27.y
    mul r7.z, v2.y, c28.y
    add r1.xyz, r1, r7
    mul r7.x, v2.z, c26.z
    mul r7.y, v2.z, c27.z
    mul r7.z, v2.z, c28.z
    add r1.xyz, r1, r7
    nrm r7.xyz, r1
    mul r1, r3, r7.y
    mad r1, r5, r7.x, r1
    mad r1, r6, r7.z, r1
    mul r1, r4, r1
    max r1, r1, c41.z
    rcp r3.x, r0.x
    rcp r3.y, r0.y
    rcp r3.z, r0.z
    rcp r3.w, r0.w
    mul r0, r1, r3
    mul r1.xyz, r0.y, c8
    mad r1.xyz, c7, r0.x, r1
    mad r0.xyz, c9, r0.z, r1
    mad r0.xyz, c10, r0.w, r0
    mul r0.w, r7.y, r7.y
    mad r0.w, r7.x, r7.x, -r0.w
    mul r1, r7.yzzx, r7.xyzz
    dp4 r3.x, c14, r1
    dp4 r3.y, c15, r1
    dp4 r3.z, c16, r1
    mad r1.xyz, c17, r0.w, r3
    mov r7.w, c41.w
    dp4 r3.x, c11, r7
    dp4 r3.y, c12, r7
    dp4 r3.z, c13, r7
    mov oT1.xyz, r7
    add r1.xyz, r1, r3
    max r1.xyz, r1, c41.z
    mov r1.w, c42.x
    lit r3, r1.xxww
    mov r3.x, r3.z
    lit r4, r1.yyww
    lit r1, r1.zzww
    mov r3.z, r1.z
    mov r3.y, r4.z
    mad r1.xyz, r3, c42.y, c42.z
    max r1.xyz, r1, c41.z
    add oT4.xyz, r0, r1
    mul r0.x, r2.y, c2.x
    mul r0.w, r0.x, c41.y
    mul r0.xz, r2.xyww, c41.y
    add oT5.xy, r0.z, r0.xwzw
    mad oT0.z, r2.z, c29.z, c29.w
    mad oPos.xy, r2.w, c0, r2
    mov oPos.zw, r2
    mov oT5.zw, r2

// approximately 121 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[5], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, -cb5[2].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
lt r0.x, cb5[1].w, r0.x
movc r0.xy, r0.xxxx, l(0,0,0,0), v1.xyxx
mad r0.xzw, r0.xxxx, cb5[3].xxyz, v0.xxyz
mad r0.xyz, r0.yyyy, cb5[4].xyzx, r0.xzwx
mul r1.xy, r0.xzxx, cb5[1].yyyy
mul r2.xyzw, r1.yyyy, l(0.006000, 0.020000, 0.020000, 0.050000)
mad r1.xyzw, r1.xxxx, l(0.012000, 0.020000, 0.060000, 0.024000), r2.xyzw
mad r1.xyzw, cb5[1].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r1.xyzw
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r2.xyzw, r1.xyzw, r1.xyzw
mul r3.xyzw, r1.xyzw, r2.xyzw
mad r1.xyzw, r3.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r1.xyzw
mul r3.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
mad r1.xyzw, r3.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r1.xyzw
mad r1.xyzw, r2.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r2.xyzw, r1.xyzw, v1.yyyy
dp4 r0.w, r1.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.w, r0.w, l(0.700000)
dp4 r1.x, r2.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
dp4 r1.z, r2.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
mad r0.xz, -r1.xxzx, cb5[1].zzzz, r0.xxzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed be6c2c62a46f222f-vs.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mad o1.z, r1.z, cb4[1].z, cb4[1].w
mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
mul r2.x, v2.x, cb3[16].x
mul r2.y, v2.x, cb3[17].x
mul r2.z, v2.x, cb3[18].x
mul r3.x, v2.y, cb3[16].y
mul r3.y, v2.y, cb3[17].y
mul r3.z, v2.y, cb3[18].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, v2.z, cb3[16].z
mul r3.y, v2.z, cb3[17].z
mul r3.z, v2.z, cb3[18].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mov o2.xyz, r2.xyzx
mul r3.xyz, r0.yyyy, cb3[13].xyzx
add r4.xyz, r0.xyzx, -cb5[2].xyzx
dp3 r0.y, r4.xyzx, r4.xyzx
add r0.y, -r0.y, cb5[1].w
add r0.y, r0.y, r0.y
mul_sat o4.w, r0.y, cb5[2].w
mad r3.xyz, cb3[12].xyzx, r0.xxxx, r3.xyzx
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r3.xyzx
mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
mov o3.xyz, r0.xyzx
add r3.xyz, cb5[0].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r3.xyz, r0.wwww, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r3.xyz, r3.xyzx, v7.xyzx
add o4.xyz, r3.xyzx, r3.xyzx
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r3.xyz, cb2[44].xyzx, r0.wwww, r4.xyzx
mov r2.w, l(1.000000)
dp4 r4.x, cb2[38].xyzw, r2.xyzw
dp4 r4.y, cb2[39].xyzw, r2.xyzw
dp4 r4.z, cb2[40].xyzw, r2.xyzw
add r3.xyz, r3.xyzx, r4.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.xyzw, -r0.yyyy, cb2[3].xyzw
mul r5.xyzw, r2.yyyy, r4.xyzw
mul r4.xyzw, r4.xyzw, r4.xyzw
add r6.xyzw, -r0.xxxx, cb2[2].xyzw
add r0.xyzw, -r0.zzzz, cb2[4].xyzw
mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
mad r4.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
mad r0.xyzw, r0.xyzw, r2.zzzz, r5.xyzw
rsq r2.xyzw, r4.xyzw
mad r4.xyzw, r4.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
mul r0.xyzw, r0.xyzw, r2.xyzw
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r4.xyzw, r0.xyzw
mul r2.xyz, r0.yyyy, cb2[7].xyzx
mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
add o5.xyz, r3.xyzx, r0.xyzx
mul r0.xyz, r1.xywx, l(0.500000, 0.500000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
mul r0.w, r0.y, cb1[5].x
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used