// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 065eafaf022a00a6-vs.txt
// 3DMigoto: 065eafaf022a00a6 |    Unity headers extracted from SpeedTree.shader
//    Shader "Nature/SpeedTree" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _DetailTex ("Detail", 2D) = "black" { }
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//      [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//      [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      CustomEditor "SpeedTreeMaterialInspector"
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//        Pass 6/7 {
//          Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//          Cull [_Cull]
//          GpuProgramID 841295
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 10744
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 53 0 0
//   Keywords { "SHADOWS_DEPTH" "GEOM_TYPE_LEAF" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 31 5 0 0 2 1 1 2 3 4 4 5
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 352
//   Matrix 272 [unity_MatrixVP]
//   BindCB "UnityLighting" 0
//   BindCB "UnityShadows" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:02:11 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyz 
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c7         cb2             8         3  ( FLT, FLT, FLT, FLT)
// c10        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c17        cb3            17         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c21, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord7 v7
    mul r0.x, v2.x, c14.x
    mul r0.y, v2.x, c15.x
    mul r0.z, v2.x, c16.x
    mul r1.x, v2.y, c14.y
    mul r1.y, v2.y, c15.y
    mul r1.z, v2.y, c16.y
    add r0.xyz, r0, r1
    mul r1.x, v2.z, c14.z
    mul r1.y, v2.z, c15.z
    mul r1.z, v2.z, c16.z
    add r0.xyz, r0, r1
    nrm r1.xyz, r0
    mov r0.xyz, v4
    add r0.xyz, -r0, v0
    dp3 r2.x, r0, c7
    dp3 r2.y, r0, c8
    dp3 r2.z, r0, c9
    nrm r3.xyz, r2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mad r2.xyz, r3, r0.w, -r0
    mul r0.w, v7.w, v7.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r2, r0
    add r0.xyz, r0, v4
    mul r2.xyz, r0.y, c11
    mad r2.xyz, c10, r0.x, r2
    mad r2.xyz, c12, r0.z, r2
    add r2.xyz, r2, c13
    mad r3.xyz, r2, -c1.w, c1
    nrm r4.xyz, r3
    dp3 r0.w, r1, r4
    mad r0.w, r0.w, -r0.w, c21.x
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c2.z
    mad r1.xyz, r1, -r0.w, r2
    mul r2, r1.y, c18
    mad r2, c17, r1.x, r2
    mad r1, c19, r1.z, r2
    add r1, r1, c20
    mul r2, r0.y, c4
    mad r2, c3, r0.x, r2
    mad r0, c5, r0.z, r2
    add r0, r0, c6
    mul r2.x, c2.z, c2.z
    slt r2.x, -r2.x, r2.x
    lrp r3, r2.x, r1, r0
    rcp r0.x, r3.w
    mul r0.x, r0.x, c2.x
    max r0.x, r0.x, c21.y
    min r0.x, r0.x, c21.x
    add r0.x, r0.x, r3.z
    max r0.y, r0.x, c21.y
    add r0.y, -r0.x, r0.y
    mad oPos.z, c2.y, r0.y, r0.x
    mad oPos.xy, r3.w, c0, r3
    mov oPos.w, r3.w
    mov oT0.xy, v3

// approximately 66 instruction slots used
vs_4_0
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyz
dcl_input v7.w
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, v2.x, cb2[16].x
mul r0.y, v2.x, cb2[17].x
mul r0.z, v2.x, cb2[18].x
mul r1.x, v2.y, cb2[16].y
mul r1.y, v2.y, cb2[17].y
mul r1.z, v2.y, cb2[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, v2.z, cb2[16].z
mul r1.y, v2.z, cb2[17].z
mul r1.z, v2.z, cb2[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, v0.xyzx, -v4.xyzx
dp3 r2.x, r1.xyzx, cb2[8].xyzx
dp3 r2.y, r1.xyzx, cb2[9].xyzx
dp3 r2.z, r1.xyzx, cb2[10].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
eq r0.w, v7.w, l(0.000000)
movc r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
add r1.xyz, r1.xyzx, v4.xyzx
mul r2.xyz, r1.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb2[14].xyzx, r1.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb2[15].xyzx
mad r3.xyz, -r2.xyzx, cb0[0].wwww, cb0[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r3.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb1[5].z
mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
mul r2.xyzw, r0.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb3[20].xyzw
mul r2.xyzw, r1.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb2[2].xyzw, r1.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
ne r2.x, cb1[5].z, l(0.000000)
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 065eafaf022a00a6-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

div_sat r1.x, cb1[5].x, r0.w
add r0.z, r0.z, r1.x

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

max r0.x, r0.z, l(0.000000)
add r0.x, -r0.z, r0.x
mad o0.z, cb1[5].y, r0.x, r0.z
mov o1.xy, v3.xyxx
ret 
// Approximately 0 instruction slots used