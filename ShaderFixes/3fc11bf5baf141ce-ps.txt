// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3fc11bf5baf141ce-ps.txt
// 3DMigoto: 3fc11bf5baf141ce |    Unity headers extracted from Standard_VertexColor_Illum.shader
//    Shader "Dreamfall/Unity5/Standard_VertexColor_Illum" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//       _NormalTex ("Normal (RGB)", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNesAlphaFactor ("Metal Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _Illum ("IllumMap (RGB)", 2D) = "black" { }
//       _EmissionLM ("Emission (Lightmapper)", Float) = 1.000000
//       _VColorMult ("Vertex Color Strenght", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 8432
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 104
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_VertexColor_Illum.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 200 8 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 8 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 128 [_MetalNess]
//   Float 132 [_NormalMul]
//   Float 136 [_AlphaFactor]
//   Float 140 [_EmissionLM]
//   Float 144 [_MetalNesAlphaFactor]
//   Float 148 [_glossHigh]
//   Float 152 [_glossLow]
//   Float 156 [_VColorMult]
//   Vector 160 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_Illum] 2D 6
//   SetTexture 2 [_NormalTex] 2D 5
//   SetTexture 3 [_DitherMaskLOD2D] 2D 2
//   SetTexture 4 [_ShadowMapTexture] 2D 3
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:10:32 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 8      w        7     NONE   float      w
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
// TEXCOORD                 7   xyzw        9     NONE   float   xy w
// TEXCOORD                 9   xyzw       10     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v7.w
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyw
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3fc11bf5baf141ce-ps.txt
mov r18.xyzw, cb1[4].xyzw
mul r19.x, -r17.x, r17.y
mul r20.xyzw, cb10[0].xyzw, r19.xxxx
add r18.xyz, r18.xyz, -r20.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
add r1.w, -cb0[9].w, l(1.000000)
add r3.xyz, -v5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, v5.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s4
mul r5.xyzw, r4.xyzw, cb0[10].xyzw
sample r6.xyzw, v1.xyxx, t1.xyzw, s6
mul r4.xyw, r3.xyxz, r5.xyxz
sample r7.xyzw, v1.zwzz, t2.xyzw, s5
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r7.xyxx, cb0[8].yyyy
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
add r8.xy, r5.wyww, r5.wxww
max r1.w, r8.x, cb0[9].x
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[8].x
mad r2.w, r4.z, cb0[10].z, r8.y
mul r3.w, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[9].y
mad r2.w, cb0[9].z, r2.w, r3.w
max r3.w, r8.x, cb0[8].z
min r3.w, r3.w, l(1.000000)
mul r6.xyz, r5.xyzx, r6.xyzx
div r8.xy, v7.xyxx, v7.zzzz
frc r4.z, r8.y
mad r8.z, r4.z, l(0.062500), cb3[20].y
sample r8.xyzw, r8.xzxx, t3.xyzw, s2
add r4.z, r8.w, l(-0.500000)
lt r4.z, r4.z, l(0.000000)
discard_nz r4.z
div r8.xy, v9.xyxx, v9.wwww
sample r8.xyzw, r8.xyxx, t4.xyzw, s3
dp3 r9.x, v2.xyzx, r7.xyzx
dp3 r9.y, v3.xyzx, r7.xyzx
dp3 r9.z, v4.xyzx, r7.xyzx
dp3 r4.z, r9.xyzx, cb2[0].xyzx
max r4.z, r4.z, l(0.000000)
mad r5.w, -r2.w, r3.w, l(1.000000)
dp3 r6.w, -r2.xyzx, r9.xyzx
add r6.w, r6.w, r6.w
mad r7.xyz, r9.xyzx, -r6.wwww, -r2.xyzx
mul r8.xyz, r8.xxxx, cb0[6].xyzx
eq r6.w, cb6[0].x, l(1.000000)
if_nz r6.w
  eq r6.w, cb6[0].y, l(1.000000)
  mul r10.xyz, v3.wwww, cb6[2].xyzx
  mad r10.xyz, cb6[1].xyzx, v2.wwww, r10.xyzx
  mad r10.xyz, cb6[3].xyzx, v4.wwww, r10.xyzx
  add r10.xyz, r10.xyzx, cb6[4].xyzx
  movc r10.xyz, r6.wwww, r10.xyzx, r0.xyzx
  add r10.xyz, r10.xyzx, -cb6[6].xyzx
  mul r10.yzw, r10.xxyz, cb6[5].xxyz
  mul r6.w, r10.y, l(0.250000)
  mul r7.w, cb6[0].z, l(0.500000)
  mad r8.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r6.w, r6.w, r7.w
  min r10.x, r8.w, r6.w
  sample r11.xyzw, r10.xzwx, t7.xyzw, s1
  add r12.xyz, r10.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r12.xyzw, r12.xyzx, t7.xyzw, s1
  add r10.xyz, r10.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  mov r9.w, l(1.000000)
  dp4 r11.x, r11.xyzw, r9.xyzw
  dp4 r11.y, r12.xyzw, r9.xyzw
  dp4 r11.z, r10.xyzw, r9.xyzw
else 
  mov r9.w, l(1.000000)
  dp4 r11.x, cb2[38].xyzw, r9.xyzw
  dp4 r11.y, cb2[39].xyzw, r9.xyzw
  dp4 r11.z, cb2[40].xyzw, r9.xyzw
endif 
add r10.xyz, r11.xyzx, v8.xyzx
max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r6.w, cb0[3].w, l(0.000000)
log r11.xyz, r10.xyzx
mul r11.xyz, r11.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r11.xyz, r11.xyzx
mad r11.xyz, r11.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r10.xyz, r6.wwww, r11.xyzx, r10.xyzx
lt r7.w, l(0.000000), cb5[2].w
if_nz r7.w
  dp3 r7.w, r7.xyzx, r7.xyzx
  rsq r7.w, r7.w
  mul r11.xyz, r7.wwww, r7.xyzx
  add r12.xyz, -r0.xyzx, cb5[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -r0.xyzx, cb5[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r7.w, r12.y, r12.x
  min r7.w, r12.z, r7.w
  add r12.xyz, r0.xyzx, -cb5[2].xyzx
  mad r11.xyz, r11.xyzx, r7.wwww, r12.xyzx
else 
  mov r11.xyz, r7.xyzx
endif 
log r7.w, r5.w
mul r7.w, r7.w, l(0.750000)
exp r7.w, r7.w
mad r8.w, -r7.w, l(0.700000), l(1.700000)
mul r7.w, r7.w, r8.w
mul r7.w, r7.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t5.xyzw, s0, r7.w
log r8.w, r11.w
mul r8.w, r8.w, cb5[3].y
exp r8.w, r8.w
mul r8.w, r8.w, cb5[3].x
mul r12.xyz, r11.xyzx, r8.wwww
lt r9.w, cb5[1].w, l(0.999990)
if_nz r9.w
  lt r9.w, l(0.000000), cb5[6].w
  if_nz r9.w
    dp3 r9.w, r7.xyzx, r7.xyzx
    rsq r9.w, r9.w
    mul r13.xyz, r7.xyzx, r9.wwww
    add r14.xyz, -r0.xyzx, cb5[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -r0.xyzx, cb5[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r9.w, r14.y, r14.x
    min r9.w, r14.z, r9.w
    add r0.xyz, r0.xyzx, -cb5[6].xyzx
    mad r7.xyz, r13.xyzx, r9.wwww, r0.xyzx
  endif 
  sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r7.w
  log r0.x, r7.w
  mul r0.x, r0.x, cb5[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb5[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r8.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb5[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r9.xyzx, r9.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r9.xyzx
mad r3.xyz, r5.xyzx, r3.xyzx, -cb0[2].xyzx
mad r3.xyz, r1.wwww, r3.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r4.xyw, r1.wwww, r4.xyxw
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r5.w, r5.w
mul r1.x, r0.z, l(0.797884583)
mad r1.y, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r4.z, r1.y, r1.x
mad r1.x, r0.x, r1.y, r1.x
mad r1.x, r1.z, r1.x, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r5.w, l(1.000000)
mad r1.y, r1.y, l(0.968000), l(0.030000)
log r1.y, r1.y
div r1.y, l(10.000000), r1.y
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.y, l(2.000000)
mul r1.y, r1.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
mul r0.w, r1.y, r0.w
add r1.y, -r4.z, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r5.wwww
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r6.w, r1.x, r0.w
mul r0.w, r4.z, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r4.z, r1.y
mul r1.y, r0.z, r5.w
mad r1.y, -r1.y, l(0.280000), l(1.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
movc r0.z, r6.w, r1.y, r0.z
dp3 r1.y, r3.xyzx, r3.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
mad r1.y, r2.w, r3.w, -r1.w
add_sat r1.y, r1.y, l(1.000000)
mad r1.xzw, r8.xxyz, r1.xxxx, r10.xxyz
mul r2.xyz, r8.xyzx, r0.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, r3.xyzx
mul r2.xyz, r2.xyzx, r5.xyzx
mad r1.xzw, r4.xxyw, r1.xxzw, r2.xxyz
mul r0.yzw, r12.xxyz, r0.zzzz
add r2.xyz, -r3.xyzx, r1.yyyy
mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
mad r0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mad r0.xyz, r6.xyzx, cb0[8].wwww, r0.xyzx
mul r0.w, v7.w, cb4[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb4[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb4[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used