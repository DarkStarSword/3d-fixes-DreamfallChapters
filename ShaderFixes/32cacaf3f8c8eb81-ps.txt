// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 32cacaf3f8c8eb81-ps.txt
// 3DMigoto: 32cacaf3f8c8eb81 |    Unity headers extracted from Standard-Base.shader
//    Shader "Hidden/TerrainEngine/Splatmap/Standard-Base" {
//      Properties {
//       _MainTex ("Base (RGB) Smoothness (A)", 2D) = "white" { }
//       _MetallicTex ("Metallic (R)", 2D) = "white" { }
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 117508
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 215
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard-Base.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 75 2 0
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 2 4 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_MetallicTex] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:07:17 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 32cacaf3f8c8eb81-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

add r0.xyz, -v3.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r1.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3 r1.x, cb2[0].xyzx, r1.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
max r0.xy, r0.xwxx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r2.xyzw, v1.xyxx, t0.xyzw, s0
add r0.z, -r2.w, l(1.000000)
mul r0.yw, r0.yyyz, r0.yyyz
mad r1.y, r0.w, r0.w, l(-1.000000)
mad r0.y, r0.y, r1.y, l(1.000000)
mul r1.y, r0.y, l(3.14159274)
mad r0.y, r1.y, r0.y, l(1.000000012E-007)
mul r1.y, r0.w, r0.w
div r0.y, r1.y, r0.y
mad r1.y, -r0.z, r0.z, l(1.000000)
mad r1.z, r0.x, r1.y, r0.w
dp3 r1.w, v2.xyzx, cb2[0].xyzx
max r1.xw, r1.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.w, r1.w, r1.y, r0.w
mul r0.w, r0.w, r0.x
add r0.x, -r0.x, l(1.000000)
mad r0.w, r1.w, r1.z, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(2.000000), r0.w
mul r0.y, r0.y, r0.w
mul r0.y, r0.y, l(0.785398185)
max r0.w, r0.y, l(0.000100)
sqrt r0.w, r0.w
eq r1.y, cb0[3].w, l(0.000000)
movc r0.y, r1.y, r0.w, r0.y
mul r0.y, r1.w, r0.y
max r0.y, r0.y, l(0.000000)
add r3.xyz, r2.xyzx, -cb0[2].xyzx
sample r4.xyzw, v1.xyxx, t1.xyzw, s1
mad r3.xyz, r4.xxxx, r3.xyzx, cb0[2].xyzx
mad r0.w, -r4.x, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.y, r0.w, r0.y
mul r4.xyz, r0.yyyy, cb0[6].xyzx
add r0.y, -r1.x, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r5.xyzx, r0.yyyy, r3.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.y, r1.x, r1.x
mul r0.y, r1.x, r0.y
mad r0.y, r0.y, r0.z, l(-0.500000)
mad r0.x, r0.y, r0.x, l(1.000000)
add r0.z, -r1.w, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
mad r0.y, r0.y, r0.z, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r1.w, r0.x
mul r0.xyz, r0.xxxx, cb0[6].xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r3.xyzx
mad_sat r0.w, v1.z, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used