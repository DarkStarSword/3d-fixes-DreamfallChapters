// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c90226e412a56ca3-vs.txt
// 3DMigoto: c90226e412a56ca3 | Matched 4 variants of 4 shaders: Decal/Cutout Diffuse, Hidden/TerrainEngine/Splatmap/Specular-Base, Legacy Shaders/Diffuse, Legacy Shaders/Transparent/Cutout/Diffuse
//
// 4:    Unity headers extracted from AlphaTest-Diffuse.shader
// 1:    Unity headers extracted from Decal-AlphaTest-Diffuse.shader
// 8:    Unity headers extracted from Normal-Diffuse.shader
// 2:    Unity headers extracted from Specular-Base.shader
// 1:    Shader "Decal/Cutout Diffuse" {
// 2:    Shader "Hidden/TerrainEngine/Splatmap/Specular-Base" {
// 8:    Shader "Legacy Shaders/Diffuse" {
// 4:    Shader "Legacy Shaders/Transparent/Cutout/Diffuse" {
//         Properties {
// 2:       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
// 2:       _Shininess ("Shininess", Range(0.030000,1.000000)) = 0.078125
// 2:       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 5:       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
// 8:       _MainTex ("Base (RGB)", 2D) = "white" { }
// 5:       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         }
// 1:      Fallback "Decal/Cutout VertexLit"
// 2:      Fallback "Legacy Shaders/Specular"
// 4:      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
// 8:      Fallback "Legacy Shaders/VertexLit"
//         SubShader 1/1 {
// e:        LOD 200
// 5:        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
// 2:        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
// 8:        Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
// 5:          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
// 2:          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
// 8:          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
// 5:          ColorMask RGB
// 2:          GpuProgramID 118
// 8:          GpuProgramID 20240
// 4:          GpuProgramID 45275
// 1:          Offset -1.000000, -1.000000
// 1:          GpuProgramID 62377
//             Program "vp" {
//               SubProgram "d3d11 " {
//                 GpuProgramIndex 11
//               }
//             }
//           }
//         }
//       }
//
// 4: Unity 5.3 headers extracted from AlphaTest-Diffuse.shader.decompressed:
// 1: Unity 5.3 headers extracted from Decal-AlphaTest-Diffuse.shader.decompressed:
// 8: Unity 5.3 headers extracted from Normal-Diffuse.shader.decompressed:
// 2: Unity 5.3 headers extracted from Specular-Base.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 45 0 0
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 11 3 0 0 1 2 3 4
// a:   ConstBuffer "$Globals" 160
// 5:   ConstBuffer "$Globals" 176
//      Vector 48 [unity_ColorSpaceLuminance]
//      Vector 144 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:52:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c90226e412a56ca3-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
mul r1.x, v2.x, cb3[16].x
mul r1.y, v2.x, cb3[17].x
mul r1.z, v2.x, cb3[18].x
mul r2.x, v2.y, cb3[16].y
mul r2.y, v2.y, cb3[17].y
mul r2.z, v2.y, cb3[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb3[16].z
mul r2.y, v2.z, cb3[17].z
mul r2.z, v2.z, cb3[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o2.xyz, r1.xyzx
mul r2.xyz, v0.yyyy, cb3[13].xyzx
mad r2.xyz, cb3[12].xyzx, v0.xxxx, r2.xyzx
mad r2.xyz, cb3[14].xyzx, v0.zzzz, r2.xyzx
mad o3.xyz, cb3[15].xyzx, v0.wwww, r2.xyzx
mul r2.x, r1.y, r1.y
mad r2.x, r1.x, r1.x, -r2.x
mul r3.xyzw, r1.yzzx, r1.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
mov r1.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r1.xyzw
dp4 r3.y, cb2[39].xyzw, r1.xyzw
dp4 r3.z, cb2[40].xyzw, r1.xyzw
add r1.xyz, r2.xyzx, r3.xyzx
max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
max o4.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o5.zw, r0.zzzw
add o5.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used