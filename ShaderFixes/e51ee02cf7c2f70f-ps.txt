// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e51ee02cf7c2f70f-ps.txt
// 3DMigoto: e51ee02cf7c2f70f | Matched 2 variants of 2 shaders: Hidden/FogVolume_Rotation, Hidden/FogVolume_Rotation_SHADE
//
// 1:    Unity headers extracted from FogVolume_Rotation.shader
// 2:    Unity headers extracted from FogVolume_Rotation_SHADE.shader
// 1:    Shader "Hidden/FogVolume_Rotation" {
// 2:    Shader "Hidden/FogVolume_Rotation_SHADE" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//           Pass 1/1 {
//             Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//             ZTest Always
//             ZWrite Off
//             Cull Front
//             Blend SrcAlpha OneMinusSrcAlpha
// 2:          GpuProgramID 57605
// 1:          GpuProgramID 59518
//             Program "fp" {
//               SubProgram "d3d11 " {
// 2:              GpuProgramIndex 113
// 1:              GpuProgramIndex 229
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from FogVolume_Rotation.shader.decompressed:
// 2: Unity 5.3 headers extracted from FogVolume_Rotation_SHADE.shader.decompressed:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201510240 111 1 2
// 2:   Keywords { "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 1:   Keywords { "_SHADE" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
//      undeciphered2: 1 2 3 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 336
//      Vector 96 [_Color]
//      Vector 112 [_InscatteringColor]
//      Vector 128 [_BoxMin]
//      Vector 144 [_BoxMax]
//      Vector 160 [Speed]
//      Vector 176 [Stretch]
//      Vector 208 [_ShadowColor]
//      Vector 240 [L] 3
//      Float 252 [_InscatteringIntensity]
//      Float 256 [InscatteringShape]
//      Float 260 [_Visibility]
//      Float 264 [InscatteringStartDistance]
//      Float 272 [InscatteringTransitionWideness]
//      Float 276 [_3DNoiseScale]
//      Float 280 [_RayStep]
//      Float 284 [gain]
//      Float 288 [threshold]
//      Float 292 [SwirlAdjust]
//      Float 296 [Shade]
//      Float 304 [ShadowBrightness]
//      Float 312 [Exposure]
//      Float 316 [FadeDistance]
//      Float 320 [ShadowShift]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 192 [unity_ObjectToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_NoiseVolume] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:58:04 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e51ee02cf7c2f70f-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
add r2.xyz, -v5.xyzx, cb0[8].xyzx
div r2.xyz, r2.xyzx, r0.xyzx
add r3.xyz, -v5.xyzx, cb0[9].xyzx
div r3.xyz, r3.xzyx, r0.xzyx
mov r2.w, r3.x
movc r1.xw, r1.xxxx, r2.xxxw, r2.wwwx
mov r3.xw, r2.zzzy
movc r2.xy, r1.yyyy, r3.wzww, r3.zwzz
lt r0.w, r1.x, r2.x
movc r0.w, r0.w, r2.x, r1.x
lt r1.x, r2.y, r1.w
movc r1.x, r1.x, r2.y, r1.w
movc r1.yz, r1.zzzz, r3.xxyx, r3.yyxy
lt r1.w, r0.w, r1.y
movc r0.w, r1.w, r1.y, r0.w
lt r1.y, r1.z, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.yzw, |v5.xxyz|, -cb0[9].xxyz
ge r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.yzw, r1.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.y, r1.z, r1.y
add r1.y, r1.w, r1.y
min r1.y, r1.y, l(1.000000)
mul r0.w, r0.w, r1.y
div r1.yz, v2.xxyx, v2.wwww
sample r2.xyzw, r1.yzyy, t0.xyzw, s0
mad r1.y, cb1[7].z, r2.x, cb1[7].w
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
dp3 r1.z, v4.xyzx, v4.xyzx
rsq r1.z, r1.z
mul r1.z, r1.z, v4.z
div r1.y, r1.y, r1.z
max r1.z, r1.x, r0.w
min r1.w, r1.x, r0.w
min r1.zw, |r1.yyyy|, r1.zzzw
add r1.z, -r1.w, r1.z
div r1.z, r1.z, cb0[16].y
exp r1.z, -r1.z
add r1.z, -r1.z, l(1.000000)
max r1.z, r1.z, l(0.000000)
add r2.xyz, v1.xyzx, -r14.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
div r1.y, |r1.y|, cb0[17].x
add_sat r1.y, r1.y, -cb0[16].z
mad r3.xyz, r0.xyzx, r0.wwww, v5.xyzx
mad r0.xyz, r0.xyzx, r1.xxxx, v5.xyzx
add r0.xyz, -r3.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
mul r4.xyzw, cb0[10].yzwx, cb1[0].xxxx
mul r5.xyz, cb0[11].xyzx, cb0[17].yyyy
add r6.xyz, -cb0[13].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.x, -cb0[18].z, l(1.000000)
add r1.w, -r1.x, l(1.000000)
mov r7.xyz, r3.xyzx
mov r2.w, r0.w
mov r8.xyzw, l(0,0,0,0)
mov r3.w, l(0)
loop 
  ilt r5.w, r3.w, l(50)
  lt r6.w, l(0.000000), r2.w
  and r5.w, r5.w, r6.w
  breakc_z r5.w
  dp3 r9.x, r7.xyzx, cb2[12].xyzx
  dp3 r9.y, r7.xyzx, cb2[13].xyzx
  dp3 r9.z, r7.xyzx, cb2[14].xyzx
  dp3 r5.w, r9.xyzx, r9.xyzx
  sqrt r5.w, r5.w
  div r5.w, r5.w, cb0[19].w
  mul r5.w, r5.w, l(-1.442695)
  exp r5.w, r5.w
  min r5.w, r5.w, l(1.000000)
  mul r5.w, r5.w, cb0[17].w
  mad r6.w, r5.w, cb0[18].y, r4.w
  sincos r9.x, r10.x, r6.w
  mov r10.yz, r9.xxxx
  mad r9.xyz, r10.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r10.xyz, r7.xyzx, r5.xyzx, r4.xyzx
  dp2 r11.x, r10.xyxx, r9.xzxx
  dp2 r11.y, r10.yxyy, r9.xyxx
  mov r11.z, r10.z
  sample_l r9.xyzw, r11.xyzx, t1.xyzw, s1, l(1.000000)
  mul r6.w, r5.w, r9.x
  mad r5.w, r9.x, r5.w, -cb0[18].x
  mul_sat r9.w, r6.w, r5.w
  mov r10.xyz, r11.xzyx
  mov r5.w, l(1.000000)
  mov r6.w, l(0)
  mov r7.w, l(0)
  loop 
    ige r10.w, r7.w, l(3)
    breakc_nz r10.w
    mul r10.w, r6.w, v6.y
    mad r10.xy, r6.wwww, v6.xzxx, r10.xyxx
    mad r10.z, r10.w, l(0.001000), r10.z
    sample_l r12.xyzw, r10.xzyx, t1.xyzw, s1, l(0.000000)
    mad r5.w, -r12.x, r5.w, r5.w
    mad r6.w, cb0[20].x, l(0.333333343), r6.w
    iadd r7.w, r7.w, l(1)
  endloop 
  mul r6.w, r5.w, cb0[19].x
  mul r7.w, r6.w, r6.w
  mul r6.w, r6.w, r7.w
  mad r10.xyz, r6.wwww, r6.xyzx, cb0[13].xyzx
  mad r10.xyz, r10.xyzx, r1.wwww, r1.xxxx
  mul r9.xyz, r9.wwww, r10.xyzx
  add r6.w, -r8.w, l(1.000000)
  mad_sat r8.xyzw, r9.xyzw, r6.wwww, r8.xyzw
  iadd r3.w, r3.w, l(1)
  mad r7.xyz, r0.xyzx, cb0[17].zzzz, r7.xyzx
  add r2.w, r2.w, -cb0[17].z
endloop 
mul r0.xyz, r8.xyzx, cb0[6].xyzx
mul r3.xyz, r0.xyzx, r0.xyzx
dp3_sat r0.w, r2.xyzx, cb0[15].xyzx
mad r1.x, -cb0[16].x, cb0[16].x, l(1.000000)
dp2 r0.w, r0.wwww, cb0[16].xxxx
mad r0.w, cb0[16].x, cb0[16].x, -r0.w
add r0.w, r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, l(1.500000)
exp r0.w, r0.w
div r0.w, r1.x, r0.w
mul r0.w, r0.w, l(0.0795772821)
mul r1.x, r1.z, r1.y
mul r0.w, r0.w, r1.x
mul r1.xyz, r3.xyzx, cb0[7].xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mul r8.xyz, r0.xyzx, cb0[19].zzzz
mov_sat o0.xyzw, r8.xyzw
ret 
// Approximately 0 instruction slots used