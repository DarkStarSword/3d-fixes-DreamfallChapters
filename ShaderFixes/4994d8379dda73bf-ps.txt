// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4994d8379dda73bf-ps.txt
// 3DMigoto: 4994d8379dda73bf |    Unity headers extracted from Standard_WetMask_Terrain.shader
//    Shader "Dreamfall/Unity5/Terrain/Standard_WetMask_Terrain" {
//      Properties {
//       _GlossValues ("Gloss Values for each layer Min Value 0 Max Value 1", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _GlossFactor ("Gloss Grayscale Factor", Range(0.000000,1.000000)) = 0.000000
//       _GlossTerrainMin ("Gloss Terrain min", Range(0.000000,1.000000)) = 0.000000
//       _GlossTerrainMax ("Gloss Terrain Max", Range(0.000000,1.000000)) = 1.000000
//       _GlossWet ("Gloss Wet Mask", Range(0.000000,1.000000)) = 1.000000
//       _RefMask ("Reflection Mask (R)", 2D) = "black" { }
//       _RefMaskOffsetTile ("RefMask Offset(RB), Tile(G), WetDarkening(A) ", Vector) = (0.000000,0.000000,10.000000,0.000000)
//       _RefMaskLayerControll ("Reflection Mask layer controll", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _Control ("Control (RGBA)", 2D) = "red" { }
//      [HideInInspector]  _Splat3 ("Layer 3 (A)", 2D) = "white" { }
//      [HideInInspector]  _Splat2 ("Layer 2 (B)", 2D) = "white" { }
//      [HideInInspector]  _Splat1 ("Layer 1 (G)", 2D) = "white" { }
//      [HideInInspector]  _Splat0 ("Layer 0 (R)", 2D) = "white" { }
//      [HideInInspector]  _Normal3 ("Normal 3 (A)", 2D) = "bump" { }
//      [HideInInspector]  _Normal2 ("Normal 2 (B)", 2D) = "bump" { }
//      [HideInInspector]  _Normal1 ("Normal 1 (G)", 2D) = "bump" { }
//      [HideInInspector]  _Normal0 ("Normal 0 (R)", 2D) = "bump" { }
//      }
//      Fallback "Nature/Terrain/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" "SplatCount"="4" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "SplatCount"="4" }
//          GpuProgramID 64708
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 107
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_WetMask_Terrain.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 132 11 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 13 6 12 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Vector 144 [_GlossValues]
//   Float 160 [_GlossWet]
//   Float 164 [_GlossTerrainMin]
//   Float 168 [_GlossTerrainMax]
//   Float 172 [_GlossFactor]
//   Vector 176 [_RefMaskOffsetTile]
//   Vector 192 [_RefMaskLayerControll]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_RefMask] 2D 11
//   SetTexture 1 [_Control] 2D 3
//   SetTexture 2 [_Splat0] 2D 4
//   SetTexture 3 [_Splat1] 2D 5
//   SetTexture 4 [_Splat2] 2D 6
//   SetTexture 5 [_Splat3] 2D 7
//   SetTexture 6 [_Normal0] 2D 8
//   SetTexture 7 [_Normal2] 2D 9
//   SetTexture 8 [_Normal3] 2D 10
//   SetTexture 9 [_ShadowMapTexture] 2D 2
//   SetTexture 10 [unity_Lightmap] 2D 0
//   SetTexture 11 [unity_SpecCube0] CUBE 1
//   SetTexture 12 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityReflectionProbes" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:20:57 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   x           7     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texturecube (float,float,float,float) t11
dcl_resource_texturecube (float,float,float,float) t12
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.x
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4994d8379dda73bf-ps.txt
mov r13.xyzw, cb1[4].xyzw
mov r14.xyzw, l(0)
mul r14.x, -r12.x, r12.y
mul r16.xyzw, cb10[0].xyzw, r14.xxxx
mad r16.xyzw, cb10[1].xyzw, r14.yyyy, r16.xyzw
mad r16.xyzw, cb10[2].xyzw, r14.zzzz, r16.xyzw
mad r16.xyzw, cb10[3].xyzw, r14.wwww, r16.xyzw
mul r15.xyzw, cb11[12].xyzw, r16.xxxx
mad r15.xyzw, cb11[13].xyzw, r16.yyyy, r15.xyzw
mad r15.xyzw, cb11[14].xyzw, r16.zzzz, r15.xyzw
mad r15.xyzw, cb11[15].xyzw, r16.wwww, r15.xyzw
add r13.xyz, r13.xyz, -r15.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r13.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xy, v1.xyxx, cb0[11].zzzz, cb0[11].xyxx
sample r2.xyzw, r2.xyxx, t0.xyzw, s11
sample r3.xyzw, v1.xyxx, t1.xyzw, s3
sample r4.xyzw, v1.zwzz, t2.xyzw, s4
sample r5.xyzw, v1.zwzz, t3.xyzw, s5
mul r2.yzw, r3.yyyy, r5.xxyz
mad r2.yzw, r3.xxxx, r4.xxyz, r2.yyzw
sample r4.xyzw, v1.zwzz, t4.xyzw, s6
mad r2.yzw, r3.zzzz, r4.xxyz, r2.yyzw
sample r4.xyzw, v1.zwzz, t5.xyzw, s7
mad r2.yzw, r3.wwww, r4.xxyz, r2.yyzw
sample r4.xyzw, v1.zwzz, t6.xyzw, s8
mul r4.xyzw, r3.xxyy, r4.ywyw
add r4.xy, r4.wzww, r4.yxyy
sample r5.xyzw, v1.zwzz, t7.xyzw, s9
mad r4.xy, r3.zzzz, r5.wyww, r4.xyxx
sample r5.xyzw, v1.zwzz, t8.xyzw, s10
mad r4.xy, r3.wwww, r5.wyww, r4.xyxx
mul r0.w, r2.x, cb0[10].x
add r4.zw, -r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mad r4.xy, r0.wwww, r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
dp4 r0.w, cb0[9].xyzw, r3.xyzw
mul r5.xyzw, r2.xxxx, cb0[12].xyzw
add r3.xyzw, -r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r3.xyzw, r3.xyzw, -r5.xyzw, r5.xyzw
add r1.w, r3.y, r3.x
add r1.w, r3.z, r1.w
add r1.w, r3.w, r1.w
mad r2.x, -r1.w, cb0[11].w, l(1.000000)
mul r3.xyz, r2.xxxx, r2.yzwy
max r0.w, r0.w, cb0[10].y
min r0.w, r0.w, cb0[10].z
add r2.x, r2.z, r2.y
mad r2.x, r2.w, l(0.333333343), r2.x
max r2.x, r2.x, cb0[10].w
min r2.x, r2.x, l(1.000000)
mul r2.y, r0.w, r2.x
mad r0.w, -r0.w, r2.x, cb0[10].x
mad r0.w, r1.w, r0.w, r2.y
div r2.xy, v6.xyxx, v6.wwww
sample r2.xyzw, r2.xyxx, t9.xyzw, s2
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
add r1.w, -r0.w, l(1.000000)
dp3 r2.y, -r1.xyzx, r5.xyzx
add r2.y, r2.y, r2.y
mad r2.yzw, r5.xxyz, -r2.yyyy, -r1.xxyz
sample r4.xyzw, v5.xyxx, t10.xyzw, s0
log r3.w, r4.w
mul r3.w, r3.w, cb0[4].y
exp r3.w, r3.w
mul r3.w, r3.w, cb0[4].x
mul r6.xyz, r4.xyzx, r3.wwww
dp3_sat r4.w, r5.xyzx, cb2[0].xyzx
add r5.w, -r2.x, l(1.000000)
mul r4.w, r4.w, r5.w
mad r7.xyz, -r4.wwww, cb0[6].xyzx, r6.xyzx
mul r8.xyz, r2.xxxx, r4.xyzx
max r7.xyz, r7.xyzx, r8.xyzx
mad r4.xyz, r3.wwww, r4.xyzx, -r7.xyzx
mad r4.xyz, cb3[24].xxxx, r4.xyzx, r7.xyzx
min r4.xyz, r4.xyzx, r6.xyzx
lt r2.x, l(0.000000), cb5[2].w
if_nz r2.x
  dp3 r2.x, r2.yzwy, r2.yzwy
  rsq r2.x, r2.x
  mul r6.xyz, r2.xxxx, r2.yzwy
  add r7.xyz, -r0.xyzx, cb5[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r8.xyz, -r0.xyzx, cb5[1].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r2.x, r7.y, r7.x
  min r2.x, r7.z, r2.x
  add r7.xyz, r0.xyzx, -cb5[2].xyzx
  mad r6.xyz, r6.xyzx, r2.xxxx, r7.xyzx
else 
  mov r6.xyz, r2.yzwy
endif 
log r2.x, r1.w
mul r2.x, r2.x, l(0.750000)
exp r2.x, r2.x
mad r3.w, -r2.x, l(0.700000), l(1.700000)
mul r2.x, r2.x, r3.w
mul r2.x, r2.x, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t11.xyzw, s1, r2.x
log r3.w, r6.w
mul r3.w, r3.w, cb5[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb5[3].x
mul r7.xyz, r6.xyzx, r3.wwww
lt r4.w, cb5[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb5[6].w
  if_nz r4.w
    dp3 r4.w, r2.yzwy, r2.yzwy
    rsq r4.w, r4.w
    mul r8.xyz, r2.yzwy, r4.wwww
    add r9.xyz, -r0.xyzx, cb5[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -r0.xyzx, cb5[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r4.w, r9.y, r9.x
    min r4.w, r9.z, r4.w
    add r0.xyz, r0.xyzx, -cb5[6].xyzx
    mad r2.yzw, r8.xxyz, r4.wwww, r0.xxyz
  endif 
  sample_l r2.xyzw, r2.yzwy, t12.xyzw, s1, r2.x
  log r0.x, r2.w
  mul r0.x, r0.x, cb5[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb5[7].x
  mul r0.xyz, r2.xyzx, r0.xxxx
  mad r2.xyz, r3.wwww, r6.xyzx, -r0.xyzx
  mad r7.xyz, cb5[1].wwww, r2.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
mul r2.xyz, r3.xyzx, cb0[2].wwww
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r1.w, r1.w
eq r0.z, cb0[3].w, l(0.000000)
mul r1.x, r0.y, r1.w
mad r1.x, -r1.x, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r1.x, r0.y
add r0.z, r0.w, -cb0[2].w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r7.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, r0.zzzz, -cb0[2].xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, cb0[2].xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r2.xyzx, r4.xyzx, r0.xyzx
mad_sat r0.w, v7.x, cb4[1].z, cb4[1].w
add r0.xyz, r0.xyzx, -cb4[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb4[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used