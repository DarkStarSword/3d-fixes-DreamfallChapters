// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 61016642099552d1-vs.txt
// 3DMigoto: 61016642099552d1 | Matched 2 variants of 1 shaders: Hidden/TerrainEngine/Details/Vertexlit
//
//       Unity headers extracted from atsv2 vertexlit.shader
//       Shader "Hidden/TerrainEngine/Details/Vertexlit" {
//         Properties {
//          _Color ("Main Color r:ampl g:speed b:time", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//          _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         }
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//           Pass 4/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PrePassFinal" "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//             ZWrite Off
//             GpuProgramID 255162
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 372
// 2:              GpuProgramIndex 382
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from atsv2 vertexlit.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 69 0 0
// 2:   Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "UNITY_HDR_ON" }
// 1:   Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 15 4 0 0 2 1 1 2 3 4
//      ConstBuffer "$Globals" 208
//      Vector 144 [_Color]
//      Vector 160 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:27:19 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float    yzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             9         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            16         3  ( FLT, FLT, FLT, FLT)
// c19        cb4             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c20, 0.0480000004, 0.0599999987, 0.239999995, 0.0960000008
    def c21, 0.0240000002, 0.0799999982, 0.200000003, -0.161616161
    def c22, 1.20000005, 2, 1.60000002, 4.80000019
    def c23, 2, 1, 6.40884876, -3.14159274
    def c24, 0.00833330024, -0.000198409994, 0.5, 0
    def c25, 0.215387449, 0.358979076, 0.287183255, 0.861549795
    def c26, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c27, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c28, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mad oT0.xy, v3, c2, c2.zwzw
    mul r0, v0.z, c21.xyyz
    mad r0, v0.x, c20, r0
    mov r1.xy, c23
    mad r1.x, c1.z, -r1.x, r1.y
    add r1.x, r1.x, -v7.z
    mul r1.x, r1.x, c3.x
    add r1.yz, v7.xyww, c1.xyww
    mul r1.x, r1.y, r1.x
    mul r1.y, r1.z, v3.y
    mad r0, r1.x, c22, r0
    frc r0, r0
    mad r0, r0, c23.z, c23.w
    mul r2, r0, r0
    mul r3, r0, r2
    mad r0, r3, c21.w, r0
    mul r3, r2, r3
    mul r2, r2, r3
    mad r0, r3, c24.x, r0
    mad r0, r2, c24.y, r0
    mul r0, r1.y, r0
    mul r0, r0, c25
    mul r0, r0, r0
    mul r0, r0, r0
    dp4 r1.x, r0, c27
    dp4 r0.x, r0, c26
    mul r0.yz, r1.x, c18.xxzw
    mad r0.xy, c16.xzzw, r0.x, r0.yzzw
    add r0.xy, -r0, v0.xzzw
    mul r1, v0.y, c13
    mad r1, c12, r0.x, r1
    mad r0, c14, r0.y, r1
    add r0, r0, c15
    mul r1.x, r0.y, c4.x
    mul r1.w, r1.x, c24.z
    mul r1.xz, r0.xyww, c24.z
    add oT1.xy, r1.z, r1.xwzw
    mul r1.x, v2.x, c16.x
    mul r1.y, v2.x, c17.x
    mul r1.z, v2.x, c18.x
    mul r2.x, v2.y, c16.y
    mul r2.y, v2.y, c17.y
    mul r2.z, v2.y, c18.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c16.z
    mul r2.y, v2.z, c17.z
    mul r2.z, v2.z, c18.z
    add r1.xyz, r1, r2
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c8, r3
    dp4 r4.y, c9, r3
    dp4 r4.z, c10, r3
    mad r1.xyz, c11, r1.x, r4
    mov r2.w, c23.y
    dp4 r3.x, c5, r2
    dp4 r3.y, c6, r2
    dp4 r3.z, c7, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c24.w
    mov r1.w, c28.x
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c28.y, c28.z
    max oT3.xyz, r1, c24.w
    mul r1.x, r0.z, c19.x
    mul r1.x, r1.x, -r1.x
    exp oT0.z, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT1.zw, r0
    mov oT2, c24.w

// approximately 80 instruction slots used
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.yzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.zzzz, l(0.024000, 0.080000, 0.080000, 0.200000)
mad r0.xyzw, v0.xxxx, l(0.048000, 0.060000, 0.240000, 0.096000), r0.xyzw
mad r1.x, -cb0[9].z, l(2.000000), l(1.000000)
add r1.x, r1.x, -v7.z
mul r1.x, r1.x, cb1[0].x
add r1.yz, v7.yywy, cb0[9].yywy
mul r1.x, r1.y, r1.x
mul r1.y, r1.z, v3.y
mad r0.xyzw, r1.xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r2.xyzw, r0.xyzw, r0.xyzw
mul r3.xyzw, r0.xyzw, r2.xyzw
mad r0.xyzw, r3.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r0.xyzw
mul r3.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
mad r0.xyzw, r3.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r0.xyzw
mad r0.xyzw, r2.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r0.xyzw
mul r0.xyzw, r1.yyyy, r0.xyzw
mul r0.xyzw, r0.xyzw, l(0.215387449, 0.358979076, 0.287183255, 0.861549795)
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, r0.xyzw
dp4 r1.x, r0.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
dp4 r0.x, r0.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
mul r0.yz, r1.xxxx, cb3[18].xxzx
mad r0.xy, cb3[16].xzxx, r0.xxxx, r0.yzyy
add r0.xy, -r0.xyxx, v0.xzxx
mul r1.xyzw, v0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.yyyy, r1.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 61016642099552d1-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

mul r1.x, r0.z, cb4[1].x
mul r1.x, r1.x, -r1.x
exp o1.z, r1.x
mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o2.zw, r0.zzzw
add o2.xy, r1.zzzz, r1.xwxx
mov o3.xyzw, l(0,0,0,0)
mul r0.x, v2.x, cb3[16].x
mul r0.y, v2.x, cb3[17].x
mul r0.z, v2.x, cb3[18].x
mul r1.x, v2.y, cb3[16].y
mul r1.y, v2.y, cb3[17].y
mul r1.z, v2.y, cb3[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, v2.z, cb3[16].z
mul r1.y, v2.z, cb3[17].z
mul r1.z, v2.z, cb3[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.x, r0.y, r0.y
mad r1.x, r0.x, r0.x, -r1.x
mul r2.xyzw, r0.yzzx, r0.xyzz
dp4 r3.x, cb2[41].xyzw, r2.xyzw
dp4 r3.y, cb2[42].xyzw, r2.xyzw
dp4 r3.z, cb2[43].xyzw, r2.xyzw
mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
mov r0.w, l(1.000000)
dp4 r2.x, cb2[38].xyzw, r0.xyzw
dp4 r2.y, cb2[39].xyzw, r0.xyzw
dp4 r2.z, cb2[40].xyzw, r0.xyzw
add r0.xyz, r1.xyzx, r2.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o4.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
ret 
// Approximately 0 instruction slots used