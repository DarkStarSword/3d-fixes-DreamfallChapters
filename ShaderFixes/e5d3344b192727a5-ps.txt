// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5d3344b192727a5-ps.txt
// 3DMigoto: e5d3344b192727a5 |    Unity headers extracted from Standard_DirectionBlend.shader
//    Shader "Dreamfall/Unity5/Standard_DirectionBlend" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _BlendColor ("Blend Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//       _BlendTile ("Blend Map Tile Factor", Float) = 1.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _Boost ("Fresnel Boost", Float) = 1.000000
//       _Direction ("Direction", Vector) = (0.000000,1.000000,0.000000,1.000000)
//       _Adjust ("Fresnel Adjust", Range(-1.000000,1.000000)) = 0.000000
//       _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//       _2ndAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//       _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//       _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//       _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//       _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Specular"
//      SubShader 2/3 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 384196
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 404
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_DirectionBlend.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 130 7 0
//   Keywords { "POINT" "SHADOWS_CUBE" "FOG_LINEAR" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 7 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 192 [_Color]
//   Vector 208 [_BlendColor]
//   Vector 224 [_Direction]
//   Float 240 [_Adjust]
//   Float 244 [_Boost]
//   Float 248 [_BlendTile]
//   Float 252 [_MainAlphaFactor]
//   Float 256 [_2ndAlphaFactor]
//   Float 260 [_MainGloss]
//   Float 264 [_2ndGloss]
//   Float 268 [_MainMetallness]
//   Float 272 [_2ndMetallness]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_BlendTex] 2D 5
//   SetTexture 2 [_Detail] 2D 6
//   SetTexture 3 [_BumpMap] 2D 4
//   SetTexture 4 [_DitherMaskLOD2D] 2D 0
//   SetTexture 5 [_LightTexture0] 2D 2
//   SetTexture 6 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerDraw" 4
//   BindCB "UnityFog" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:58:34 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[18], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5d3344b192727a5-ps.txt
mov r8.xyzw, cb1[4].xyzw
mov r9.xyzw, l(0)
mul r9.x, -r7.x, r7.y
mul r11.xyzw, cb10[0].xyzw, r9.xxxx
mad r11.xyzw, cb10[1].xyzw, r9.yyyy, r11.xyzw
mad r11.xyzw, cb10[2].xyzw, r9.zzzz, r11.xyzw
mad r11.xyzw, cb10[3].xyzw, r9.wwww, r11.xyzw
mul r10.xyzw, cb11[12].xyzw, r11.xxxx
mad r10.xyzw, cb11[13].xyzw, r11.yyyy, r10.xyzw
mad r10.xyzw, cb11[14].xyzw, r11.zzzz, r10.xyzw
mad r10.xyzw, cb11[15].xyzw, r11.wwww, r10.xyzw
add r8.xyz, r8.xyz, -r10.xyz

div r0.xy, v6.xyxx, v6.zzzz
frc r0.y, r0.y
mad r0.z, r0.y, l(0.062500), cb4[20].y
sample r0.xyzw, r0.xzxx, t4.xyzw, s0
add r0.x, r0.w, l(-0.500000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r2.xyz, r1.xyzx, r0.wwww, r0.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample r3.xyzw, v1.xyxx, t3.xyzw, s4
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r2.xyzx
dp3 r1.x, r4.xyzx, r1.xyzx
add r2.xyz, r4.xyzx, -cb0[15].xxxx
dp3_sat r1.y, r2.xyzx, cb0[14].xyzx
mul_sat r1.y, r1.y, cb0[15].y
max r1.xz, r1.xxwx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xy, r0.xwxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.y, r0.y
sample r2.xyzw, v1.zwzz, t2.xyzw, s6
mul r2.xyz, r2.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000)
min r2.xyz, r2.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000)
add r2.xyz, r2.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r2.xyz, r2.xyzx, r3.xyzx
add r0.z, r2.y, r2.x
mad r0.z, r2.z, l(0.333333343), r0.z
mul r2.xyz, r2.xyzx, cb0[12].xyzx
max r0.z, r0.z, cb0[15].w
mul r0.z, r0.z, cb0[16].y
mul r3.xy, v1.xyxx, cb0[15].zzzz
sample r3.xyzw, r3.xyxx, t1.xyzw, s5
add r0.w, r3.y, r3.x
mad r0.w, r3.z, l(0.333333343), r0.w
mad r3.xyz, r3.xyzx, cb0[13].xyzx, -r2.xyzx
mad r2.xyz, r1.yyyy, r3.xyzx, r2.xyzx
max r0.w, r0.w, cb0[16].x
mad r0.w, cb0[16].z, r0.w, -r0.z
mad r0.z, r1.y, r0.w, r0.z
add r0.z, -r0.z, l(1.000000)
add r0.w, -r0.z, l(1.000000)
mad r0.w, r0.w, l(0.968000), l(0.030000)
log r0.w, r0.w
div r0.w, l(10.000000), r0.w
mul r1.w, r0.w, r0.w
mad r0.w, r0.w, r0.w, l(2.000000)
mul r0.w, r0.w, l(0.159154937)
mul r0.y, r0.y, r1.w
exp r0.y, r0.y
mul r0.y, r0.w, r0.y
mul r0.w, r0.z, r0.z
mul r1.w, r0.w, l(0.797884583)
mad r0.w, -r0.w, l(0.797884583), l(1.000000)
mad r2.w, r0.x, r0.w, r1.w
add r0.x, -r0.x, l(1.000000)
mad r0.w, r1.x, r0.w, r1.w
mad r0.w, r0.w, r2.w, l(0.000010)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.y, r0.y, r0.w
mul r0.y, r0.y, l(0.785398185)
max r0.w, r0.y, l(0.000100)
sqrt r0.w, r0.w
eq r1.w, cb0[3].w, l(0.000000)
movc r0.y, r1.w, r0.w, r0.y
mul r0.y, r1.x, r0.y
max r0.y, r0.y, l(0.000000)
add r0.w, -cb0[16].w, cb0[17].x
mad r0.w, r1.y, r0.w, cb0[16].w
add r3.xyz, r2.xyzx, -cb0[2].xyzx
mad r3.xyz, r0.wwww, r3.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.y, r0.w, r0.y
dp3 r0.w, v7.xyzx, v7.xyzx
sqrt r0.w, r0.w
mul r0.w, r0.w, cb2[1].w
mul r0.w, r0.w, l(0.970000)
sample r4.xyzw, v7.xyzx, t6.xyzw, s1
lt r0.w, r4.x, r0.w
movc r0.w, r0.w, cb3[24].x, l(1.000000)
mul r4.xyz, v5.yyyy, cb0[9].xyzx
mad r4.xyz, cb0[8].xyzx, v5.xxxx, r4.xyzx
mad r4.xyz, cb0[10].xyzx, v5.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[11].xyzx
dp3 r1.y, r4.xyzx, r4.xyzx
sample r4.xyzw, r1.yyyy, t5.xyzw, s2
mul r0.w, r0.w, r4.x
mul r4.xyz, r0.wwww, cb0[6].xyzx
mul r5.xyz, r0.yyyy, r4.xyzx
add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.y, -r1.z, l(1.000000)
mul r0.w, r1.z, r1.z
dp2 r0.z, r0.wwww, r0.zzzz
add r0.z, r0.z, l(-0.500000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r1.yzw, r6.xxyz, r0.yyyy, r3.xxyz
mul r1.yzw, r1.yyzw, r5.xxyz
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
mad r0.x, r0.z, r0.x, l(1.000000)
add r0.y, -r1.x, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r0.y, r0.z, r0.y, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r1.x, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
mad_sat r0.w, v2.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used