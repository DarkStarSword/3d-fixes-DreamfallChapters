// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5b8368d53f0e7982-ps.txt
// 3DMigoto: 5b8368d53f0e7982 |    Unity headers extracted from Standard_CubemapReflection.shader
//    Shader "Dreamfall/Unity5/Standard_CubemapReflection" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectColor ("Reflect Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Fresnel ("Specular Fresnel Exponent", Range(0.010000,16.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _RefMul ("Reflection Boost", Float) = 1.000000
//       _AlbedoBlend ("0 = lighting modifies reflection", Range(0.000000,1.000000)) = 1.000000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 4123
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 115
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_CubemapReflection.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 131 4 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 6 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Fresnel]
//   Float 164 [_RefMul]
//   Float 168 [_AlbedoBlend]
//   Float 172 [_AlphaFactor]
//   Float 176 [_glossHigh]
//   Float 180 [_glossLow]
//   Float 184 [_MetalNess]
//   Float 188 [_MetalNessAlphaFactor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_Cube] CUBE 4
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_SpecCube0] CUBE 1
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:25:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   x           6     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.x
dcl_output o0.xyzw
dcl_temps 20
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5b8368d53f0e7982-ps.txt
mov r16.xyzw, cb1[4].xyzw
mov r17.xyzw, l(0)
mul r17.x, -r15.x, r15.y
mul r19.xyzw, cb10[0].xyzw, r17.xxxx
mad r19.xyzw, cb10[1].xyzw, r17.yyyy, r19.xyzw
mad r19.xyzw, cb10[2].xyzw, r17.zzzz, r19.xyzw
mad r19.xyzw, cb10[3].xyzw, r17.wwww, r19.xyzw
mul r18.xyzw, cb11[12].xyzw, r19.xxxx
mad r18.xyzw, cb11[13].xyzw, r19.yyyy, r18.xyzw
mad r18.xyzw, cb11[14].xyzw, r19.zzzz, r18.xyzw
mad r18.xyzw, cb11[15].xyzw, r19.wwww, r18.xyzw
add r16.xyz, r16.xyz, -r18.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
max r0.w, cb0[10].x, l(0.100000)
min r0.w, r0.w, l(32.000000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r4.xyzw, r3.xyzw, cb0[8].xyzw
sample r5.xyzw, v1.zwzz, t1.xyzw, s3
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
max r5.xyz, r5.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
add r6.xy, r4.wyww, r4.wxww
max r1.w, r6.x, cb0[11].w
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[11].z
mad r2.w, r3.z, cb0[8].z, r6.y
mul r3.w, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[11].x
mad r2.w, cb0[11].y, r2.w, r3.w
max r3.w, r4.w, cb0[10].w
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r4.w, -r1.xyzx, r6.xyzx
add r4.w, r4.w, r4.w
mad r7.xyz, r6.xyzx, -r4.wwww, -r1.xyzx
sample r8.xyzw, r7.xyzx, t2.xyzw, s4
dp3 r4.w, r2.xyzx, r2.xyzx
rsq r4.w, r4.w
mul r2.xyz, r2.xyzx, r4.wwww
dp3 r2.x, r2.xyzx, r5.xyzx
add r2.x, -r2.x, l(1.000000)
log r2.x, r2.x
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
mul r2.xyz, r0.wwww, r8.xyzx
mul r2.xyz, r2.xyzx, cb0[9].xyzx
mul r2.xyz, r2.xyzx, cb0[10].yyyy
mad r5.xyz, -r3.xyzx, cb0[8].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, cb0[10].zzzz, r5.xyzx, r4.xyzx
mad r0.w, -r2.w, r3.w, l(1.000000)
sample r8.xyzw, v5.xyxx, t3.xyzw, s0
log r4.w, r8.w
mul r4.w, r4.w, cb0[4].y
exp r4.w, r4.w
mul r4.w, r4.w, cb0[4].x
mul r8.xyz, r8.xyzx, r4.wwww
lt r4.w, l(0.000000), cb3[2].w
if_nz r4.w
  dp3 r4.w, r7.xyzx, r7.xyzx
  rsq r4.w, r4.w
  mul r9.xyz, r4.wwww, r7.xyzx
  add r10.xyz, -r0.xyzx, cb3[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb3[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r4.w, r10.y, r10.x
  min r4.w, r10.z, r4.w
  add r10.xyz, r0.xyzx, -cb3[2].xyzx
  mad r9.xyz, r9.xyzx, r4.wwww, r10.xyzx
else 
  mov r9.xyz, r7.xyzx
endif 
log r4.w, r0.w
mul r4.w, r4.w, l(0.750000)
exp r4.w, r4.w
mad r5.w, -r4.w, l(0.700000), l(1.700000)
mul r4.w, r4.w, r5.w
mul r4.w, r4.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t4.xyzw, s1, r4.w
log r5.w, r9.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb3[3].x
mul r10.xyz, r9.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r7.xyzx, r7.xyzx
    rsq r6.w, r6.w
    mul r11.xyz, r6.wwww, r7.xyzx
    add r12.xyz, -r0.xyzx, cb3[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb3[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r6.w, r12.y, r12.x
    min r6.w, r12.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r7.xyz, r11.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r7.xyzw, r7.xyzx, t5.xyzw, s1, r4.w
  log r0.x, r7.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r5.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb3[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mad r3.xyz, r3.xyzx, cb0[8].xyzx, -cb0[2].xyzx
mad r3.xyz, r1.wwww, r3.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r0.w, r0.w
eq r0.z, cb0[3].w, l(0.000000)
mul r0.w, r0.y, r0.w
mad r0.w, -r0.w, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r0.w, r0.y
add r0.z, -r1.w, l(1.000000)
mad_sat r0.z, r2.w, r3.w, r0.z
mul r1.xyz, r10.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r3.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r4.xyzx, r8.xyzx, r0.xyzx
mad r0.xyz, r2.xyzx, r5.xyzx, r0.xyzx
mul r0.w, v6.x, cb2[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used