// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ded95df3c0a78d05-vs.txt
// 3DMigoto: ded95df3c0a78d05 |    Unity headers extracted from Standard_BillboardGrass.shader
//    Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff ("Cutoff", Float) = 0.500000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Cull Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 99583
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 204
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 59 0 0
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8
//   ConstBuffer "$Globals" 176
//   Vector 144 [_MainTex_ST]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityTerrain" 272
//   Vector 0 [_WavingTint]
//   Vector 16 [_WaveAndDistance]
//   Vector 32 [_CameraPosition]
//   Vector 48 [_CameraRight] 3
//   Vector 64 [_CameraUp] 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//   BindCB "UnityFog" 2
//   BindCB "UnityTerrain" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 07:00:01 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c6         cb1            12         7  ( FLT, FLT, FLT, FLT)
// c13        cb2             1         1  ( FLT, FLT, FLT, FLT)
// c14        cb3             0         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c19, 0.00600000005, 0.0199999996, 0.0500000007, -0.161616161
    def c20, 1.20000005, 2, 1.60000002, 4.80000019
    def c21, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c22, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c23, 0.0120000001, 0.0199999996, 0.0599999987, 0.0240000002
    def c24, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c25, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c26, -0.5, 0.5, 0, 1
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    add r0.xyz, v0, -c16
    dp3 r0.x, r0, r0
    slt r0.x, c15.w, r0.x
    mad r0.xy, r0.x, -v1, v1
    mad r0.xzw, r0.x, c17.xyyz, v0.xyyz
    mad r0.xyz, r0.y, c18, r0.xzww
    mul r1.xy, r0.xzzw, c15.y
    mul r2, r1.y, c19.xyyz
    mad r1, r1.x, c23, r2
    mov r2.x, c15.x
    mad r1, r2.x, c20, r1
    frc r1, r1
    mad r1, r1, c21.x, c21.y
    mul r2, r1, r1
    mul r3, r1, r2
    mad r1, r3, c19.w, r1
    mul r3, r2, r3
    mul r2, r2, r3
    mad r1, r3, c21.z, r1
    mad r1, r2, c21.w, r1
    mul r1, r1, r1
    mul r1, r1, r1
    mul r2, r1, v1.y
    dp4 r0.w, r1, c22.xxyz
    mul r0.w, r0.w, c22.w
    dp4 r1.x, r2, c24
    dp4 r1.z, r2, c25
    mad r0.xz, r1, -c15.z, r0
    add r1.xyz, r0, -c16
    dp3 r1.x, r1, r1
    add r1.x, -r1.x, c15.w
    add r1.x, r1.x, r1.x
    mul r1.x, r1.x, c16.w
    max r1.x, r1.x, c26.z
    min oT3.w, r1.x, c26.w
    mov r1.x, c26.x
    add r1.xyz, r1.x, c14
    mad r1.xyz, r0.w, r1, c26.y
    mul r1.xyz, r1, v7
    add oT3.xyz, r1, r1
    mad oT0.xy, v3, c1, c1.zwzw
    mul r1.xyz, r0.y, c7
    mul r2, r0.y, c3
    mad r2, c2, r0.x, r2
    mad r2, c4, r0.z, r2
    add r2, r2, c5
    mad r0.xyw, c6.xyzz, r0.x, r1.xyzz
    mad r0.xyz, c8, r0.z, r0.xyww
    mad oT2.xyz, c9, v0.w, r0
    mul r0.x, v2.x, c10.x
    mul r0.y, v2.x, c11.x
    mul r0.z, v2.x, c12.x
    mul r1.x, v2.y, c10.y
    mul r1.y, v2.y, c11.y
    mul r1.z, v2.y, c12.y
    add r0.xyz, r0, r1
    mul r1.x, v2.z, c10.z
    mul r1.y, v2.z, c11.z
    mul r1.z, v2.z, c12.z
    add r0.xyz, r0, r1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mad oT0.z, r2.z, c13.z, c13.w
    mad oPos.xy, r2.w, c0, r2
    mov oPos.zw, r2

// approximately 66 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[19], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[5], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, -cb3[2].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
lt r0.x, cb3[1].w, r0.x
movc r0.xy, r0.xxxx, l(0,0,0,0), v1.xyxx
mad r0.xzw, r0.xxxx, cb3[3].xxyz, v0.xxyz
mad r0.xyz, r0.yyyy, cb3[4].xyzx, r0.xzwx
mul r1.xy, r0.xzxx, cb3[1].yyyy
mul r2.xyzw, r1.yyyy, l(0.006000, 0.020000, 0.020000, 0.050000)
mad r1.xyzw, r1.xxxx, l(0.012000, 0.020000, 0.060000, 0.024000), r2.xyzw
mad r1.xyzw, cb3[1].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r1.xyzw
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r2.xyzw, r1.xyzw, r1.xyzw
mul r3.xyzw, r1.xyzw, r2.xyzw
mad r1.xyzw, r3.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r1.xyzw
mul r3.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
mad r1.xyzw, r3.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r1.xyzw
mad r1.xyzw, r2.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r2.xyzw, r1.xyzw, v1.yyyy
dp4 r0.w, r1.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.w, r0.w, l(0.700000)
dp4 r1.x, r2.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
dp4 r1.z, r2.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
mad r0.xz, -r1.xxzx, cb3[1].zzzz, r0.xxzx
mul r1.xyzw, r0.yyyy, cb1[1].xyzw
mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ded95df3c0a78d05-vs.txt
ne r4.w, r1.w, l(1.0)
if_nz r4.w
  add r4.w, r1.w, -r4.y
  mad r1.x, r4.w, r4.x, r1.x
endif

mad o1.z, r1.z, cb2[1].z, cb2[1].w
mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
mul r1.x, v2.x, cb1[16].x
mul r1.y, v2.x, cb1[17].x
mul r1.z, v2.x, cb1[18].x
mul r2.x, v2.y, cb1[16].y
mul r2.y, v2.y, cb1[17].y
mul r2.z, v2.y, cb1[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb1[16].z
mul r2.y, v2.z, cb1[17].z
mul r2.z, v2.z, cb1[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul o2.xyz, r1.wwww, r1.xyzx
mul r1.xyz, r0.yyyy, cb1[13].xyzx
add r2.xyz, r0.xyzx, -cb3[2].xyzx
dp3 r0.y, r2.xyzx, r2.xyzx
add r0.y, -r0.y, cb3[1].w
add r0.y, r0.y, r0.y
mul_sat o4.w, r0.y, cb3[2].w
mad r1.xyz, cb1[12].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb1[14].xyzx, r0.zzzz, r1.xyzx
mad o3.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
add r0.xyz, cb3[0].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r0.xyz, r0.wwww, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.xyzx, v7.xyzx
add o4.xyz, r0.xyzx, r0.xyzx
ret 
// Approximately 0 instruction slots used