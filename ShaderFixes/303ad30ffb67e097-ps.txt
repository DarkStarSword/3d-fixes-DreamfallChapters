// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 303ad30ffb67e097-ps.txt
// 3DMigoto: 303ad30ffb67e097 |    Unity headers extracted from Hologram.shader
//    Shader "Character/Hologram" {
//      Properties {
//       _MainTex ("Texture", 2D) = "white" { }
//       _BumpMap ("Bumpmap", 2D) = "bump" { }
//       _RimColor ("Rim Color", Color) = (0.260000,0.700000,1.000000,0.000000)
//       _RimPower ("Rim Power", Range(0.100000,8.000000)) = 3.000000
//       _ClipPower ("Clip Power", Range(0.000000,301.000000)) = 200.000000
//       _Brightness ("Brightness", Range(0.000000,3.000000)) = 1.500000
//       _DiffuseAmount ("Diffuse Amount", Range(0.000000,1.000000)) = 0.000000
//       _GlowBoost ("Glowboost", Float) = 1.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 69002
//          Program "fp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 83
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hologram.shader.decompressed:
//   API d3d11_9x
//   Shader model ps_4_0_level_9_1
//   undeciphered1: 201510240 49 3 0
//   Keywords { "POINT" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 96 [_LightColor0]
//   Vector 192 [_RimColor]
//   Float 208 [_RimPower]
//   Float 212 [_ClipPower]
//   Float 216 [_Brightness]
//   Float 220 [_DiffuseAmount]
//   Float 224 [_GlowBoost]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:06:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float    y w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             8         7  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c10, 300, 1, 0, -0.5
    def c11, 2, -1, 0, 0
    dcl t0
    dcl_pp t1.xyz
    dcl_pp t2.xyz
    dcl_pp t3.xyz
    dcl t4.xyz
    dcl t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    rcp r0.w, t5.w
    mul r0.x, r0.w, t5.y
    mul r0.x, r0.x, c6.y
    frc r0.x, r0.x
    add r0.x, r0.x, c10.w
    mov r1.w, c10.x
    add r0.y, r1.w, -c6.y
    cmp r0.y, r0.y, c10.y, c10.z
    mul r0, r0.y, r0.x
    mul r1.xyz, t4.y, c2
    mad r1.xyz, c1, t4.x, r1
    mad r1.xyz, c3, t4.z, r1
    add r1.xyz, r1, c4
    dp3 r1.xy, r1, r1
    texkill r0
    texld_pp r0, r1, s0
    mul_pp r0.xyz, r0.x, c0
    mov r1.xy, t0.zwzw
    texld_pp r2, t0, s1
    texld_pp r1, r1, s2
    mul_pp r0.xyz, r0, r2
    add r2.yzw, -t4.xxyz, c9.xxyz
    nrm_pp r3.xyz, r2.yzww
    mad_pp r1.xy, r1.wyzw, c11.x, c11.y
    dp2add_sat_pp r0.w, r1, r1, c10.z
    add_pp r0.w, -r0.w, c10.y
    rsq_pp r0.w, r0.w
    rcp_pp r1.z, r0.w
    dp3_pp r4.x, t1, r1
    dp3_pp r4.y, t2, r1
    dp3_pp r4.z, t3, r1
    dp3_pp r0.w, r4, r3
    max_pp r1.w, r0.w, c10.z
    mul_pp r0.xyz, r0, r1.w
    add r2.yzw, -t4.xxyz, c8.xxyz
    nrm_pp r3.xyz, r2.yzww
    mul_pp r2.yzw, r3.y, t2.xxyz
    mad_pp r2.yzw, t1.xxyz, r3.x, r2
    mad_pp r2.yzw, t3.xxyz, r3.z, r2
    nrm r3.xyz, r2.yzww
    dp3_sat r1.x, r3, r1
    add_pp r1.x, -r1.x, c10.y
    pow r2.y, r1.x, c6.x
    mul r1.x, r2.y, c5.x
    mad r1.y, r1.x, -c6.z, r2.x
    mul r1.x, r1.x, c6.z
    mad r1.x, c6.w, r1.y, r1.x
    mul_pp r0.w, r1.x, c7.x
    mov_pp oC0, r0

// approximately 58 instruction slots used (3 texture, 55 arithmetic)
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.yw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 303ad30ffb67e097-ps.txt
mov r4.xyzw, cb1[4].xyzw
mul r5.x, -r3.x, r3.y
mul r6.xyzw, cb10[0].xyzw, r5.xxxx
add r4.xyz, r4.xyz, -r6.xyz

div r0.x, v6.y, v6.w
mul r0.x, r0.x, cb0[13].y
frc r0.x, r0.x
add r0.x, r0.x, l(-0.500000)
lt r0.x, r0.x, l(0.000000)
ge r0.y, l(300.000000), cb0[13].y
and r0.x, r0.y, r0.x
discard_nz r0.x
add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample r1.xyzw, v1.zwzz, t1.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.yzw, v5.yyyy, cb0[9].xxyz
mad r0.yzw, cb0[8].xxyz, v5.xxxx, r0.yyzw
mad r0.yzw, cb0[10].xxyz, v5.zzzz, r0.yyzw
add r0.yzw, r0.yyzw, cb0[11].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sample r2.xyzw, r0.yyyy, t2.xyzw, s0
mul r0.yzw, r2.xxxx, cb0[6].xxyz
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.yzw, r0.yyzw, r2.xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
add r0.xyz, -v5.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.yzw, r0.yyyy, v3.xxyz
mad r0.xyw, v2.xyxz, r0.xxxx, r2.yzyw
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[13].x
exp r0.x, r0.x
mul r0.x, r0.x, cb0[12].x
mad r0.y, -r0.x, cb0[13].z, r2.x
mul r0.x, r0.x, cb0[13].z
mad r0.x, cb0[13].w, r0.y, r0.x
mul o0.w, r0.x, cb0[14].x
ret 
// Approximately 0 instruction slots used