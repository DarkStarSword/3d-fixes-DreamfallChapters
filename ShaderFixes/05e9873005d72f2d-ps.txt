// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 05e9873005d72f2d-ps.txt
// 3DMigoto: 05e9873005d72f2d |    Unity headers extracted from Internal-PrePassCollectShadows.shader
//    Shader "Hidden/ShadowSoftener-ScreenSpaceShadows" {
//      Properties {
//       _ShadowMapTexture ("", any) = "" { }
//      }
//      Fallback "Hidden/Internal-ScreenSpaceShadows"
//      SubShader 1/4 {
//        Tags { "ShadowmapFilter"="HardShadow" }
//        Pass 1/1 {
//          Tags { "ShadowmapFilter"="HardShadow" }
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 26885
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 15
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Internal-PrePassCollectShadows.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 48 1 2
//   Keywords { "SHADOWS_SPLIT_SPHERES" "SHADOWS_SINGLE_CASCADE" }
//   undeciphered2: 1 2 4 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Vector 112 [_ShadowMapTexture_TexelSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 112 [_ZBufferParams]
//   Vector 128 [unity_OrthoParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:55:19 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// SV_POSITION              0   xyzw        4      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

sample r0.xyzw, v0.xyxx, t0.xyzw, s0
mad r0.y, cb1[7].x, r0.x, cb1[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.y, r0.x
mad r0.y, cb1[8].w, r0.z, r0.y
mul r1.xyz, r0.yyyy, v1.xyzx
add r2.xyz, -v2.xyzx, v3.xyzx
mad r0.xzw, r0.xxxx, r2.xxyz, v2.xxyz
mad r0.xyz, -v1.xyzx, r0.yyyy, r0.xzwx
mad r0.xyz, cb1[8].wwww, r0.xyzx, r1.xyzx

// copy depth from r0.z to r6.x:
mov r6.x, r0.z

mul r1.xyzw, r0.yyyy, cb2[19].xyzw
mad r1.xyzw, cb2[18].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[20].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb2[21].xyzw

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 05e9873005d72f2d-ps.txt

add r7.x, r6.x, -r5.y
mul r7.x, r5.x, r7.x
mul r8.xyzw, cb10[0].xyzw, r7.xxxx
add r0.xyz, r0.xyzw, -r8.xyzx

mul r1.xyz, r0.yyyy, cb3[9].xyzx
mad r1.xyz, cb3[8].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb3[10].xyzx, r0.zzzz, r1.xyzx
mad r1.xyz, cb3[11].xyzx, r0.wwww, r1.xyzx
mul r2.xy, cb0[7].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.xy, -cb0[7].xyxx, l(3.500000, 3.500000, 0.000000, 0.000000), r1.xyxx
mul r1.xy, r1.xyxx, cb0[7].zwzz
frc r2.zw, r1.xxxy
add r3.xy, -r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
round_ni r1.xy, r1.xyxx
mad r1.xy, r1.xyxx, cb0[7].xyxx, r2.xyxx
mov r0.w, l(0)
mov r1.w, l(0)
loop 
  ige r2.x, r1.w, l(8)
  breakc_nz r2.x
  ieq r2.x, r1.w, l(7)
  movc r2.x, r2.x, r2.w, l(1.000000)
  movc r2.x, r1.w, r2.x, r3.y
  itof r4.y, r1.w
  mov r2.y, r0.w
  mov r3.z, l(0)
  loop 
    ige r3.w, r3.z, l(8)
    breakc_nz r3.w
    itof r4.x, r3.z
    add r4.zw, r4.xxxy, l(0.000000, 0.000000, -4.000000, -4.000000)
    dp2 r3.w, r4.zwzz, r4.zwzz
    sqrt r3.w, r3.w
    mad r4.xz, r4.xxyx, cb0[7].xxyx, r1.xxyx
    mad r3.w, -r3.w, cb3[5].x, r1.z
    sample_c_lz r3.w, r4.xzxx, t1.xxxx, s1, r3.w
    ge r3.w, r3.w, l(0.500000)
    and r3.w, r3.w, l(0x3f800000)
    ieq r4.x, r3.z, l(7)
    movc r4.x, r4.x, r2.z, l(1.000000)
    movc r4.x, r3.z, r4.x, r3.x
    mul r3.w, r3.w, r4.x
    mad r2.y, r3.w, r2.x, r2.y
    iadd r3.z, r3.z, l(1)
  endloop 
  mov r0.w, r2.y
  iadd r1.w, r1.w, l(1)
endloop 
mul r0.w, r0.w, l(0.0204081628)
add r1.x, -cb3[24].x, l(1.000000)
mad r0.w, r0.w, r1.x, cb3[24].x
mad r0.w, r0.w, r1.x, cb3[24].x
add r0.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
add o0.xyzw, r0.xxxx, r0.wwww
ret 
// Approximately 0 instruction slots used