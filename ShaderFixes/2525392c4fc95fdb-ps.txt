// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2525392c4fc95fdb-ps.txt
// 3DMigoto: 2525392c4fc95fdb |    Unity headers extracted from Standard_BumpedDetail_Cutout.shader
//    Shader "Dreamfall/Unity5/Standard_BumpedDetail_Cutout" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _DetailBumpFactor ("Detail Bump Ammount", Range(0.000000,1.000000)) = 1.000000
//       _AlphaFactor ("Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _GlossHigh ("Glossy High", Range(0.000000,1.000000)) = 0.800000
//       _GlossLow ("Glossy Low", Range(0.000000,1.000000)) = 0.200000
//       _Metallness ("Metallness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNesAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _VColorMult ("Vertex Color Strength", Range(0.000000,1.000000)) = 0.000000
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 54604
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 107
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BumpedDetail_Cutout.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 259 10 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 10 7 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Float 128 [_NormalMul]
//   Vector 144 [_Color]
//   Float 160 [_DetailBumpFactor]
//   Float 164 [_AlphaFactor]
//   Float 168 [_GlossHigh]
//   Float 172 [_GlossLow]
//   Float 176 [_MetalNesAlphaFactor]
//   Float 180 [_Metallness]
//   Float 184 [_VColorMult]
//   Float 240 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_Detail] 2D 6
//   SetTexture 2 [_BumpMap] 2D 5
//   SetTexture 3 [_DetailBump] 2D 7
//   SetTexture 4 [_DitherMaskLOD2D] 2D 2
//   SetTexture 5 [_ShadowMapTexture] 2D 3
//   SetTexture 6 [unity_Lightmap] 2D 0
//   SetTexture 7 [unity_LightmapInd] 2D -1
//   SetTexture 8 [unity_SpecCube0] CUBE 1
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerDraw" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:03:50 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 9     z         2     NONE   float     z 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyz 
// TEXCOORD                 5   xyzw        7     NONE   float       
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
// TEXCOORD                 7   xyzw        9     NONE   float   xy  
// TEXCOORD                 8   xyzw       10     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xy
dcl_input_ps linear v10.xyw
dcl_output o0.xyzw
dcl_temps 22
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r20.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2525392c4fc95fdb-ps.txt

mul r20.w, -r20.x, r20.y
mad r21.xyz, -r20.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v3.w
mov r0.y, v4.w
mov r0.z, v5.w
add r1.xyz, -r0.xyzx, r21.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
add r1.w, -cb0[11].z, l(1.000000)
add r3.xyz, -v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s4
sample r5.xyzw, v2.xyxx, t1.xyzw, s6
mul r5.xyzw, r5.xyzw, l(1.800000, 1.800000, 1.800000, 1.800000)
min r5.xyzw, r5.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
add r5.xyzw, r5.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)
mul r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r4.xyzw, cb0[9].xyzw
mul r6.xyz, r3.xyzx, r5.xyzx
sample r7.xyzw, v1.zwzz, t2.xyzw, s5
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r7.xyxx, cb0[8].xxxx
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
sample r8.xyzw, v2.xyxx, t3.xyzw, s7
mad r8.xy, r8.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r8.xyxx, cb0[8].xxxx
dp2 r1.w, r8.xyxx, r8.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r8.z, r1.w
mad r7.xyz, r8.xyzx, cb0[10].xxxx, r7.xyzx
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r7.xyzx
add r4.xy, r4.ywyy, r4.xwxx
mad r1.w, r4.z, l(0.333333343), r4.x
add r2.w, -r1.w, cb0[10].z
mad r1.w, cb0[10].w, r2.w, r1.w
max r2.w, r4.w, cb0[10].y
mul r3.w, r1.w, r2.w
max r4.x, r4.y, cb0[11].x
min r4.x, r4.x, l(1.000000)
mul r4.x, r4.x, cb0[11].y
div r8.xy, v8.xyxx, v8.zzzz
frc r4.y, r8.y
mad r8.z, r4.y, l(0.062500), cb4[20].y
sample r8.xyzw, r8.xzxx, t4.xyzw, s2
add r4.y, r8.w, l(-0.500000)
lt r4.y, r4.y, l(0.000000)
discard_nz r4.y
mad r4.y, r4.w, cb0[9].w, -cb0[15].x
lt r4.y, r4.y, l(0.000000)
discard_nz r4.y
div r4.yz, v10.xxyx, v10.wwww
sample r8.xyzw, r4.yzyy, t5.xyzw, s3
dp3 r9.x, v3.xyzx, r7.xyzx
dp3 r9.y, v4.xyzx, r7.xyzx
dp3 r9.z, v5.xyzx, r7.xyzx
mad r4.y, -r1.w, r2.w, l(1.000000)
dp3 r4.z, -r2.xyzx, r9.xyzx
add r4.z, r4.z, r4.z
mad r7.xyz, r9.xyzx, -r4.zzzz, -r2.xyzx
sample r10.xyzw, v9.xyxx, t6.xyzw, s0
log r4.z, r10.w
mul r4.z, r4.z, cb0[4].y
exp r4.z, r4.z
mul r4.z, r4.z, cb0[4].x
mul r8.yzw, r10.xxyz, r4.zzzz
sample r11.xyzw, v9.xyxx, t7.xyzw, s0
mad r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r4.z, r11.xyzx, r11.xyzx
sqrt r4.z, r4.z
max r4.z, r4.z, l(0.001000)
div r11.xyz, r11.xyzx, r4.zzzz
dp3 r4.w, r9.xyzx, r11.xyzx
max r4.w, r4.w, l(0.000000)
add r6.w, -r4.z, l(1.000000)
mul r12.xyz, r6.wwww, r8.yzwy
mul r13.xyz, r4.zzzz, r8.yzwy
add r14.xy, v9.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r15.xyzw, r14.xyxx, t6.xyzw, s0
log r6.w, r15.w
mul r6.w, r6.w, cb0[4].y
exp r6.w, r6.w
mul r6.w, r6.w, cb0[4].x
mul r15.xyz, r15.xyzx, r6.wwww
sample r14.xyzw, r14.xyxx, t7.xyzw, s0
mad r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r6.w, r14.xyzx, r14.xyzx
sqrt r6.w, r6.w
max r6.w, r6.w, l(0.001000)
div r14.xyz, r14.xyzx, r6.wwww
dp3 r7.w, r9.xyzx, r14.xyzx
max r7.w, r7.w, l(0.000000)
add r9.w, -r6.w, l(1.000000)
mul r16.xyz, r9.wwww, r15.xyzx
mul r17.xyz, r6.wwww, r15.xyzx
mul r16.xyz, r7.wwww, r16.xyzx
mad r12.xyz, r12.xyzx, r4.wwww, r16.xyzx
dp3_sat r9.w, r9.xyzx, cb2[0].xyzx
add r10.w, -r8.x, l(1.000000)
mul r9.w, r9.w, r10.w
mul r16.xyz, r9.wwww, cb0[6].xyzx
mad r18.xyz, r8.yzwy, r4.zzzz, -r16.xyzx
mul r10.xyz, r8.xxxx, r10.xyzx
max r18.xyz, r18.xyzx, r10.xyzx
mad r8.xyz, r8.yzwy, r4.zzzz, -r18.xyzx
mad r8.xyz, cb3[24].xxxx, r8.xyzx, r18.xyzx
min r8.xyz, r8.xyzx, r13.xyzx
mad r13.xyz, r15.xyzx, r6.wwww, -r16.xyzx
max r13.xyz, r10.xyzx, r13.xyzx
mad r15.xyz, r15.xyzx, r6.wwww, -r13.xyzx
mad r13.xyz, cb3[24].xxxx, r15.xyzx, r13.xyzx
min r13.xyz, r13.xyzx, r17.xyzx
mad r15.xyz, -r9.wwww, cb0[6].xyzx, r12.xyzx
max r10.xyz, r10.xyzx, r15.xyzx
add r15.xyz, -r10.xyzx, r12.xyzx
mad r10.xyz, cb3[24].xxxx, r15.xyzx, r10.xyzx
min r10.xyz, r10.xyzx, r12.xyzx
lt r4.z, l(0.000000), cb6[2].w
if_nz r4.z
  dp3 r4.z, r7.xyzx, r7.xyzx
  rsq r4.z, r4.z
  mul r12.xyz, r4.zzzz, r7.xyzx
  add r15.xyz, -r0.xyzx, cb6[0].xyzx
  div r15.xyz, r15.xyzx, r12.xyzx
  add r16.xyz, -r0.xyzx, cb6[1].xyzx
  div r16.xyz, r16.xyzx, r12.xyzx
  lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
  movc r15.xyz, r17.xyzx, r15.xyzx, r16.xyzx
  min r4.z, r15.y, r15.x
  min r4.z, r15.z, r4.z
  add r15.xyz, r0.xyzx, -cb6[2].xyzx
  mad r12.xyz, r12.xyzx, r4.zzzz, r15.xyzx
else 
  mov r12.xyz, r7.xyzx
endif 
log r4.z, r4.y
mul r4.z, r4.z, l(0.750000)
exp r4.z, r4.z
mad r6.w, -r4.z, l(0.700000), l(1.700000)
mul r4.z, r4.z, r6.w
mul r4.z, r4.z, l(6.000000)
sample_l r12.xyzw, r12.xyzx, t8.xyzw, s1, r4.z
log r6.w, r12.w
mul r6.w, r6.w, cb6[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb6[3].x
mul r15.xyz, r12.xyzx, r6.wwww
lt r8.w, cb6[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb6[6].w
  if_nz r8.w
    dp3 r8.w, r7.xyzx, r7.xyzx
    rsq r8.w, r8.w
    mul r16.xyz, r7.xyzx, r8.wwww
    add r17.xyz, -r0.xyzx, cb6[4].xyzx
    div r17.xyz, r17.xyzx, r16.xyzx
    add r18.xyz, -r0.xyzx, cb6[5].xyzx
    div r18.xyz, r18.xyzx, r16.xyzx
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r16.xyzx
    movc r17.xyz, r19.xyzx, r17.xyzx, r18.xyzx
    min r8.w, r17.y, r17.x
    min r8.w, r17.z, r8.w
    add r0.xyz, r0.xyzx, -cb6[6].xyzx
    mad r7.xyz, r16.xyzx, r8.wwww, r0.xyzx
  endif 
  sample_l r16.xyzw, r7.xyzx, t9.xyzw, s1, r4.z
  log r0.x, r16.w
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r0.xyz, r16.xyzx, r0.xxxx
  mad r7.xyz, r6.wwww, r12.xyzx, -r0.xyzx
  mad r15.xyz, cb6[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r9.xyzx, r9.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r9.xyzx
mad r3.xyz, r5.xyzx, r3.xyzx, -cb0[2].xyzx
mad r3.xyz, r4.xxxx, r3.xyzx, cb0[2].xyzx
mad r4.x, -r4.x, cb0[2].w, cb0[2].w
mul r5.xyz, r4.xxxx, r6.xyzx
mad r6.xyz, r1.xyzx, r0.wwww, r11.xyzx
dp3 r4.z, r6.xyzx, r6.xyzx
max r4.z, r4.z, l(0.001000)
rsq r4.z, r4.z
mul r6.xyz, r4.zzzz, r6.xyzx
dp3 r4.z, r0.xyzx, r6.xyzx
max r4.z, r4.z, l(0.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3 r2.y, r11.xyzx, r6.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.z, r4.y, r4.y
mul r6.x, r2.z, l(0.797884583)
mad r6.y, -r2.z, l(0.797884583), l(1.000000)
mad r6.z, r4.w, r6.y, r6.x
mad r6.x, r2.x, r6.y, r6.x
mad r6.x, r6.z, r6.x, l(0.000010)
div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
add r6.y, -r4.y, l(1.000000)
mad r6.y, r6.y, l(0.968000), l(0.030000)
log r6.y, r6.y
div r6.y, l(10.000000), r6.y
mul r6.z, r6.y, r6.y
mad r6.yw, r6.yyyy, r6.yyyy, l(0.000000, 2.000000, 0.000000, 1.000000)
mul r6.y, r6.y, l(0.159154937)
log r4.z, r4.z
mul r4.z, r4.z, r6.z
exp r4.z, r4.z
mul r4.z, r6.y, r4.z
add r6.y, -r4.w, l(1.000000)
mul r7.x, r6.y, r6.y
mul r7.x, r7.x, r7.x
mul r6.y, r6.y, r7.x
add r2.x, -r2.x, l(1.000000)
mul r7.x, r2.x, r2.x
mul r7.x, r7.x, r7.x
mul r2.x, r2.x, r7.x
mul r7.x, r2.y, r2.y
dp2 r7.x, r7.xxxx, r4.yyyy
add r7.x, r7.x, l(-0.500000)
mad r6.y, r7.x, r6.y, l(1.000000)
mad r7.x, r7.x, r2.x, l(1.000000)
mul r6.y, r6.y, r7.x
mul r4.z, r4.z, r6.x
mul r4.z, r4.z, l(0.785398185)
eq r6.x, cb0[3].w, l(0.000000)
max r7.x, r4.z, l(0.000100)
sqrt r7.x, r7.x
movc r4.z, r6.x, r7.x, r4.z
mul r4.z, r4.w, r4.z
max r4.z, r4.z, l(0.000000)
mul r4.w, r4.w, r6.y
mul r4.y, r2.z, r4.y
mad r4.y, -r4.y, l(0.280000), l(1.000000)
mad r6.y, r2.z, r2.z, l(1.000000)
div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
movc r4.y, r6.x, r4.y, r6.y
dp3 r6.y, r3.xyzx, r3.xyzx
ne r6.y, r6.y, l(0.000000)
and r6.y, r6.y, l(0x3f800000)
mul r4.z, r4.z, r6.y
mad r1.w, r1.w, r2.w, -r4.x
add_sat r1.w, r1.w, l(1.000000)
mad r7.xyz, r8.xyzx, r4.wwww, r10.xyzx
mul r4.xzw, r8.xxyz, r4.zzzz
add r2.y, -r2.y, l(1.000000)
mul r2.w, r2.y, r2.y
mul r2.w, r2.w, r2.w
mul r2.y, r2.y, r2.w
add r8.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r8.xyz, r8.xyzx, r2.yyyy, r3.xyzx
mul r4.xzw, r4.xxzw, r8.xxyz
mad r4.xzw, r5.xxyz, r7.xxyz, r4.xxzw
mul r7.xyz, r15.xyzx, r4.yyyy
add r8.xyz, -r3.xyzx, r1.wwww
mad r2.xyw, r2.xxxx, r8.xyxz, r3.xyxz
mad r2.xyw, r7.xyxz, r2.xyxw, r4.xzxw
mad r1.xyz, r1.xyzx, r0.wwww, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, r14.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r0.y, r0.y
mad r0.z, r0.z, r3.w, r2.z
log r0.x, r0.x
mul r0.x, r0.x, r6.z
exp r0.x, r0.x
mul r0.x, r0.x, r6.w
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(8.000000), l(0.000100)
div r0.x, r0.x, r0.y
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r6.x, r0.y, r0.x
mad r0.xyz, r0.xxxx, r3.xyzx, r5.xyzx
mul r0.xyz, r13.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r7.wwww, r2.xywx
mul r0.w, v2.z, cb5[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, r5.w
ret 
// Approximately 0 instruction slots used