// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 5a79d7cf390833bf-ps.txt
// 3DMigoto: 5a79d7cf390833bf | Matched 2 variants of 1 shaders: Hidden/ShadowSoftener-DeferredShading
//
//       Unity headers extracted from ShadowSoftener-DeferredShading.shader
//       Shader "Hidden/ShadowSoftener-DeferredShading" {
//         Properties {
//          _LightTexture0 ("", any) = "" { }
//          _LightTextureB0 ("", 2D) = "" { }
//          _ShadowMapTexture ("", any) = "" { }
//          _SrcBlend ("", Float) = 1.000000
//          _DstBlend ("", Float) = 1.000000
//         }
//         Fallback "Hidden/Internal-DeferredShading"
//         SubShader 1/1 {
//           Pass 1/2 {
//             Tags { "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Blend [_SrcBlend] [_DstBlend]
//             GpuProgramID 28233
//             Program "fp" {
//               SubProgram "d3d11 " {
// 2:              GpuProgramIndex 101
// 1:              GpuProgramIndex 95
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from ShadowSoftener-DeferredShading.shader.decompressed:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201510240 107 9 1
// 2:   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_HDR_ON" }
// 1:   Keywords { "POINT" "SHADOWS_CUBE" "UNITY_HDR_ON" }
//      undeciphered2: 1 6 5 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 288
//      Vector 64 [unity_ColorSpaceLuminance]
//      Vector 144 [_LightPos]
//      Vector 160 [_LightColor]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityLighting" 720
//      Vector 16 [_LightPositionRange]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      SetTexture 0 [_CameraDepthTexture] 2D 1
//      SetTexture 1 [_LightTextureB0] 2D 2
//      SetTexture 2 [_ShadowMapTexture] CUBE 0
//      SetTexture 3 [_CameraGBufferTexture0] 2D 3
//      SetTexture 4 [_CameraGBufferTexture1] 2D 4
//      SetTexture 5 [_CameraGBufferTexture2] 2D 5
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//      BindCB "UnityLighting" 3
//      BindCB "UnityShadows" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:17:34 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 5a79d7cf390833bf-ps.txt
mov r11.xyzw, cb1[4].xyzw
mul r12.x, -r10.x, r10.y
mul r14.xyzw, cb10[0].xyzw, r12.xxxx
mul r13.xyzw, cb11[12].xyzw, r14.xxxx
mad r13.xyzw, cb11[13].xyzw, r14.yyyy, r13.xyzw
mad r13.xyzw, cb11[14].xyzw, r14.zzzz, r13.xyzw
mad r13.xyzw, cb11[15].xyzw, r14.wwww, r13.xyzw
add r11.xyz, r11.xyz, -r13.xyz

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s1
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx

// copy depth from r0.z to r15.x:
mov r15.x, r0.z

mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 5a79d7cf390833bf-ps.txt

add r16.x, r15.x, -r10.y
mul r16.x, r10.x, r16.x
mul r18.xyzw, cb10[0].xyzw, r16.xxxx
mul r17.xyzw, cb11[12].xyzw, r18.xxxx
mad r17.xyzw, cb11[13].xyzw, r18.yyyy, r17.xyzw
mad r17.xyzw, cb11[14].xyzw, r18.zzzz, r17.xyzw
mad r17.xyzw, cb11[15].xyzw, r18.wwww, r17.xyzw
add r0.xyz, r0.xyzw, -r17.xyzx

add r2.xyz, r0.xyzx, -cb0[9].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r1.z, r0.w
mul r3.xyz, r1.zzzz, r2.xyzx
mul r1.w, r0.w, cb0[9].w
sample r4.xyzw, r1.wwww, t1.xyzw, s2
sqrt r0.w, r0.w
mul r0.w, r0.w, cb3[1].w
mov r5.xyzw, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r2.w, r1.w, l(12)
  breakc_nz r2.w
  itof r2.w, r1.w
  add r6.x, r2.w, l(1.000000)
  itof r3.w, -r1.w
  add r6.yz, r3.wwww, l(0.000000, -1.000000, -1.000000, 0.000000)
  mul r4.yzw, r6.xxyz, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
  and r3.w, r1.w, l(1)
  ieq r3.w, r3.w, l(1)
  movc r4.yzw, r3.wwww, -r4.yyww, r4.yyzw
  add r6.xyz, r2.xyzx, r4.yyyy
  sample r6.xyzw, r6.xyzx, t2.xyzw, s0
  add r6.yzw, r2.xxyz, r4.wwwy
  sample r7.xyzw, r6.yzwy, t2.xyzw, s0
  add r6.yzw, r2.xxyz, r4.wwyw
  sample r8.xyzw, r6.yzwy, t2.xyzw, s0
  add r4.yzw, r2.xxyz, r4.yyzw
  sample r9.xyzw, r4.yzwy, t2.yzwx, s0
  mad r2.w, -r2.w, l(0.010000), l(1.000000)
  mul r2.w, r0.w, r2.w
  mov r9.x, r6.x
  mov r9.y, r7.x
  mov r9.z, r8.x
  lt r6.xyzw, r9.xyzw, r2.wwww
  movc r6.xyzw, r6.xyzw, cb4[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  add r5.xyzw, r5.xyzw, r6.xyzw
  iadd r1.w, r1.w, l(1)
endloop 
dp4 r0.w, r5.xyzw, l(0.0208333340, 0.0208333340, 0.0208333340, 0.0208333340)
mul r0.w, r0.w, r4.x
sample r4.xyzw, r1.xyxx, t3.xyzw, s3
sample r5.xyzw, r1.xyxx, t4.xyzw, s4
sample r6.xyzw, r1.xyxx, t5.xyzw, s5
mul r1.xyw, r0.wwww, cb0[10].xyxz
mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
add r0.xyz, r0.xyzx, -r11.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r6.xyzx, -r3.xyzx
add r7.xyzw, -r5.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r2.xyz, -r2.xyzx, r1.zzzz, -r0.xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
max r1.z, r1.z, l(0.001000)
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
dp3 r1.z, r6.xyzx, r2.xyzx
max r1.z, r1.z, l(0.000000)
dp3 r0.x, r6.xyzx, -r0.xyzx
dp3 r0.y, -r3.xyzx, r2.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r7.x, r7.x
mul r2.x, r0.z, l(0.797884583)
mad r0.z, -r0.z, l(0.797884583), l(1.000000)
mad r2.y, r0.w, r0.z, r2.x
mad r0.z, r0.x, r0.z, r2.x
mad r0.z, r2.y, r0.z, l(0.000010)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r2.x, -r7.x, l(1.000000)
mad r2.x, r2.x, l(0.968000), l(0.030000)
log r2.x, r2.x
div r2.x, l(10.000000), r2.x
mul r2.y, r2.x, r2.x
mad r2.x, r2.x, r2.x, l(2.000000)
mul r2.x, r2.x, l(0.159154937)
log r1.z, r1.z
mul r1.z, r1.z, r2.y
exp r1.z, r1.z
mul r1.z, r2.x, r1.z
add r2.x, -r0.w, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.x, r2.y
add r0.x, -r0.x, l(1.000000)
mul r2.y, r0.x, r0.x
mul r2.y, r2.y, r2.y
mul r0.x, r0.x, r2.y
mul r2.y, r0.y, r0.y
dp2 r2.y, r2.yyyy, r7.xxxx
add r2.y, r2.y, l(-0.500000)
mad r2.x, r2.y, r2.x, l(1.000000)
mad r0.x, r2.y, r0.x, l(1.000000)
mul r0.x, r0.x, r2.x
mul r0.z, r0.z, r1.z
mul r0.z, r0.z, l(0.785398185)
eq r1.z, cb0[4].w, l(0.000000)
max r2.x, r0.z, l(0.000100)
sqrt r2.x, r2.x
movc r0.z, r1.z, r2.x, r0.z
mul r0.xz, r0.wwww, r0.xxzx
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r2.xyz, r0.xxxx, r1.xywx
mul r0.xzw, r1.xxyw, r0.zzzz
add r0.y, -r0.y, l(1.000000)
mul r1.x, r0.y, r0.y
mul r1.x, r1.x, r1.x
mul r0.y, r0.y, r1.x
mad r1.xyz, r7.yzwy, r0.yyyy, r5.xyzx
mul r0.xyz, r0.xzwx, r1.xyzx
mad o0.xyz, r4.xyzx, r2.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used