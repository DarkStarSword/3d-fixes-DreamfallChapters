// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1044bcf41bae7e54-ps.txt
// 3DMigoto: 1044bcf41bae7e54 |    Unity headers extracted from Alpha-Glossy.shader
//    Shader "Legacy Shaders/Transparent/Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB) TransGloss (A)", 2D) = "white" { }
//      }
//      Fallback "Legacy Shaders/Transparent/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 63603
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 58
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alpha-Glossy.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 69 5 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 3 3 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Float 144 [_Shininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [unity_Lightmap] 2D 0
//   SetTexture 2 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:58:08 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1044bcf41bae7e54-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xy, v4.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r1.xyzw, r0.xyxx, t1.xyzw, s0
sample r0.xyzw, r0.xyxx, t2.xyzw, s0
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
log r0.w, r1.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
mul r1.xyz, r1.xyzx, r0.wwww
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
max r0.w, r0.w, l(0.001000)
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.xyzx, cb0[7].xyzx
div r0.xyz, r0.xyzx, r0.wwww
add r0.w, -r0.w, l(1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
add r4.xyz, -v3.xyzx, r8.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mad r5.xyz, r4.xyzx, r0.wwww, r0.xyzx
dp3 r0.x, v2.xyzx, r0.xyzx
dp3 r0.y, r5.xyzx, r5.xyzx
rsq r0.y, r0.y
mul r5.xyz, r0.yyyy, r5.xyzx
dp3 r0.y, v2.xyzx, r5.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.z, cb0[9].x, l(128.000000)
mul r0.y, r0.y, r0.z
exp r0.y, r0.y
sample r5.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.y, r0.y, r5.w
mul r3.xyz, r0.yyyy, r3.xyzx
mul r6.xyzw, r5.xyzw, cb0[8].xyzw
mul r2.xyz, r2.xyzx, r6.xyzx
mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
mul r1.xyz, r0.xxxx, r1.xyzx
sample r3.xyzw, v4.xyxx, t2.xyzw, s0
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
max r0.x, r0.x, l(0.001000)
div r3.xyz, r3.xyzx, r0.xxxx
mad r4.xyz, r4.xyzx, r0.wwww, r3.xyzx
dp3 r0.y, v2.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, v2.xyzx, r3.xyzx
max r0.yw, r0.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.w, r0.w
mul r0.z, r0.w, r0.z
exp r0.z, r0.z
mul r0.z, r5.w, r0.z
sample r3.xyzw, v4.xyxx, t1.xyzw, s0
log r0.w, r3.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
mul r3.xyz, r3.xyzx, r0.wwww
mul r4.xyz, r0.xxxx, r3.xyzx
add r0.x, -r0.x, l(1.000000)
mul r3.xyz, r0.xxxx, r3.xyzx
mad r1.xyz, r3.xyzx, r0.yyyy, r1.xyzx
mul r3.xyz, r4.xyzx, cb0[7].xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mul r0.xzw, r0.zzzz, r3.xxyz
mad r0.xyz, r4.xyzx, r0.yyyy, r0.xzwx
mov r0.w, r6.w
mov r2.w, r0.w
add r0.xyzw, r0.xyzw, r2.xyzw
mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
mov o0.w, r0.w
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad_sat r0.w, v1.z, cb2[1].z, cb2[1].w
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
ret 
// Approximately 0 instruction slots used