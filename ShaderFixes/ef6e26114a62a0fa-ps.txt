// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ef6e26114a62a0fa-ps.txt
// 3DMigoto: ef6e26114a62a0fa | Matched 4 variants of 1 shaders: ProBuilder/Standard Vertex Color
//
//       Unity headers extracted from pb_StandardVertexColor.shader
//       Shader "ProBuilder/Standard Vertex Color" {
//         Properties {
//          _BumpMap ("Normal Map", 2D) = "bump" { }
//          _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Base Color", 2D) = "white" { }
//          _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
//          _Gloss ("Gloss", Range(0.000000,1.000000)) = 0.800000
//         }
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/2 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//             GpuProgramID 24238
//             Program "fp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 141
// 2:              GpuProgramIndex 175
// 4:              GpuProgramIndex 191
// 8:              GpuProgramIndex 213
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from pb_StandardVertexColor.shader.decompressed:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201510240 196 7 4
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "DIRLIGHTMAP_OFF" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "DIRLIGHTMAP_OFF" }
// 8:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//      undeciphered2: 1 7 6 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 32 [unity_ColorSpaceDielectricSpec]
//      Vector 64 [unity_Lightmap_HDR]
//      Vector 96 [_LightColor0]
//      Vector 128 [_Color]
//      Vector 144 [_MainTex_ST]
//      Vector 160 [_BumpMap_ST]
//      Float 176 [_Metallic]
//      Float 180 [_Gloss]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      SetTexture 0 [_BumpMap] 2D 4
//      SetTexture 1 [_ShadowMapTexture] 2D 2
//      SetTexture 2 [_MainTex] 2D 3
//      SetTexture 3 [unity_Lightmap] 2D 0
//      SetTexture 4 [unity_LightmapInd] 2D -1
//      SetTexture 5 [unity_SpecCube0] CUBE 1
//      SetTexture 6 [unity_SpecCube1] CUBE -1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityFog" 4
//      BindCB "UnityReflectionProbes" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:00:59 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float       
// TEXCOORD                 2   xy          2     NONE   float       
// TEXCOORD                 9     z         2     NONE   float     z 
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// COLOR                    0   xyzw        7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
// TEXCOORD                10   xyzw        9     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyw
dcl_input_ps linear v9.xy
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ef6e26114a62a0fa-ps.txt
mov r15.xyzw, cb1[4].xyzw
mul r16.x, -r14.x, r14.y
mul r17.xyzw, cb10[0].xyzw, r16.xxxx
add r15.xyz, r15.xyz, -r17.xyz

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s4
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r2.yzw, r2.yyyy, v6.xxyz
mad r2.xyz, r2.xxxx, v5.xyzx, r2.yzwy
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, -r1.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
rsq r0.w, r0.w
mad r3.xyz, cb2[0].xyzx, r0.wwww, r1.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
div r4.xy, v8.xyxx, v8.wwww
sample r4.xyzw, r4.xyxx, t1.xyzw, s2
mul r4.yzw, r4.xxxx, cb0[6].xxyz
add r0.w, -cb0[11].y, l(1.000000)
mad r1.w, r0.w, l(10.000000), l(1.000000)
exp r1.w, r1.w
add r2.w, -r0.w, l(1.000000)
sample r5.xyzw, v9.xyxx, t3.xyzw, s0
log r3.w, r5.w
mul r3.w, r3.w, cb0[4].y
exp r3.w, r3.w
mul r3.w, r3.w, cb0[4].x
mul r6.xyz, r5.xyzx, r3.wwww
sample r7.xyzw, v9.xyxx, t4.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w
max r3.w, r3.w, l(0.001000)
div r7.xyz, r7.xyzx, r3.wwww
dp3 r5.w, r0.xyzx, r7.xyzx
max r5.w, r5.w, l(0.000000)
add r6.w, -r3.w, l(1.000000)
mul r8.xyz, r6.wwww, r6.xyzx
mul r9.xyz, r3.wwww, r6.xyzx
add r10.xy, v9.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r11.xyzw, r10.xyxx, t3.xyzw, s0
log r6.w, r11.w
mul r6.w, r6.w, cb0[4].y
exp r6.w, r6.w
mul r6.w, r6.w, cb0[4].x
mul r11.xyz, r11.xyzx, r6.wwww
sample r10.xyzw, r10.xyxx, t4.xyzw, s0
mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r6.w, r10.xyzx, r10.xyzx
sqrt r6.w, r6.w
max r6.w, r6.w, l(0.001000)
div r10.xyz, r10.xyzx, r6.wwww
dp3 r7.w, r0.xyzx, r10.xyzx
max r7.w, r7.w, l(0.000000)
add r6.w, -r6.w, l(1.000000)
mul r10.xyz, r6.wwww, r11.xyzx
mul r10.xyz, r7.wwww, r10.xyzx
mad r8.xyz, r8.xyzx, r5.wwww, r10.xyzx
dp3_sat r6.w, r0.xyzx, cb2[0].xyzx
add r7.w, -r4.x, l(1.000000)
mul r6.w, r6.w, r7.w
mul r10.xyz, r6.wwww, cb0[6].xyzx
mad r10.xyz, r6.xyzx, r3.wwww, -r10.xyzx
mul r5.xyz, r4.xxxx, r5.xyzx
max r10.xyz, r10.xyzx, r5.xyzx
mad r6.xyz, r6.xyzx, r3.wwww, -r10.xyzx
mad r6.xyz, cb3[24].xxxx, r6.xyzx, r10.xyzx
min r6.xyz, r6.xyzx, r9.xyzx
mad r9.xyz, -r6.wwww, cb0[6].xyzx, r8.xyzx
max r5.xyz, r5.xyzx, r9.xyzx
add r9.xyz, -r5.xyzx, r8.xyzx
mad r5.xyz, cb3[24].xxxx, r9.xyzx, r5.xyzx
min r5.xyz, r5.xyzx, r8.xyzx
lt r3.w, l(0.000000), cb5[2].w
if_nz r3.w
  dp3 r3.w, r2.xyzx, r2.xyzx
  rsq r3.w, r3.w
  mul r8.xyz, r2.xyzx, r3.wwww
  add r9.xyz, -v3.xyzx, cb5[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v3.xyzx, cb5[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r3.w, r9.y, r9.x
  min r3.w, r9.z, r3.w
  add r9.xyz, v3.xyzx, -cb5[2].xyzx
  mad r8.xyz, r8.xyzx, r3.wwww, r9.xyzx
else 
  mov r8.xyz, r2.xyzx
endif 
log r3.w, r2.w
mul r3.w, r3.w, l(0.750000)
exp r3.w, r3.w
mad r4.x, -r3.w, l(0.700000), l(1.700000)
mul r3.w, r3.w, r4.x
mul r3.w, r3.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r3.w
log r4.x, r8.w
mul r4.x, r4.x, cb5[3].y
exp r4.x, r4.x
mul r4.x, r4.x, cb5[3].x
mul r9.xyz, r8.xyzx, r4.xxxx
lt r6.w, cb5[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb5[6].w
  if_nz r6.w
    dp3 r6.w, r2.xyzx, r2.xyzx
    rsq r6.w, r6.w
    mul r10.xyz, r2.xyzx, r6.wwww
    add r11.xyz, -v3.xyzx, cb5[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v3.xyzx, cb5[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r11.xyz, v3.xyzx, -cb5[6].xyzx
    mad r2.xyz, r10.xyzx, r6.wwww, r11.xyzx
  endif 
  sample_l r10.xyzw, r2.xyzx, t6.xyzw, s1, r3.w
  log r2.x, r10.w
  mul r2.x, r2.x, cb5[7].y
  exp r2.x, r2.x
  mul r2.x, r2.x, cb5[7].x
  mul r2.xyz, r10.xyzx, r2.xxxx
  mad r8.xyz, r4.xxxx, r8.xyzx, -r2.xyzx
  mad r9.xyz, cb5[1].wwww, r8.xyzx, r2.xyzx
endif 
dp3 r2.x, r7.xyzx, r3.xyzx
max r2.x, r2.x, l(0.000000)
mad r2.yz, v1.xxyx, cb0[9].xxyx, cb0[9].zzwz
sample r7.xyzw, r2.yzyy, t2.xyzw, s3
mul r7.xyz, r7.xyzx, cb0[8].xyzx
mul r8.xyz, r7.xyzx, v7.xyzx
mad r7.xyz, r7.xyzx, v7.xyzx, -cb0[2].xyzx
mad r7.xyz, cb0[11].xxxx, r7.xyzx, cb0[2].xyzx
mad r2.y, -cb0[11].x, cb0[2].w, cb0[2].w
mul r8.xyz, r2.yyyy, r8.xyzx
add r2.y, -r2.y, l(1.000000)
dp3 r1.x, r0.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
dp3 r0.x, r0.xyzx, r3.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r2.w, r2.w
mul r0.z, r0.y, l(0.797884583)
mad r0.y, -r0.y, l(0.797884583), l(1.000000)
mad r1.y, r5.w, r0.y, r0.z
mad r0.y, r1.x, r0.y, r0.z
mad r0.y, r1.y, r0.y, l(0.000010)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r2.w, l(1.000000)
mad r0.z, r0.z, l(0.968000), l(0.030000)
log r0.z, r0.z
div r0.z, l(10.000000), r0.z
mul r1.y, r0.z, r0.z
mad r0.z, r0.z, r0.z, l(2.000000)
mul r0.z, r0.z, l(0.159154937)
log r0.x, r0.x
mul r1.y, r0.x, r1.y
exp r1.y, r1.y
mul r0.xz, r0.xxzx, r1.wwyw
mul r0.y, r0.y, r5.w
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, l(0.785398185)
max r0.y, r0.y, l(0.000000)
exp r0.x, r0.x
mul r0.x, r0.y, r0.x
mul r0.xyz, r6.xyzx, r0.xxxx
add r1.y, -r2.x, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r3.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.yzw, r3.xxyz, r1.yyyy, r7.xxyz
add_sat r0.w, r0.w, r2.y
add r2.yz, -r1.xxxx, l(0.000000, 1.000000, 1.000010, 0.000000)
mul r3.xy, r2.yzyy, r2.yzyy
mul r3.xy, r3.xyxx, r3.xyxx
mul r2.yz, r2.yyzy, r3.xxyx
add r3.xyz, -r7.xyzx, r0.wwww
mad r3.xyz, r2.yyyy, r3.xyzx, r7.xyzx
mul r3.xyz, r3.xyzx, r9.xyzx
mad r0.xyz, r0.xyzx, r1.yzwy, r3.xyzx
add r0.w, r2.x, r2.x
mul r0.w, r2.x, r0.w
mad r0.w, r0.w, r2.w, l(-0.500000)
add r1.x, -r5.w, l(1.000010)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.y, r1.x
mad r1.x, r0.w, r1.x, l(1.000000)
mad r0.w, r0.w, r2.z, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r5.w, r0.w
mad r1.xyz, r0.wwww, r4.yzwy, r5.xyzx
mad r0.xyz, r1.xyzx, r8.xyzx, r0.xyzx
mad_sat r0.w, v2.z, cb4[1].z, cb4[1].w
add r0.xyz, r0.xyzx, -cb4[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb4[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used