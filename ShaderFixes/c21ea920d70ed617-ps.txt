// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c21ea920d70ed617-ps.txt
// 3DMigoto: c21ea920d70ed617 |    Unity headers extracted from StandardVertexColor.shader
//    Shader "Dreamfall/Unity5/Standard VertexColor" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//       _NormalTex ("Normal (RGB)", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _MetallicGlossTex ("Metallic(R)/Glossines(G)/Occlusion(B)", 2D) = "white" { }
//       _GlossinessAdjust ("Smoothness Max", Range(0.000000,1.000000)) = 0.500000
//       _MetallicAdjust ("Metallic Max", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 16029
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 76
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from StandardVertexColor.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 184 6 6
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 6 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 128 [_NormalMul]
//   Float 132 [_GlossinessAdjust]
//   Float 136 [_MetallicAdjust]
//   Vector 160 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_MetallicGlossTex] 2D 4
//   SetTexture 2 [_NormalTex] 2D 3
//   SetTexture 3 [unity_SpecCube0] CUBE 0
//   SetTexture 4 [unity_SpecCube1] CUBE -1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:48:56 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 7      w        7     NONE   float      w
// TEXCOORD                 8   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v7.w
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c21ea920d70ed617-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[10].xyzx
mul r4.xyz, r3.xyzx, v5.xyzx
sample r5.xyzw, v1.xyxx, t1.xyzw, s4
sample r6.xyzw, v1.zwzz, t2.xyzw, s3
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[8].xxxx
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
mul r1.w, r5.x, cb0[8].z
mul r2.w, r5.z, v5.w
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
dp3 r3.w, r7.xyzx, cb2[0].xyzx
max r3.w, r3.w, l(0.000000)
mad r4.w, -r5.y, cb0[8].y, l(1.000000)
dp3 r5.x, -r2.xyzx, r7.xyzx
add r5.x, r5.x, r5.x
mad r5.xzw, r7.xxyz, -r5.xxxx, -r2.xxyz
eq r6.x, cb5[0].x, l(1.000000)
if_nz r6.x
  eq r6.x, cb5[0].y, l(1.000000)
  mul r6.yzw, v3.wwww, cb5[2].xxyz
  mad r6.yzw, cb5[1].xxyz, v2.wwww, r6.yyzw
  mad r6.yzw, cb5[3].xxyz, v4.wwww, r6.yyzw
  add r6.yzw, r6.yyzw, cb5[4].xxyz
  movc r6.xyz, r6.xxxx, r6.yzwy, r0.xyzx
  add r6.xyz, r6.xyzx, -cb5[6].xyzx
  mul r6.yzw, r6.xxyz, cb5[5].xxyz
  mul r6.y, r6.y, l(0.250000)
  mul r8.x, cb5[0].z, l(0.500000)
  mad r8.y, -cb5[0].z, l(0.500000), l(0.250000)
  max r6.y, r6.y, r8.x
  min r6.x, r8.y, r6.y
  sample r8.xyzw, r6.xzwx, t5.xyzw, s1
  add r9.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t5.xyzw, s1
  mov r7.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r7.xyzw
  dp4 r8.y, r9.xyzw, r7.xyzw
  dp4 r8.z, r6.xyzw, r7.xyzw
else 
  mov r7.w, l(1.000000)
  dp4 r8.x, cb2[38].xyzw, r7.xyzw
  dp4 r8.y, cb2[39].xyzw, r7.xyzw
  dp4 r8.z, cb2[40].xyzw, r7.xyzw
endif 
add r6.xyz, r8.xyzx, v7.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r6.w, cb0[3].w, l(0.000000)
log r8.xyz, r6.xyzx
mul r8.xyz, r8.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r8.xyz, r8.xyzx
mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r6.xyz, r6.wwww, r8.xyzx, r6.xyzx
lt r7.w, l(0.000000), cb4[2].w
if_nz r7.w
  dp3 r7.w, r5.xzwx, r5.xzwx
  rsq r7.w, r7.w
  mul r8.xyz, r5.xzwx, r7.wwww
  add r9.xyz, -r0.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r7.w, r9.y, r9.x
  min r7.w, r9.z, r7.w
  add r9.xyz, r0.xyzx, -cb4[2].xyzx
  mad r8.xyz, r8.xyzx, r7.wwww, r9.xyzx
else 
  mov r8.xyz, r5.xzwx
endif 
log r7.w, r4.w
mul r7.w, r7.w, l(0.750000)
exp r7.w, r7.w
mad r8.w, -r7.w, l(0.700000), l(1.700000)
mul r7.w, r7.w, r8.w
mul r7.w, r7.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r7.w
log r8.w, r8.w
mul r8.w, r8.w, cb4[3].y
exp r8.w, r8.w
mul r8.w, r8.w, cb4[3].x
mul r9.xyz, r8.xyzx, r8.wwww
lt r9.w, cb4[1].w, l(0.999990)
if_nz r9.w
  lt r9.w, l(0.000000), cb4[6].w
  if_nz r9.w
    dp3 r9.w, r5.xzwx, r5.xzwx
    rsq r9.w, r9.w
    mul r10.xyz, r5.xzwx, r9.wwww
    add r11.xyz, -r0.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r9.w, r11.y, r11.x
    min r9.w, r11.z, r9.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r5.xzw, r10.xxyz, r9.wwww, r0.xxyz
  endif 
  sample_l r10.xyzw, r5.xzwx, t4.xyzw, s0, r7.w
  log r0.x, r10.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r5.xzw, r8.wwww, r8.xxyz, -r0.xxyz
  mad r9.xyz, cb4[1].wwww, r5.xzwx, r0.xyzx
endif 
mul r0.xyz, r2.wwww, r9.xyzx
dp3 r5.x, r7.xyzx, r7.xyzx
rsq r5.x, r5.x
mul r5.xzw, r5.xxxx, r7.xxyz
mad r3.xyz, r3.xyzx, v5.xyzx, -cb0[2].xyzx
mad r3.xyz, r1.wwww, r3.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r4.xyz, r1.wwww, r4.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r5.xzwx, r1.xyzx
max r0.w, r0.w, l(0.000000)
dp3 r2.x, r5.xzwx, r2.xyzx
max r2.x, r2.x, l(0.000000)
dp3 r1.x, cb2[0].xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, r4.w, r4.w
mul r1.z, r1.y, l(0.797884583)
mad r2.y, -r1.y, l(0.797884583), l(1.000000)
mad r2.z, r3.w, r2.y, r1.z
mad r1.z, r2.x, r2.y, r1.z
mad r1.z, r2.z, r1.z, l(0.000010)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
add r2.y, -r4.w, l(1.000000)
mad r2.y, r2.y, l(0.968000), l(0.030000)
log r2.y, r2.y
div r2.y, l(10.000000), r2.y
mul r2.z, r2.y, r2.y
mad r2.y, r2.y, r2.y, l(2.000000)
mul r2.y, r2.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r2.z
exp r0.w, r0.w
mul r0.w, r2.y, r0.w
add r2.y, -r3.w, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
add r2.x, -r2.x, l(1.000000)
mul r2.z, r2.x, r2.x
mul r2.z, r2.z, r2.z
mul r2.x, r2.x, r2.z
mul r2.z, r1.x, r1.x
dp2 r2.z, r2.zzzz, r4.wwww
add r2.z, r2.z, l(-0.500000)
mad r2.y, r2.z, r2.y, l(1.000000)
mad r2.z, r2.z, r2.x, l(1.000000)
mul r2.y, r2.z, r2.y
mul r0.w, r0.w, r1.z
mul r0.w, r0.w, l(0.785398185)
max r1.z, r0.w, l(0.000100)
sqrt r1.z, r1.z
movc r0.w, r6.w, r1.z, r0.w
mul r0.w, r3.w, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.z, r3.w, r2.y
mul r2.y, r1.y, r4.w
mad r2.y, -r2.y, l(0.280000), l(1.000000)
mad r1.y, r1.y, r1.y, l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
movc r1.y, r6.w, r2.y, r1.y
dp3 r2.y, r3.xyzx, r3.xyzx
ne r2.y, r2.y, l(0.000000)
and r2.y, r2.y, l(0x3f800000)
mul r0.w, r0.w, r2.y
mad r1.w, r5.y, cb0[8].y, -r1.w
add_sat r1.w, r1.w, l(1.000000)
mul r5.xyz, r1.zzzz, cb0[6].xyzx
mad r2.yzw, r6.xxyz, r2.wwww, r5.xxyz
mul r5.xyz, r0.wwww, cb0[6].xyzx
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.yyyx
add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.wwww, r3.xyzx
mul r5.xyz, r5.xyzx, r6.xyzx
mad r2.yzw, r4.xxyz, r2.yyzw, r5.xxyz
add r1.xyz, -r3.xyzx, r1.wwww
mad r1.xyz, r2.xxxx, r1.xyzx, r3.xyzx
mad r0.xyz, r0.xyzx, r1.xyzx, r2.yzwy
mul r0.w, v7.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used