// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 99bdf26c0daf26f7-ps.txt
// 3DMigoto: 99bdf26c0daf26f7 |    Unity headers extracted from Standard_TranspWater.shader
//    Shader "Dreamfall/Unity5/Standard_TranspWater" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _FoamColor ("Foam Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FoamTex ("Foam Texture", 2D) = "white" { }
//       _BumpAmt ("BumpAmount", Range(0.000000,1.000000)) = 1.000000
//       _Gloss ("Water Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _WaterSpeed ("Water Speed1", Float) = 1.000000
//       _WaterSpeed2 ("Water Speed1", Float) = 1.000000
//       _InvFade ("Water Edge", Range(0.010000,3.000000)) = 1.000000
//       _FoamSpeed ("Foam Speed", Float) = 1.000000
//       _FoamBoost ("Foam Boost", Float) = 1.000000
//       _FoamScale ("Foam Scale", Float) = 1.000000
//       _Caustics ("Caustic Amount", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          Blend DstColor SrcColor
//          GpuProgramID 175429
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 191
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_TranspWater.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 164 8 0
//   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 5 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Float 144 [_BumpAmt]
//   Float 148 [_Gloss]
//   Float 152 [_Metallic]
//   Float 156 [_WaterSpeed]
//   Float 160 [_WaterSpeed2]
//   Float 168 [_InvFade]
//   Vector 208 [_MainTex_TexelSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 3
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:36:45 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 99bdf26c0daf26f7-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.y, cb1[0].x, cb0[9].w, v1.y
mov r0.xz, v1.xxxx
sample r1.xyzw, r0.xyxx, t1.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r1.xyxx, r1.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r1.z, r0.x
mad r0.w, cb1[0].x, cb0[10].x, v1.y
sample r0.xyzw, r0.zwzz, t1.xyzw, s2
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
add r0.xyz, r0.xyzx, r1.xyzx
add r1.xyz, -r0.xyzx, l(0.500000, 0.500000, 1.000000, 0.000000)
mad r1.xyz, -r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
lt r0.w, cb0[13].y, l(0.000000)
add r1.w, -v5.y, l(1.000000)
movc r2.y, r0.w, r1.w, v5.y
mov r2.x, v5.x
div r2.xy, r2.xyxx, v5.wwww
sample r2.xyzw, r2.xyxx, t0.xyzw, s3
mad r0.w, cb1[7].z, r2.x, cb1[7].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, -v5.z
mul_sat r0.w, r0.w, cb0[10].z
add r1.w, -r0.w, l(1.000000)
mad r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r0.xyz, cb0[9].xxxx, r0.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r1.xy, r0.xyxx, v1.xyxx
sample r1.xyzw, r1.xyxx, t2.xyzw, s1
add r2.xyz, r1.xyzx, cb0[8].xyzx
add r1.xyz, r1.xyzx, -r2.xyzx
mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
mad r0.w, -cb0[9].z, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r1.xyzx
add r1.xyz, r1.xyzx, -cb0[2].xyzx
mad r1.xyz, cb0[9].zzzz, r1.xyzx, cb0[2].xyzx
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.xyz, r1.xyzx
mov o1.w, cb0[9].y
dp3 r3.x, v2.xyzx, r0.xyzx
dp3 r3.y, v3.xyzx, r0.xyzx
dp3 r3.z, v4.xyzx, r0.xyzx
mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
dp3 r0.x, r1.xyzx, r1.xyzx
ne r0.x, r0.x, l(0.000000)
and r0.x, r0.x, l(0x3f800000)
mov r4.x, v2.w
mov r4.y, v3.w
mov r4.z, v4.w
add r0.yzw, -r4.xxyz, r12.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r4.xyz, r0.yzwy, r1.wwww
dp3 r2.w, r3.xyzx, r4.xyzx
max r2.w, r2.w, l(0.000000)
add r3.w, -cb0[9].y, l(1.000000)
mul r4.x, r3.w, r3.w
mul r4.y, r4.x, l(0.797884583)
mad r4.z, -r4.x, l(0.797884583), l(1.000000)
mad r4.w, r2.w, r4.z, r4.y
add r2.w, -r2.w, l(1.000000)
sample r5.xyzw, v7.xyxx, t4.xyzw, s0
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.w, r5.xyzx, r5.xyzx
sqrt r5.w, r5.w
max r5.w, r5.w, l(0.001000)
div r5.xyz, r5.xyzx, r5.wwww
dp3 r6.x, r3.xyzx, r5.xyzx
max r6.x, r6.x, l(0.000000)
mad r4.y, r6.x, r4.z, r4.y
mad r4.y, r4.y, r4.w, l(0.000010)
div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
mad r6.yzw, r0.yyzw, r1.wwww, r5.xxyz
dp3 r4.z, r6.yzwy, r6.yzwy
max r4.z, r4.z, l(0.001000)
rsq r4.z, r4.z
mul r6.yzw, r4.zzzz, r6.yyzw
dp3 r4.z, r3.xyzx, r6.yzwy
dp3 r4.w, r5.xyzx, r6.yzwy
max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r4.z, r4.z
add r5.x, -r3.w, l(1.000000)
mad r5.x, r5.x, l(0.968000), l(0.030000)
log r5.x, r5.x
div r5.x, l(10.000000), r5.x
mul r5.y, r5.x, r5.x
mad r5.xz, r5.xxxx, r5.xxxx, l(2.000000, 0.000000, 1.000000, 0.000000)
mul r4.z, r4.z, r5.y
exp r4.z, r4.z
mul r5.x, r5.x, l(0.159154937)
mul r4.z, r4.z, r5.x
mul r4.y, r4.z, r4.y
mul r4.y, r4.y, l(0.785398185)
max r4.z, r4.y, l(0.000100)
sqrt r4.z, r4.z
eq r5.x, cb0[3].w, l(0.000000)
movc r4.y, r5.x, r4.z, r4.y
mul r4.y, r6.x, r4.y
max r4.y, r4.y, l(0.000000)
mul r0.x, r0.x, r4.y
sample r7.xyzw, v7.xyxx, t3.xyzw, s0
log r4.y, r7.w
mul r4.y, r4.y, cb0[4].y
exp r4.y, r4.y
mul r4.y, r4.y, cb0[4].x
mul r6.yzw, r7.xxyz, r4.yyyy
mul r7.xyz, r5.wwww, r6.yzwy
add r4.y, -r5.w, l(1.000000)
mul r6.yzw, r4.yyyy, r6.yyzw
mul r8.xyz, r0.xxxx, r7.xyzx
add r9.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.x, -r4.w, l(1.000000)
mul r4.y, r4.w, r4.w
dp2 r3.w, r4.yyyy, r3.wwww
add r3.w, r3.w, l(-0.500000)
mul r4.y, r0.x, r0.x
mul r4.y, r4.y, r4.y
mul r0.x, r0.x, r4.y
mad r4.yzw, r9.xxyz, r0.xxxx, r1.xxyz
mul r4.yzw, r4.yyzw, r8.xxyz
mul r0.x, r2.w, r2.w
mul r0.x, r0.x, r0.x
mul r0.x, r2.w, r0.x
mad r0.x, r3.w, r0.x, l(1.000000)
add r2.w, -r6.x, l(1.000000)
mul r5.w, r2.w, r2.w
mul r5.w, r5.w, r5.w
mul r2.w, r2.w, r5.w
mad r2.w, r3.w, r2.w, l(1.000000)
mul r0.x, r0.x, r2.w
mul r0.x, r6.x, r0.x
add r8.xy, v7.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r9.xyzw, r8.xyxx, t4.xyzw, s0
sample r8.xyzw, r8.xyxx, t3.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r9.xyzx, r9.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r9.xyz, r9.xyzx, r2.wwww
dp3 r3.w, r3.xyzx, r9.xyzx
max r3.w, r3.w, l(0.000000)
log r5.w, r8.w
mul r5.w, r5.w, cb0[4].y
exp r5.w, r5.w
mul r5.w, r5.w, cb0[4].x
mul r8.xyz, r8.xyzx, r5.wwww
add r5.w, -r2.w, l(1.000000)
mul r10.xyz, r2.wwww, r8.xyzx
mul r8.xyz, r5.wwww, r8.xyzx
mul r8.xyz, r3.wwww, r8.xyzx
mad r6.xyz, r6.yzwy, r6.xxxx, r8.xyzx
mad r6.xyz, r7.xyzx, r0.xxxx, r6.xyzx
mad r4.yzw, r2.xxyz, r6.xxyz, r4.yyzw
mad r0.xyz, r0.yzwy, r1.wwww, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r9.xyzx, r0.xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xy, r0.xwxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.x, r0.x
mul r0.x, r0.x, r5.y
exp r0.x, r0.x
mul r0.x, r0.x, r5.z
mul r0.z, r0.y, r0.y
mad r0.z, r0.z, cb0[9].y, r4.x
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(8.000000), l(0.000100)
div r0.x, r0.x, r0.y
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r5.x, r0.y, r0.x
mad r0.xyz, r0.xxxx, r1.xyzx, r2.xyzx
mul r0.xyz, r10.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r3.wwww, r4.yzwy
exp o3.xyz, -r0.xyzx
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used