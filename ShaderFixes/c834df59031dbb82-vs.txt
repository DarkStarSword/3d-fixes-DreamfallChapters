// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c834df59031dbb82-vs.txt
// 3DMigoto: c834df59031dbb82 |    Unity headers extracted from SpeedTree.shader
//    Shader "Nature/SpeedTree" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _DetailTex ("Detail", 2D) = "black" { }
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//      [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//      [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      CustomEditor "SpeedTreeMaterialInspector"
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//        Pass 1/7 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//          Cull [_Cull]
//          GpuProgramID 519218
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 9113
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 64 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LOD_FADE_PERCENTAGE" "GEOM_TYPE_LEAF" }
//   undeciphered2: 1 0 5 0 0 0
//   undeciphered3: 95 6 0 0 2 1 1 2 3 4 4 5 6 7
//   ConstBuffer "$Globals" 160
//   Vector 144 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:54:12 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float   xy  
// COLOR                    0   xyzw        7     NONE   float   x  w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 6      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3             8         3  ( FLT, FLT, FLT, FLT)
// c17        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c24        cb3            20         1  ( FLT, FLT, FLT, FLT)
// c25        cb4             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c26, -1, 1, 0, 0.416666657
    def c27, 1.05499995, -0.0549999997, 0.5, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord6 v6
    dcl_texcoord7 v7
    mul oT2.xyz, v7.x, c1
    add r0.x, v4.w, c26.x
    mov r0.y, c26.y
    mad r0.x, c24.x, r0.x, r0.y
    mov r1.xyz, v4
    add r0.yzw, -r1.xxyz, v0.xxyz
    mul r1.xyz, r0.x, r0.yzww
    dp3 r2.x, r1, c14
    dp3 r2.y, r1, c15
    dp3 r2.z, r1, c16
    dp3 r0.x, r1, r1
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    nrm r1.xyz, r2
    mov r2.x, v4.w
    mov r2.yz, v6.xxyw
    lrp r3.xyz, c24.x, r2, r0.yzww
    mad r0.xyz, r1, r0.x, -r3
    mul r0.w, v7.w, v7.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r0, r3
    add r0.xyz, r0, v4
    mul r1.xyz, r0.y, c18
    mad r1.xyz, c17, r0.x, r1
    mad r1.xyz, c19, r0.z, r1
    mad oT1.xyz, c20, v0.w, r1
    mul r1.x, v2.x, c21.x
    mul r1.y, v2.x, c22.x
    mul r1.z, v2.x, c23.x
    mul r2.x, v2.y, c21.y
    mul r2.y, v2.y, c22.y
    mul r2.z, v2.y, c23.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c21.z
    mul r2.y, v2.z, c22.z
    mul r2.z, v2.z, c23.z
    add r1.xyz, r1, r2
    nrm r2.xyz, r1
    mul r0.w, r2.y, r2.y
    mad r0.w, r2.x, r2.x, -r0.w
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c6, r1
    dp4 r3.y, c7, r1
    dp4 r3.z, c8, r1
    mad r1.xyz, c9, r0.w, r3
    mov r2.w, c26.y
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    mov oT0.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c26.z
    mov r1.w, c26.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c27.x, c27.y
    max oT4.xyz, r1, c26.z
    mul r1, r0.y, c11
    mad r1, c10, r0.x, r1
    mad r0, c12, r0.z, r1
    add r0, r0, c13
    mul r1.x, r0.y, c2.x
    mul r1.w, r1.x, c27.z
    mul r1.xz, r0.xyww, c27.z
    add oT5.xy, r1.z, r1.xwzw
    mul r1.x, r0.z, c25.x
    mul r1.x, r1.x, -r1.x
    exp oT0.w, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT5.zw, r0
    mov oT2.w, c1.w
    mul oT3.xyz, v3.xyxw, c26.yyzw

// approximately 81 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v6.xy
dcl_input v7.xw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, v4.w, l(-1.000000)
mad r0.x, cb3[20].x, r0.x, l(1.000000)
add r0.yzw, v0.xxyz, -v4.xxyz
mul r1.xyz, r0.xxxx, r0.yzwy
dp3 r2.x, r1.xyzx, cb3[8].xyzx
dp3 r2.y, r1.xyzx, cb3[9].xyzx
dp3 r2.z, r1.xyzx, cb3[10].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
sqrt r0.x, r0.x
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
mul r1.xyz, r0.xxxx, r1.xyzx
mov r2.x, v4.w
mov r2.yz, v6.xxyx
add r2.xyz, -r0.yzwy, r2.xyzx
mad r0.xyz, cb3[20].xxxx, r2.xyzx, r0.yzwy
eq r0.w, v7.w, l(0.000000)
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, v4.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c834df59031dbb82-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mul r0.w, r1.z, cb4[1].x
mul r0.w, r0.w, -r0.w
exp o1.w, r0.w
mul r2.x, v2.x, cb3[16].x
mul r2.y, v2.x, cb3[17].x
mul r2.z, v2.x, cb3[18].x
mul r3.x, v2.y, cb3[16].y
mul r3.y, v2.y, cb3[17].y
mul r3.z, v2.y, cb3[18].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, v2.z, cb3[16].z
mul r3.y, v2.z, cb3[17].z
mul r3.z, v2.z, cb3[18].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mov o1.xyz, r2.xyzx
mul r3.xyz, r0.yyyy, cb3[13].xyzx
mad r0.xyw, cb3[12].xyxz, r0.xxxx, r3.xyxz
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r0.xywx
mad o2.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
mul o3.xyz, v7.xxxx, cb0[9].xyzx
mov o3.w, cb0[9].w
mov o4.xy, v3.xyxx
mov o4.z, l(0)
mul r0.x, r2.y, r2.y
mad r0.x, r2.x, r2.x, -r0.x
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r0.xyz, cb2[44].xyzx, r0.xxxx, r4.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r2.xyzw
dp4 r3.y, cb2[39].xyzw, r2.xyzw
dp4 r3.z, cb2[40].xyzw, r2.xyzw
add r0.xyz, r0.xyzx, r3.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used