// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b951610abd6d9a0-ps.txt
// 3DMigoto: 7b951610abd6d9a0 |    Unity headers extracted from Reflect-Parallax_Fresnel_Illum.shader
//    Shader "Self-Illumin/Dreamfall/Reflective/Fresnel/Parallax Diffuse Illum" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.010000,6.000000)) = 1.000000
//       _Parallax ("Parallax", Float) = 0.000000
//       _ParallaxAdjust ("Parallax Adjust(RG - OFFSET), B - Vertex Alpha Multiply", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _ParallaxScrollSpeed (" PArralax Scroll Speed, X - Y ", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _IllumMap ("IllumMap (RGB)", 2D) = "black" { }
//       _IllumMask ("IllumMask (RGB)", 2D) = "white" { }
//       _IllumMapScale ("Illum Map Scale", Float) = 1.000000
//       _IllumMaskScale ("Illum Mask Scale", Float) = 1.000000
//       _IllumDepth ("IllumDepth", Float) = 0.400000
//       _IllumColor ("Illum Color", Color) = (0.500000,0.500000,0.500000,0.500000)
//       _IllumColorScale ("IllumColor Scale", Float) = 1.000000
//       _ReflAmount ("Reflection amount", Float) = 1.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _InteriorPow ("Interior pow", Float) = 1.000000
//       _InteriorAspect ("Interior Aspect", Float) = 1.000000
//       _InteriorDistort ("Interior Distort", Range(0.000000,2.000000)) = 0.000000
//       _Gloss ("Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metalness ("Metalness", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 28986
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 68
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Parallax_Fresnel_Illum.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 221 8 6
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 8 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Parallax]
//   Float 164 [_Fresnel]
//   Float 168 [_IllumMapScale]
//   Vector 176 [_IllumColor] 3
//   Float 188 [_IllumColorScale]
//   Float 196 [_IllumDepth]
//   Float 200 [_ReflAmount]
//   Float 204 [_ReflPow]
//   Vector 208 [_ParallaxAdjust]
//   Float 224 [_InteriorPow]
//   Float 228 [_InteriorAspect]
//   Float 232 [_InteriorDistort]
//   Float 236 [_Gloss]
//   Float 240 [_Metalness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_IllumMask] 2D 6
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_Cube] CUBE 4
//   SetTexture 4 [_IllumMap] 2D 5
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:27:16 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 7      w        7     NONE   float      w
// TEXCOORD                 8   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v7.w
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b951610abd6d9a0-ps.txt
mov r15.xyzw, cb1[4].xyzw
mul r16.x, -r14.x, r14.y
mul r17.xyzw, cb10[0].xyzw, r16.xxxx
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
max r1.w, cb0[10].y, l(0.100000)
min r1.w, r1.w, l(32.000000)
mul r2.w, cb0[10].x, l(0.500000)
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r3.xyzx
mad r3.x, r3.z, r3.w, l(0.420000)
div r3.xy, r4.xyxx, r3.xxxx
add r3.z, cb0[12].y, l(-0.500000)
sample r5.xyzw, v1.xyxx, t0.xyzw, s2
mad r3.zw, r3.zzzz, r3.xxxy, v1.xxxy
sample r6.xyzw, r3.zwzz, t1.xyzw, s6
mul r7.xyzw, r5.xyzw, cb0[8].xyzw
add r3.z, -r6.w, l(1.000000)
mul r3.z, r3.z, r7.w
mad r5.xyz, -r5.xyzx, cb0[8].xyzx, r6.xyzx
mad r5.xyz, r3.zzzz, r5.xyzx, r7.xyzx
sample r8.xyzw, v1.zwzz, t2.xyzw, s3
mad r6.xy, r8.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.z, r6.xyxx, r6.xyxx
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sqrt r6.z, r3.z
dp3 r8.x, v2.xyzx, r6.xyzx
dp3 r8.y, v3.xyzx, r6.xyzx
dp3 r8.z, v4.xyzx, r6.xyzx
dp3 r3.z, -r2.xyzx, r8.xyzx
add r3.z, r3.z, r3.z
mad r7.xyz, r8.xyzx, -r3.zzzz, -r2.xyzx
sample r9.xyzw, r7.xyzx, t3.xyzw, s4
log r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb0[12].wwww
exp r9.xyz, r9.xyzx
mul r9.xyz, r5.wwww, r9.xyzx
dp3 r3.z, r4.xyzx, r6.xyzx
add r3.z, -r3.z, l(1.000000)
log r3.z, r3.z
mul r1.w, r1.w, r3.z
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[12].z
mul r4.xyz, r1.wwww, r9.xyzx
mul r1.w, v1.x, cb0[10].z
mad r1.w, r1.w, cb0[14].y, cb0[13].x
mad r9.y, v1.y, cb0[10].z, cb0[13].y
add r3.z, v5.w, l(-1.000000)
mad r9.x, r3.z, -cb0[13].z, r1.w
mad r3.xy, r2.wwww, r3.xyxx, r9.xyxx
mul r3.zw, r6.xxxy, cb0[14].zzzz
mad r3.xy, r3.zwzz, r5.wwww, r3.xyxx
sample r3.xyzw, r3.xyxx, t4.xyzw, s5
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[14].xxxx
exp r3.xyz, r3.xyzx
mul r6.xyz, v5.xyzx, cb0[11].xyzx
mul r6.xyz, r6.xyzx, cb0[11].wwww
mul r6.xyz, r6.wwww, r6.xyzx
mul r3.xyz, r3.xyzx, r6.xyzx
mul r4.xyz, r4.xyzx, cb0[9].xyzx
mad r3.xyz, r3.xyzx, r5.wwww, r4.xyzx
dp3 r1.w, r8.xyzx, cb2[0].xyzx
max r1.w, r1.w, l(0.000000)
mad r2.w, -cb0[14].w, r7.w, l(1.000000)
eq r3.w, cb5[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb5[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mul r3.w, r4.y, l(0.250000)
  mul r4.y, cb5[0].z, l(0.500000)
  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r3.w, r3.w, r4.y
  min r4.x, r5.w, r3.w
  sample r6.xyzw, r4.xzwx, t7.xyzw, s1
  add r9.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t7.xyzw, s1
  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r4.xyzw, r4.xyzx, t7.xyzw, s1
  mov r8.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r8.xyzw
  dp4 r6.y, r9.xyzw, r8.xyzw
  dp4 r6.z, r4.xyzw, r8.xyzw
else 
  mov r8.w, l(1.000000)
  dp4 r6.x, cb2[38].xyzw, r8.xyzw
  dp4 r6.y, cb2[39].xyzw, r8.xyzw
  dp4 r6.z, cb2[40].xyzw, r8.xyzw
endif 
add r4.xyz, r6.xyzx, v7.xyzx
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r3.w, cb0[3].w, l(0.000000)
log r6.xyz, r4.xyzx
mul r6.xyz, r6.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r6.xyz, r6.xyzx
mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
lt r4.w, l(0.000000), cb4[2].w
if_nz r4.w
  dp3 r4.w, r7.xyzx, r7.xyzx
  rsq r4.w, r4.w
  mul r6.xyz, r4.wwww, r7.xyzx
  add r9.xyz, -r0.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r6.xyzx
  add r10.xyz, -r0.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r6.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.w, r9.y, r9.x
  min r4.w, r9.z, r4.w
  add r9.xyz, r0.xyzx, -cb4[2].xyzx
  mad r6.xyz, r6.xyzx, r4.wwww, r9.xyzx
else 
  mov r6.xyz, r7.xyzx
endif 
log r4.w, r2.w
mul r4.w, r4.w, l(0.750000)
exp r4.w, r4.w
mad r5.w, -r4.w, l(0.700000), l(1.700000)
mul r4.w, r4.w, r5.w
mul r4.w, r4.w, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r4.w
log r5.w, r6.w
mul r5.w, r5.w, cb4[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb4[3].x
mul r9.xyz, r6.xyzx, r5.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r7.xyzx, r7.xyzx
    rsq r6.w, r6.w
    mul r10.xyz, r6.wwww, r7.xyzx
    add r11.xyz, -r0.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.xyz, r10.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r10.xyzw, r7.xyzx, t6.xyzw, s0, r4.w
  log r0.x, r10.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r6.xyz, r5.wwww, r6.xyzx, -r0.xyzx
  mad r9.xyz, cb4[1].wwww, r6.xyzx, r0.xyzx
endif 
dp3 r0.x, r8.xyzx, r8.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r8.xyzx
add r6.xyz, r5.xyzx, -cb0[2].xyzx
mad r6.xyz, cb0[15].xxxx, r6.xyzx, cb0[2].xyzx
mad r4.w, -cb0[15].x, cb0[2].w, cb0[2].w
mul r5.xyz, r4.wwww, r5.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r2.w, r2.w
mul r1.x, r0.z, l(0.797884583)
mad r1.y, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r1.w, r1.y, r1.x
mad r1.x, r0.x, r1.y, r1.x
mad r1.x, r1.z, r1.x, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r2.w, l(1.000000)
mad r1.y, r1.y, l(0.968000), l(0.030000)
log r1.y, r1.y
div r1.y, l(10.000000), r1.y
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.y, l(2.000000)
mul r1.y, r1.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
mul r0.w, r1.y, r0.w
add r1.y, -r1.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r2.wwww
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r3.w, r1.x, r0.w
mul r0.w, r1.w, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r1.w, r1.y
mul r1.y, r0.z, r2.w
mad r1.y, -r1.y, l(0.280000), l(1.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
movc r0.z, r3.w, r1.y, r0.z
dp3 r1.y, r6.xyzx, r6.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
mad r1.y, cb0[14].w, r7.w, -r4.w
add_sat r1.y, r1.y, l(1.000000)
mad r1.xzw, cb0[6].xxyz, r1.xxxx, r4.xxyz
mul r2.xyz, r0.wwww, cb0[6].xyzx
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r4.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r0.yyyy, r6.xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mad r1.xzw, r5.xxyz, r1.xxzw, r2.xxyz
mul r0.yzw, r9.xxyz, r0.zzzz
add r2.xyz, -r6.xyzx, r1.yyyy
mad r2.xyz, r0.xxxx, r2.xyzx, r6.xyzx
mad r0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
add r0.xyz, r3.xyzx, r0.xyzx
mad_sat r0.w, v7.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used