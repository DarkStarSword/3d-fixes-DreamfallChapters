// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 50782afb909e45c1-ps.txt
// 3DMigoto: 50782afb909e45c1 |    Unity headers extracted from Standard-Base.shader
//    Shader "Hidden/TerrainEngine/Splatmap/Standard-Base" {
//      Properties {
//       _MainTex ("Base (RGB) Smoothness (A)", 2D) = "white" { }
//       _MetallicTex ("Metallic (R)", 2D) = "white" { }
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 63415
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 83
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard-Base.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 189 6 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 6 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_MetallicTex] 2D 3
//   SetTexture 2 [unity_Lightmap] 2D 0
//   SetTexture 3 [unity_LightmapInd] 2D -1
//   SetTexture 4 [unity_SpecCube0] CUBE 1
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:14:51 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 50782afb909e45c1-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r16.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
sample r3.xyzw, v1.xyxx, t1.xyzw, s3
add r1.w, -r2.w, l(1.000000)
dp3 r3.y, -r1.xyzx, v2.xyzx
add r3.y, r3.y, r3.y
mad r3.yzw, v2.xxyz, -r3.yyyy, -r1.xxyz
sample r4.xyzw, v4.xyxx, t2.xyzw, s0
log r4.w, r4.w
mul r4.w, r4.w, cb0[4].y
exp r4.w, r4.w
mul r4.w, r4.w, cb0[4].x
mul r4.xyz, r4.xyzx, r4.wwww
sample r5.xyzw, v4.xyxx, t3.xyzw, s0
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r4.w, r5.xyzx, r5.xyzx
sqrt r4.w, r4.w
max r4.w, r4.w, l(0.001000)
div r5.xyz, r5.xyzx, r4.wwww
dp3 r5.w, v2.xyzx, r5.xyzx
max r5.w, r5.w, l(0.000000)
add r6.x, -r4.w, l(1.000000)
mul r6.xyz, r4.xyzx, r6.xxxx
mul r4.xyz, r4.wwww, r4.xyzx
add r7.xy, v4.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r8.xyzw, r7.xyxx, t2.xyzw, s0
log r4.w, r8.w
mul r4.w, r4.w, cb0[4].y
exp r4.w, r4.w
mul r4.w, r4.w, cb0[4].x
mul r8.xyz, r8.xyzx, r4.wwww
sample r7.xyzw, r7.xyxx, t3.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r4.w, r7.xyzx, r7.xyzx
sqrt r4.w, r4.w
max r4.w, r4.w, l(0.001000)
div r7.xyz, r7.xyzx, r4.wwww
dp3 r6.w, v2.xyzx, r7.xyzx
max r6.w, r6.w, l(0.000000)
add r7.w, -r4.w, l(1.000000)
mul r9.xyz, r7.wwww, r8.xyzx
mul r8.xyz, r4.wwww, r8.xyzx
mul r9.xyz, r6.wwww, r9.xyzx
mad r6.xyz, r6.xyzx, r5.wwww, r9.xyzx
lt r4.w, l(0.000000), cb3[2].w
if_nz r4.w
  dp3 r4.w, r3.yzwy, r3.yzwy
  rsq r4.w, r4.w
  mul r9.xyz, r3.yzwy, r4.wwww
  add r10.xyz, -v3.xyzx, cb3[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -v3.xyzx, cb3[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r4.w, r10.y, r10.x
  min r4.w, r10.z, r4.w
  add r10.xyz, v3.xyzx, -cb3[2].xyzx
  mad r9.xyz, r9.xyzx, r4.wwww, r10.xyzx
else 
  mov r9.xyz, r3.yzwy
endif 
mad r4.w, -r1.w, l(0.700000), l(1.700000)
mul r4.w, r1.w, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t4.xyzw, s1, r4.w
log r7.w, r9.w
mul r7.w, r7.w, cb3[3].y
exp r7.w, r7.w
mul r7.w, r7.w, cb3[3].x
mul r10.xyz, r9.xyzx, r7.wwww
lt r8.w, cb3[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb3[6].w
  if_nz r8.w
    dp3 r8.w, r3.yzwy, r3.yzwy
    rsq r8.w, r8.w
    mul r11.xyz, r3.yzwy, r8.wwww
    add r12.xyz, -v3.xyzx, cb3[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -v3.xyzx, cb3[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r8.w, r12.y, r12.x
    min r8.w, r12.z, r8.w
    add r12.xyz, v3.xyzx, -cb3[6].xyzx
    mad r3.yzw, r11.xxyz, r8.wwww, r12.xxyz
  endif 
  sample_l r11.xyzw, r3.yzwy, t5.xyzw, s1, r4.w
  log r3.y, r11.w
  mul r3.y, r3.y, cb3[7].y
  exp r3.y, r3.y
  mul r3.y, r3.y, cb3[7].x
  mul r3.yzw, r11.xxyz, r3.yyyy
  mad r9.xyz, r7.wwww, r9.xyzx, -r3.yzwy
  mad r10.xyz, cb3[1].wwww, r9.xyzx, r3.yzwy
endif 
dp3 r3.y, v2.xyzx, v2.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, v2.xxyz
add r9.xyz, r2.xyzx, -cb0[2].xyzx
mad r9.xyz, r3.xxxx, r9.xyzx, cb0[2].xyzx
mad r3.x, -r3.x, cb0[2].w, cb0[2].w
mul r2.xyz, r2.xyzx, r3.xxxx
mad r11.xyz, r0.xyzx, r0.wwww, r5.xyzx
dp3 r4.w, r11.xyzx, r11.xyzx
max r4.w, r4.w, l(0.001000)
rsq r4.w, r4.w
mul r11.xyz, r4.wwww, r11.xyzx
dp3 r4.w, r3.yzwy, r11.xyzx
max r4.w, r4.w, l(0.000000)
dp3 r1.x, r3.yzwy, r1.xyzx
dp3 r1.y, r5.xyzx, r11.xyzx
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.z, r1.w, r1.w
mad r5.x, -r1.w, r1.w, l(1.000000)
mad r5.y, r1.x, r5.x, r1.z
mad r5.x, r5.w, r5.x, r1.z
mul r5.x, r1.x, r5.x
mad r5.x, r5.w, r5.y, r5.x
add r5.x, r5.x, l(0.000010)
div r5.x, l(2.000000), r5.x
mul r5.y, r1.z, r1.z
mul r4.w, r4.w, r4.w
mad r11.xy, r1.zzzz, r1.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r4.w, r4.w, r11.x, l(1.000000)
mul r5.z, r4.w, l(3.14159274)
mad r4.w, r5.z, r4.w, l(1.000000012E-007)
div r4.w, r5.y, r4.w
add r5.y, -r5.w, l(1.000000)
mul r5.z, r5.y, r5.y
mul r5.z, r5.z, r5.z
mul r5.y, r5.y, r5.z
add r1.x, -r1.x, l(1.000000)
mul r5.z, r1.x, r1.x
mul r5.z, r5.z, r5.z
mul r1.x, r1.x, r5.z
mul r5.z, r1.y, r1.y
dp2 r5.z, r5.zzzz, r1.wwww
add r5.z, r5.z, l(-0.500000)
mad r5.y, r5.z, r5.y, l(1.000000)
mad r5.z, r5.z, r1.x, l(1.000000)
mul r5.y, r5.z, r5.y
mul r4.w, r4.w, r5.x
mul r4.w, r4.w, l(0.785398185)
eq r5.x, cb0[3].w, l(0.000000)
max r5.z, r4.w, l(0.000100)
sqrt r5.z, r5.z
movc r4.w, r5.x, r5.z, r4.w
mul r4.w, r5.w, r4.w
max r4.w, r4.w, l(0.000000)
mul r5.y, r5.w, r5.y
mul r1.w, r1.z, r1.w
mad r1.w, -r1.w, l(0.280000), l(1.000000)
div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
movc r1.w, r5.x, r1.w, r5.z
dp3 r5.z, r9.xyzx, r9.xyzx
ne r5.z, r5.z, l(0.000000)
and r5.z, r5.z, l(0x3f800000)
mul r4.w, r4.w, r5.z
add r3.x, r2.w, -r3.x
add_sat r3.x, r3.x, l(1.000000)
mad r5.yzw, r4.xxyz, r5.yyyy, r6.xxyz
mul r4.xyz, r4.xyzx, r4.wwww
add r1.y, -r1.y, l(1.000000)
mul r4.w, r1.y, r1.y
mul r4.w, r4.w, r4.w
mul r1.y, r1.y, r4.w
add r6.xyz, -r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r1.yyyy, r9.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mad r4.xyz, r2.xyzx, r5.yzwy, r4.xyzx
mul r5.yzw, r10.xxyz, r1.wwww
add r6.xyz, -r9.xyzx, r3.xxxx
mad r1.xyw, r1.xxxx, r6.xyxz, r9.xyxz
mad r1.xyw, r5.yzyw, r1.xyxw, r4.xyxz
mad r0.xyz, r0.xyzx, r0.wwww, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.yzwy, r0.xyzx
dp3 r0.x, r7.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.y, r1.z, l(0.000100)
mul r0.yz, r0.yyxy, r0.yyxy
div r0.y, l(2.000000), r0.y
add r0.y, r0.y, l(-2.000000)
max r0.y, r0.y, l(0.000100)
mad r0.z, r0.z, r2.w, r1.z
add r1.z, r0.y, l(1.000000)
log r0.w, r0.w
mul r0.xy, r0.zwzz, r0.xyxx
exp r0.y, r0.y
mul r0.y, r0.y, r1.z
mad r0.x, r0.x, l(8.000000), l(0.000100)
div r0.x, r0.y, r0.x
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r5.x, r0.y, r0.x
mad r0.xyz, r0.xxxx, r9.xyzx, r2.xyzx
mul r0.xyz, r8.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r6.wwww, r1.xywx
mad_sat r0.w, v1.z, cb2[1].z, cb2[1].w
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used