// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 18365061ca0bbc01-ps.txt
// 3DMigoto: 18365061ca0bbc01 |    Unity headers extracted from Standard_Disintegrate_IlumOverlay.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Bumped Diffuse Ilum Overlay" {
//      Properties {
//       _TintColor ("Tint Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,4.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _Illum ("Overlay Texture", 2D) = "black" { }
//       _IllumBump ("Overlay Normal Map", 2D) = "bump" { }
//       _IllumAmnt ("Illum Ammount", Float) = 0.000000
//       _IllumColor ("Ilum Color", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _OverlayColor ("Overlay Color", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _OverlayAmnt ("Overlay Amount", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 35541
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 93
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_IlumOverlay.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 213 8 6
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 8 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_TintColor]
//   Float 144 [_MetalNess]
//   Float 148 [_AlphaFactor]
//   Float 152 [_glossHigh]
//   Float 156 [_glossLow]
//   Float 160 [_MetalNessAlphaFactor]
//   Float 164 [_DisintegrateAmount]
//   Vector 176 [_DissolveColor]
//   Float 192 [_DissolveEdge]
//   Float 196 [_TileFactor]
//   Vector 208 [_EdgeEmission]
//   Float 224 [_IllumAmnt]
//   Vector 240 [_IllumColor]
//   Vector 256 [_OverlayColor]
//   Float 272 [_OverlayAmnt]
//   Float 276 [_EmissionFloat]
//   Float 280 [_UVxSpeed]
//   Float 320 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NoiseTex] 2D 4
//   SetTexture 1 [_MainTex] 2D 2
//   SetTexture 2 [_IllumBump] 2D 6
//   SetTexture 3 [_Illum] 2D 5
//   SetTexture 4 [_BumpMap] 2D 3
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:00:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 7      w        7     NONE   float      w
// TEXCOORD                 8   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v7.w
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 18365061ca0bbc01-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.y, cb1[0].x, cb0[17].z, v1.y
mov r3.x, v1.x
mul r3.xy, r3.xyxx, cb0[12].yyyy
sample r3.xyzw, r3.xyxx, t0.xyzw, s4
add r1.w, r3.x, -cb0[10].y
sample r3.xyzw, v1.xyxx, t1.xyzw, s2
mul r3.xyzw, r3.xyzw, v5.xyzw
mul r4.xyzw, r3.xyzw, cb0[8].xyzw
sample r5.xyzw, v1.xyxx, t2.xyzw, s6
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
sample r6.xyzw, v1.xyxx, t3.xyzw, s5
sample r7.xyzw, v1.zwzz, t4.xyzw, s3
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r7.z, r2.w
lt r2.w, r1.w, cb0[12].x
lt r3.w, l(0.000000), cb0[10].y
and r2.w, r2.w, r3.w
mul r8.xyz, cb0[13].xyzx, cb0[17].yyyy
mul r9.xyz, r6.xyzx, cb0[17].xxxx
mad r3.xyw, -r3.xyxz, cb0[8].xyxz, cb0[16].xyxz
mad r3.xyw, r9.xyxz, r3.xyxw, r4.xyxz
mul r6.xyz, r6.xyzx, cb0[15].xyzx
mul r6.xyz, r6.xyzx, cb0[14].xxxx
mad r5.xyz, r5.xyzx, cb0[17].xxxx, r7.xyzx
dp3 r4.z, r5.xyzx, r5.xyzx
rsq r4.z, r4.z
mul r5.xyz, r4.zzzz, r5.xyzx
movc r3.xyw, r2.wwww, cb0[11].xyxz, r3.xyxw
movc r5.xyz, r2.wwww, r7.xyzx, r5.xyzx
movc r6.xyz, r2.wwww, r8.xyzx, r6.xyzx
add r4.xy, r4.wyww, r4.wxww
max r2.w, r4.x, cb0[10].x
min r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, cb0[9].x
mad r3.z, r3.z, cb0[8].z, r4.y
mul r4.x, r3.z, l(0.333333343)
mad r3.z, -r3.z, l(0.333333343), cb0[9].z
mad r3.z, cb0[9].w, r3.z, r4.x
max r4.x, r4.w, cb0[9].y
mul r4.y, r3.z, r4.x
mad r3.z, -r3.z, r4.x, cb0[16].w
mad r3.z, r9.x, r3.z, r4.y
add r4.x, r1.w, -cb0[20].x
lt r4.x, r4.x, l(0.000000)
discard_nz r4.x
dp3 r4.x, v2.xyzx, r5.xyzx
dp3 r4.y, v3.xyzx, r5.xyzx
dp3 r4.z, v4.xyzx, r5.xyzx
dp3 r5.x, r4.xyzx, cb2[0].xyzx
max r5.x, r5.x, l(0.000000)
add r5.y, -r3.z, l(1.000000)
dp3 r5.z, -r2.xyzx, r4.xyzx
add r5.z, r5.z, r5.z
mad r7.xyz, r4.xyzx, -r5.zzzz, -r2.xyzx
eq r5.z, cb5[0].x, l(1.000000)
if_nz r5.z
  eq r5.z, cb5[0].y, l(1.000000)
  mul r8.xyz, v3.wwww, cb5[2].xyzx
  mad r8.xyz, cb5[1].xyzx, v2.wwww, r8.xyzx
  mad r8.xyz, cb5[3].xyzx, v4.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb5[4].xyzx
  movc r8.xyz, r5.zzzz, r8.xyzx, r0.xyzx
  add r8.xyz, r8.xyzx, -cb5[6].xyzx
  mul r8.yzw, r8.xxyz, cb5[5].xxyz
  mul r5.z, r8.y, l(0.250000)
  mul r5.w, cb5[0].z, l(0.500000)
  mad r6.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r5.z, r5.w, r5.z
  min r8.x, r6.w, r5.z
  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r4.xyzw
  dp4 r9.y, r10.xyzw, r4.xyzw
  dp4 r9.z, r8.xyzw, r4.xyzw
else 
  mov r4.w, l(1.000000)
  dp4 r9.x, cb2[38].xyzw, r4.xyzw
  dp4 r9.y, cb2[39].xyzw, r4.xyzw
  dp4 r9.z, cb2[40].xyzw, r4.xyzw
endif 
add r8.xyz, r9.xyzx, v7.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r4.w, cb0[3].w, l(0.000000)
log r9.xyz, r8.xyzx
mul r9.xyz, r9.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r9.xyz, r9.xyzx
mad r9.xyz, r9.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r8.xyz, r4.wwww, r9.xyzx, r8.xyzx
lt r5.z, l(0.000000), cb4[2].w
if_nz r5.z
  dp3 r5.z, r7.xyzx, r7.xyzx
  rsq r5.z, r5.z
  mul r9.xyz, r5.zzzz, r7.xyzx
  add r10.xyz, -r0.xyzx, cb4[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb4[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r5.z, r10.y, r10.x
  min r5.z, r10.z, r5.z
  add r10.xyz, r0.xyzx, -cb4[2].xyzx
  mad r9.xyz, r9.xyzx, r5.zzzz, r10.xyzx
else 
  mov r9.xyz, r7.xyzx
endif 
log r5.z, r5.y
mul r5.z, r5.z, l(0.750000)
exp r5.z, r5.z
mad r5.w, -r5.z, l(0.700000), l(1.700000)
mul r5.z, r5.w, r5.z
mul r5.z, r5.z, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r5.z
log r5.w, r9.w
mul r5.w, r5.w, cb4[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb4[3].x
mul r10.xyz, r9.xyzx, r5.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r7.xyzx, r7.xyzx
    rsq r6.w, r6.w
    mul r11.xyz, r6.wwww, r7.xyzx
    add r12.xyz, -r0.xyzx, cb4[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb4[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r6.w, r12.y, r12.x
    min r6.w, r12.z, r6.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.xyz, r11.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r5.z
  log r0.x, r7.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r5.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb4[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
add r4.xyz, r3.xywx, -cb0[2].xyzx
mad r4.xyz, r2.wwww, r4.xyzx, cb0[2].xyzx
mad r2.w, -r2.w, cb0[2].w, cb0[2].w
mul r3.xyw, r2.wwww, r3.xyxw
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r5.y, r5.y
mul r1.x, r0.z, l(0.797884583)
mad r1.y, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r5.x, r1.y, r1.x
mad r1.x, r0.x, r1.y, r1.x
mad r1.x, r1.z, r1.x, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r5.y, l(1.000000)
mad r1.y, r1.y, l(0.968000), l(0.030000)
log r1.y, r1.y
div r1.y, l(10.000000), r1.y
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.y, l(2.000000)
mul r1.y, r1.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
mul r0.w, r1.y, r0.w
add r1.y, -r5.x, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r5.yyyy
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r4.w, r1.x, r0.w
mul r0.w, r5.x, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r5.x, r1.y
mul r1.y, r0.z, r5.y
mad r1.y, -r1.y, l(0.280000), l(1.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
movc r0.z, r4.w, r1.y, r0.z
dp3 r1.y, r4.xyzx, r4.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
add r1.y, -r2.w, r3.z
add_sat r1.y, r1.y, l(1.000000)
mad r2.xyz, cb0[6].xyzx, r1.xxxx, r8.xyzx
mul r5.xyz, r0.wwww, cb0[6].xyzx
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r7.xyz, r7.xyzx, r0.yyyy, r4.xyzx
mul r5.xyz, r5.xyzx, r7.xyzx
mad r2.xyz, r3.xywx, r2.xyzx, r5.xyzx
mul r0.yzw, r10.xxyz, r0.zzzz
add r1.xyz, -r4.xyzx, r1.yyyy
mad r1.xyz, r0.xxxx, r1.xyzx, r4.xyzx
mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
add r0.xyz, r6.xyzx, r0.xyzx
mul r0.w, v7.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, r1.w
ret 
// Approximately 0 instruction slots used