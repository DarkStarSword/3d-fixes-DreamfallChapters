// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 49029614248a33e6-vs.txt
// 3DMigoto: 49029614248a33e6 | Matched 3 variants of 1 shaders: Nature/SpeedTree
//
//       Unity headers extracted from SpeedTree.shader
//       Shader "Nature/SpeedTree" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//          _DetailTex ("Detail", 2D) = "black" { }
//          _BumpMap ("Normal Map", 2D) = "bump" { }
//          _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//         [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//         [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//         }
//         CustomEditor "SpeedTreeMaterialInspector"
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//             Cull [_Cull]
//             GpuProgramID 4395
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 557
// 2:              GpuProgramIndex 565
// 4:              GpuProgramIndex 573
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 183 0 3
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 4:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "VERTEXLIGHT_ON" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 31 5 0 0 2 1 1 2 3 4 4 5
//      ConstBuffer "$Globals" 176
//      Vector 48 [unity_ColorSpaceLuminance]
//      Float 128 [_WindQuality]
//      Float 132 [_WindEnabled]
//      Vector 144 [_HueVariation]
//      Vector 160 [_Color]
//      ConstBuffer "UnityLighting" 720
//      Vector 32 [unity_4LightPosX0]
//      Vector 48 [unity_4LightPosY0]
//      Vector 64 [unity_4LightPosZ0]
//      Vector 80 [unity_4LightAtten0]
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 320 [unity_LODFade]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 32 [_ST_WindBranch]
//      Vector 48 [_ST_WindBranchTwitch]
//      Vector 64 [_ST_WindBranchWhip]
//      Vector 80 [_ST_WindBranchAnchor]
//      Vector 96 [_ST_WindBranchAdherences]
//      Vector 112 [_ST_WindTurbulences]
//      Vector 240 [_ST_WindAnimation]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "SpeedTreeWind" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:20:50 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyz 
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 6      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_constantbuffer cb3[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyz
dcl_input v7.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul o3.xyz, v7.xxxx, cb0[10].xyzx
add r0.x, cb2[15].y, cb2[15].x
add r0.y, r0.x, cb2[15].z
add r0.z, v0.x, v2.y
add r0.z, r0.z, v2.x
frc r0.yz, r0.yyzy
mad r0.y, r0.z, l(0.500000), r0.y
add r0.y, r0.y, l(-0.300000)
mul_sat o4.z, r0.y, cb0[9].w
mul r0.y, cb0[8].y, cb0[8].x
ge r0.z, l(0.000000), r0.y
mul r1.xyz, cb2[17].xyzx, cb3[0].yyyy
mad r1.xyz, cb2[16].xyzx, cb3[0].xxxx, r1.xyzx
mad r1.xyz, cb2[18].xyzx, cb3[0].zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xy, r0.wwww, r1.xzxx
movc r0.zw, r0.zzzz, l(0,0,0,0), r1.xxxy
add r1.xyz, -v0.xyzx, v4.xyzx
mad r1.xyz, cb2[20].xxxx, r1.xyzx, v0.xyzx
ge r1.w, r0.y, l(3.000000)
if_nz r1.w
  eq r1.w, r0.y, l(5.000000)
  if_nz r1.w
    mul r2.xyz, cb2[17].xyzx, cb3[5].yyyy
    mad r2.xyz, cb2[16].xyzx, cb3[5].xxxx, r2.xyzx
    mad r2.xyz, cb2[18].xyzx, cb3[5].zzzz, r2.xyzx
    dp3 r1.w, r2.xyzx, r2.xyzx
    rsq r1.w, r1.w
    mul r2.xyz, r1.wwww, r2.xyzx
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r1.w, r0.x, cb3[2].x
    add r4.x, r1.w, v3.w
    mad r4.y, r1.w, cb3[3].y, v3.w
    mul r2.w, r4.x, cb3[3].y
    mul r4.z, r2.w, l(0.500000)
    add r4.w, r4.x, -v3.z
    add r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r4.xyzw, r4.xyzw
    mad r4.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r5.xyzw, |r4.xyzw|, |r4.xyzw|
    mad r4.xyzw, -|r4.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r4.xyzw, r5.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r4.xyzw, r4.xyzw, r4.xyzw
    mul r5.w, r4.z, r4.y
    lt r2.w, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r5.xy, r2.wwww, r5.xyxx, r5.zwzz
    mad r2.w, -r4.y, r4.z, r5.x
    mad r2.w, r5.y, r2.w, r5.w
    add r3.w, -r2.w, r5.x
    mad r2.w, r5.y, r3.w, r2.w
    mul r2.w, r2.w, cb3[3].x
    add r3.w, -cb3[0].w, l(1.000000)
    add r4.y, -cb3[3].x, l(1.000000)
    mul r4.x, r4.y, r4.x
    mad r2.w, r2.w, r3.w, r4.x
    mad r3.w, r4.w, cb3[4].x, l(1.000000)
    mul r2.w, r2.w, r3.w
    mul r3.xyz, r2.wwww, r3.xyzx
    mad r3.xyz, r3.xyzx, cb3[2].yyyy, r1.xyzx
    mad r4.x, r1.w, l(0.100000), v3.w
    mul r1.w, cb3[7].x, cb3[15].x
    mad r4.y, r1.w, l(0.100000), v3.w
    add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r4.xy, r4.xyxx
    mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r5.xy, |r4.xyxx|, |r4.xyxx|
    mad r4.xy, -|r4.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r4.xy, r5.xyxx, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r4.xy, r4.xyxx, r4.xyxx
    mul r4.xy, r4.xyxx, r4.xyxx
    mul r1.w, r4.x, r4.y
    mad r1.w, -r1.w, cb3[7].x, l(1.000000)
    mul r2.w, r4.w, cb3[0].w
    mad r1.w, r2.w, cb3[4].x, r1.w
    mad r2.xyz, r2.xyzx, cb3[5].wwww, -r3.xyzx
    mul r2.xyz, r2.xyzx, cb3[6].yyyy
    mul r2.xyz, r1.wwww, r2.xyzx
    mad r1.xyz, r2.xyzx, v3.zzzz, r3.xyzx
  else 
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.x, r0.x, cb3[2].x
    add r3.x, r0.x, v3.w
    mad r3.y, r0.x, cb3[3].y, v3.w
    mul r0.x, r3.x, cb3[3].y
    mul r3.z, r0.x, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.x, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.xxxx, r4.xyxx, r4.zwzz
    mad r0.x, -r3.y, r3.z, r4.x
    mad r0.x, r4.y, r0.x, r4.w
    add r1.w, -r0.x, r4.x
    mad r0.x, r4.y, r1.w, r0.x
    mul r0.x, r0.x, cb3[3].x
    add r1.w, -cb3[0].w, l(1.000000)
    add r2.w, -cb3[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.x, r0.x, r1.w, r2.w
    mul r2.xyz, r0.xxxx, r2.xyzx
    mad r1.xyz, r2.xyzx, cb3[2].yyyy, r1.xyzx
  endif 
endif 
lt r0.x, l(0.000000), r0.y
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r1.w, -r1.w, l(0.250000), r1.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb3[1].z
ne r2.x, r1.w, l(0.000000)
log r2.y, r1.w
mul r2.y, r2.y, cb3[1].w
exp r2.y, r2.y
movc r1.w, r2.x, r2.y, r1.w
add r2.x, cb2[15].x, cb3[1].x
mad r2.y, cb3[1].x, l(0.800000), cb2[15].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb3[6].x, cb3[1].z
mad r2.x, cb3[1].y, r2.x, r2.y
mul r1.w, r1.w, r2.x
mad r2.xz, r0.zzwz, r1.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r0.yzw, r0.yyyy, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r0.xyw, cb2[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[14].xyzx, r0.zzzz, r0.xywx
mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
mov r2.x, cb2[16].x
mov r2.y, cb2[17].x
mov r2.z, cb2[18].x
mov r3.x, cb2[16].y
mov r3.y, cb2[17].y
mov r3.z, cb2[18].y
mul r3.xyz, r3.xyzx, v2.yyyy
mad r2.xyz, r2.xyzx, v2.xxxx, r3.xyzx
mov r3.x, cb2[16].z
mov r3.y, cb2[17].z
mov r3.z, cb2[18].z
mad r2.xyz, r3.xyzx, v2.zzzz, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyzw, -r0.xxxx, cb1[2].xyzw
add r4.xyzw, -r0.yyyy, cb1[3].xyzw
add r5.xyzw, -r0.zzzz, cb1[4].xyzw
mul r6.xyzw, r4.xyzw, r4.xyzw
mad r6.xyzw, r3.xyzw, r3.xyzw, r6.xyzw
mad r6.xyzw, r5.xyzw, r5.xyzw, r6.xyzw
mul r4.xyzw, r2.yyyy, r4.xyzw
mad r3.xyzw, r3.xyzw, r2.xxxx, r4.xyzw
mad r3.xyzw, r5.xyzw, r2.zzzz, r3.xyzw
rsq r4.xyzw, r6.xyzw
mul r3.xyzw, r3.xyzw, r4.xyzw
max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r4.xyzw, r6.xyzw, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
mul r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyz, r3.yyyy, cb1[7].xyzx
mad r4.xyz, cb1[6].xyzx, r3.xxxx, r4.xyzx
mad r3.xyz, cb1[8].xyzx, r3.zzzz, r4.xyzx
mad r3.xyz, cb1[9].xyzx, r3.wwww, r3.xyzx
eq r0.w, cb0[3].w, l(0.000000)
mad r4.xyz, r3.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r4.xyz, r3.xyzx, r4.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r4.xyz, r3.xyzx, r4.xyzx
movc r3.xyz, r0.wwww, r4.xyzx, r3.xyzx
mul r4.xyzw, r2.yzzx, r2.xyzz
dp4 r5.x, cb1[41].xyzw, r4.xyzw
dp4 r5.y, cb1[42].xyzw, r4.xyzw
dp4 r5.z, cb1[43].xyzw, r4.xyzw
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
mad r4.xyz, cb1[44].xyzx, r0.wwww, r5.xyzx
add o5.xyz, r3.xyzx, r4.xyzx
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 49029614248a33e6-vs.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mov o1.w, r1.z
mov o1.xyz, r2.xyzx
mov o3.w, cb0[10].w
mov o2.xyz, r0.xyzx
mov o4.xy, v3.xyxx
ret 
// Approximately 0 instruction slots used