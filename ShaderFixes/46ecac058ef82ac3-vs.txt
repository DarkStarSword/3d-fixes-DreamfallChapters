// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 46ecac058ef82ac3-vs.txt
// 3DMigoto: 46ecac058ef82ac3 |    Unity headers extracted from atsV2WavingGrass.shader
//    Shader "Hidden/TerrainEngine/Details/WavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff2 ("Cutoff", Float) = 0.500000
//      }
//      Fallback Off
//      SubShader 1/2 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest+200" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest+200" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 29941
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 48
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from atsV2WavingGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 89 0 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 224
//   Vector 160 [_WaveAndDistance]
//   Vector 176 [_WavingTint]
//   Vector 192 [_MainTex_ST]
//   ConstBuffer "UnityLighting" 720
//   Vector 32 [unity_4LightPosX0]
//   Vector 48 [unity_4LightPosY0]
//   Vector 64 [unity_4LightPosZ0]
//   Vector 80 [unity_4LightAtten0]
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:20:08 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         3  ( FLT, FLT, FLT, FLT)
// c4         cb1             2         8  ( FLT, FLT, FLT, FLT)
// c12        cb1            38         7  ( FLT, FLT, FLT, FLT)
// c19        cb2             0         4  ( FLT, FLT, FLT, FLT)
// c23        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c30        cb3             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c31, 0.0480000004, 0.0599999987, 0.239999995, 0.0960000008
    def c32, 0.0240000002, 0.0799999982, 0.200000003, -0.161616161
    def c33, 1.20000005, 2, 1.60000002, 4.80000019
    def c34, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c35, 0.215387449, 0.358979076, 0.287183255, 0.861549795
    def c36, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c37, -0.5, 0.5, 0, 1
    def c38, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c39, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c40, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mul r0, v0.z, c32.xyyz
    mad r0, v0.x, c31, r0
    mov r1.x, c1.x
    mad r0, r1.x, c33, r0
    frc r0, r0
    mad r0, r0, c34.x, c34.y
    mul r1, r0, r0
    mul r2, r0, r1
    mad r0, r2, c32.w, r0
    mul r2, r1, r2
    mul r1, r1, r2
    mad r0, r2, c34.z, r0
    mad r0, r1, c34.w, r0
    mul r0, r0, c35
    mul r0, r0, r0
    dp4 r1.x, r0, c36.xxyz
    mul r1.x, r1.x, c36.w
    mov r2.xw, c37
    add r1.yzw, r2.x, c2.xxyz
    mad r1.xyz, r1.x, r1.yzww, c37.y
    mul r1.xyz, r1, v7
    add oT3.xyz, r1, r1
    mad oT0.xy, v3, c3, c3.zwzw
    mul r1.x, v2.x, c27.x
    mul r1.y, v2.x, c28.x
    mul r1.z, v2.x, c29.x
    mul r2.x, v2.y, c27.y
    mul r2.y, v2.y, c28.y
    mul r2.z, v2.y, c29.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c27.z
    mul r2.y, v2.z, c28.z
    mul r2.z, v2.z, c29.z
    add r1.xyz, r1, r2
    nrm r3.xyz, r1
    mul r1.x, r3.y, r3.y
    mad r1.x, r3.x, r3.x, -r1.x
    mul r4, r3.yzzx, r3.xyzz
    dp4 r2.x, c15, r4
    dp4 r2.y, c16, r4
    dp4 r2.z, c17, r4
    mad r1.xyz, c18, r1.x, r2
    mov r3.w, c37.w
    dp4 r2.x, c12, r3
    dp4 r2.y, c13, r3
    dp4 r2.z, c14, r3
    add r1.xyz, r1, r2
    max r1.xyz, r1, c37.z
    mov r1.w, c40.x
    lit r4, r1.xxww
    mov r2.x, r4.z
    lit r4, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r4.z
    mad r1.xyz, r2, c40.y, c40.z
    max r1.xyz, r1, c37.z
    mov r1.w, v7.w
    mul r1.w, r1.w, v3.y
    mul r1.w, r1.w, c1.z
    mul r0, r0, r1.w
    dp4 r1.w, r0, c39
    dp4 r0.x, r0, c38
    mul r0.yz, r1.w, c29.xxzw
    mad r0.xy, c27.xzzw, r0.x, r0.yzzw
    add r0.xy, -r0, v0.xzzw
    mul r2.xyz, v0.y, c24
    mad r2.xyz, c23, r0.x, r2
    mad r2.xyz, c25, r0.y, r2
    mad r2.xyz, c26, v0.w, r2
    add r4, -r2.y, c5
    mul r5, r3.y, r4
    mul r4, r4, r4
    add r6, -r2.x, c4
    mad r5, r6, r3.x, r5
    mad r4, r6, r6, r4
    add r6, -r2.z, c6
    mov oT2.xyz, r2
    mad r5, r6, r3.z, r5
    mad r4, r6, r6, r4
    mov oT1.xyz, r3
    rsq r3.x, r4.x
    rsq r3.y, r4.y
    rsq r3.z, r4.z
    rsq r3.w, r4.w
    mad r2, r4, c7, r2.w
    mul r3, r3, r5
    max r3, r3, c37.z
    rcp r4.x, r2.x
    rcp r4.y, r2.y
    rcp r4.z, r2.z
    rcp r4.w, r2.w
    mul r2, r3, r4
    mul r3.xyz, r2.y, c9
    mad r3.xyz, c8, r2.x, r3
    mad r2.xyz, c10, r2.z, r3
    mad r2.xyz, c11, r2.w, r2
    add oT4.xyz, r1, r2
    mul r1, v0.y, c20
    mad r1, c19, r0.x, r1
    mad r0, c21, r0.y, r1
    add r0, r0, c22
    mad oT0.z, r0.z, c30.z, c30.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT3.w, v7.w

// approximately 108 instruction slots used
vs_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.zzzz, l(0.024000, 0.080000, 0.080000, 0.200000)
mad r0.xyzw, v0.xxxx, l(0.048000, 0.060000, 0.240000, 0.096000), r0.xyzw
mad r0.xyzw, cb0[10].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r1.xyzw, r0.xyzw, r0.xyzw
mul r2.xyzw, r0.xyzw, r1.xyzw
mad r0.xyzw, r2.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r0.xyzw
mul r2.xyzw, r1.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
mad r0.xyzw, r2.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r0.xyzw
mad r0.xyzw, r1.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r0.xyzw
mul r0.xyzw, r0.xyzw, l(0.215387449, 0.358979076, 0.287183255, 0.861549795)
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r1.x, v3.y, v7.w
mul r1.x, r1.x, cb0[10].z
mul r1.xyzw, r0.xyzw, r1.xxxx
dp4 r0.x, r0.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.x, r0.x, l(0.700000)
dp4 r0.y, r1.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
dp4 r0.z, r1.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
mul r0.yw, r0.yyyy, cb2[18].xxxz
mad r0.yz, cb2[16].xxzx, r0.zzzz, r0.yywy
add r0.yz, -r0.yyzy, v0.xxzx
mul r1.xyzw, v0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.yyyy, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 46ecac058ef82ac3-vs.txt
ne r6.w, r1.w, l(1.0)
if_nz r6.w
  add r6.w, r1.w, -r6.y
  mad r1.x, r6.w, r6.x, r1.x
endif

mad o1.z, r1.z, cb3[1].z, cb3[1].w
mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r1.x, v2.x, cb2[16].x
mul r1.y, v2.x, cb2[17].x
mul r1.z, v2.x, cb2[18].x
mul r2.x, v2.y, cb2[16].y
mul r2.y, v2.y, cb2[17].y
mul r2.z, v2.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb2[16].z
mul r2.y, v2.z, cb2[17].z
mul r2.z, v2.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o2.xyz, r1.xyzx
mul r2.xyz, v0.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r0.yyyy, r2.xyzx
mad r0.yzw, cb2[14].xxyz, r0.zzzz, r2.xxyz
mad r0.yzw, cb2[15].xxyz, v0.wwww, r0.yyzw
mov o3.xyz, r0.yzwy
add r2.xyz, cb0[11].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyz, r0.xxxx, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r2.xyz, r2.xyzx, v7.xyzx
add o4.xyz, r2.xyzx, r2.xyzx
mov o4.w, v7.w
mul r0.x, r1.y, r1.y
mad r0.x, r1.x, r1.x, -r0.x
mul r2.xyzw, r1.yzzx, r1.xyzz
dp4 r3.x, cb1[41].xyzw, r2.xyzw
dp4 r3.y, cb1[42].xyzw, r2.xyzw
dp4 r3.z, cb1[43].xyzw, r2.xyzw
mad r2.xyz, cb1[44].xyzx, r0.xxxx, r3.xyzx
mov r1.w, l(1.000000)
dp4 r3.x, cb1[38].xyzw, r1.xyzw
dp4 r3.y, cb1[39].xyzw, r1.xyzw
dp4 r3.z, cb1[40].xyzw, r1.xyzw
add r2.xyz, r2.xyzx, r3.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r3.xyzw, -r0.zzzz, cb1[3].xyzw
mul r4.xyzw, r1.yyyy, r3.xyzw
mul r3.xyzw, r3.xyzw, r3.xyzw
add r5.xyzw, -r0.yyyy, cb1[2].xyzw
add r0.xyzw, -r0.wwww, cb1[4].xyzw
mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
mad r3.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
mad r0.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
rsq r1.xyzw, r3.xyzw
mad r3.xyzw, r3.xyzw, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r3.xyzw, r0.xyzw
mul r1.xyz, r0.yyyy, cb1[7].xyzx
mad r1.xyz, cb1[6].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb1[8].xyzx, r0.zzzz, r1.xyzx
mad r0.xyz, cb1[9].xyzx, r0.wwww, r0.xyzx
add o5.xyz, r2.xyzx, r0.xyzx
ret 
// Approximately 0 instruction slots used