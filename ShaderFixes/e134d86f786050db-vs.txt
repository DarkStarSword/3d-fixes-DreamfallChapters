// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e134d86f786050db-vs.txt
// 3DMigoto: e134d86f786050db |    Unity headers extracted from SpeedTreeBillboard.shader
//    Shader "Nature/SpeedTree Billboard" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          GpuProgramID 520081
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 2401
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 71 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "EFFECT_BUMP" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 160
//   Vector 144 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 0 [unity_BillboardNormal] 3
//   Vector 16 [unity_BillboardTangent] 3
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityBillboardPerCamera" 5
//   BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:57:36 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 7      w        5     NONE   float      w
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb6             0        18  ( FLT, FLT, FLT, FLT)
// c19        cb0             9         1  ( FLT, FLT, FLT, FLT)
// c20        cb1             5         1  ( FLT, FLT, FLT, FLT)
// c21        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c28        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c32        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c39        cb3            21         1  ( FLT, FLT, FLT, FLT)
// c40        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c41        cb5             0         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c18                             Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c44, -0.5, 0.5, 0, 1
    def c45, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    add r0.x, v2.z, c43.w
    mov r0.yz, c44
    mad r0.x, r0.x, c0.y, r0.y
    frc r0.y, r0.x
    add r0.x, -r0.y, r0.x
    rcp r0.y, c0.x
    mul r0.x, r0.y, r0.x
    abs r0.y, r0.x
    sge r0.x, r0.x, -r0.x
    frc r0.y, r0.y
    lrp r1.x, r0.x, r0.y, -r0.y
    mul r0.x, r1.x, c0.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mova a0.x, r0.x
    mad r0.xy, c2[a0.x].zwzw, -v1.yxzw, c2[a0.x]
    mad r1.xy, c2[a0.x].zwzw, v1, c2[a0.x]
    slt r0.z, c2[a0.x].w, r0.z
    add r0.xy, r0, -r1
    mad oT4.xy, r0.z, r0, r1
    mov r0.xyz, c41
    mul r1.x, r0.x, c36.x
    mul r1.y, r0.x, c37.x
    mul r1.z, r0.x, c38.x
    mul r2.x, r0.y, c36.y
    mul r2.y, r0.y, c37.y
    mul r2.z, r0.y, c38.y
    add r0.xyw, r1.xyzz, r2.xyzz
    mul r1.x, r0.z, c36.z
    mul r1.y, r0.z, c37.z
    mul r1.z, r0.z, c38.z
    add r0.xyz, r0.xyww, r1
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c24, r2
    dp4 r3.y, c25, r2
    dp4 r3.z, c26, r2
    mad r0.xyz, c27, r0.x, r3
    mov r1.w, c44.w
    dp4 r2.x, c21, r1
    dp4 r2.y, c22, r1
    dp4 r2.z, c23, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c44.z
    mov r0.w, c45.x
    lit r2, r0.xxww
    mov r2.x, r2.z
    lit r3, r0.yyww
    lit r0, r0.zzww
    mov r2.z, r0.z
    mov r2.y, r3.z
    mad r0.xyz, r2, c45.y, c45.z
    max oT5.xyz, r0, c44.z
    add r0.x, v1.x, c44.x
    mul r0.x, r0.x, c1.x
    mul r0.x, r0.x, v2.x
    mul r0.xyz, r0.x, c42
    mad r1.w, v1.y, c1.y, c1.z
    mad r0.w, r1.w, v2.y, r0.y
    add r0.xyz, r0.xwzw, v0
    mul r2, r0.y, c29
    mad r2, c28, r0.x, r2
    mad r2, c30, r0.z, r2
    add r2, r2, c31
    mul r0.w, r2.y, c20.x
    mul r3.w, r0.w, c44.y
    mul r3.xz, r2.xyww, c44.y
    add oT6.xy, r3.z, r3.xwzw
    mul r0.w, r2.z, c40.y
    exp oT4.w, -r0.w
    mad oPos.xy, r2.w, c18, r2
    mov oPos.zw, r2
    mov oT6.zw, r2
    mov r2.xyz, c42
    mul r3.xyz, r2.y, c33.yzxw
    mad r2.xyw, c32.yzzx, r2.x, r3.xyzz
    mad r2.xyz, c34.yzxw, r2.z, r2.xyww
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mov oT0.x, r2.z
    mul r3.xyz, r1.zxyw, r2
    mad r3.xyz, r1.yzxw, r2.yzxw, -r3
    mul r3.xyz, r3, -c39.w
    mov oT0.y, r3.x
    mov oT0.z, r1.x
    mul r4.xyz, r0.y, c33
    mad r0.xyw, c32.xyzz, r0.x, r4.xyzz
    mad r0.xyz, c34, r0.z, r0.xyww
    add r0.xyz, r0, c35
    mov oT0.w, r0.x
    mov oT1.x, r2.x
    mov oT2.x, r2.y
    mov oT1.y, r3.y
    mov oT2.y, r3.z
    mov oT1.z, r1.y
    mov oT2.z, r1.z
    mov oT1.w, r0.y
    mov oT2.w, r0.z
    mov oT3, c19
    mov oT4.z, c44.z

// approximately 105 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, v1.x, l(-0.500000)
mul r0.x, r0.x, cb6[1].x
mul r0.x, r0.x, v2.x
mul r0.xyz, r0.xxxx, cb5[1].xyzx
mad r1.x, v1.y, cb6[1].y, cb6[1].z
mad r0.w, r1.x, v2.y, r0.y
add r0.xyz, r0.xwzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e134d86f786050db-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mul r2.xyz, r0.yyyy, cb3[13].xyzx
mad r0.xyw, cb3[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb3[15].xyzx
mov o1.w, r0.x
mul r2.xyz, cb3[13].yzxy, cb5[1].yyyy
mad r2.xyz, cb3[12].yzxy, cb5[1].xxxx, r2.xyzx
mad r2.xyz, cb3[14].yzxy, cb5[1].zzzz, r2.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r3.x, cb3[16].x, cb5[0].x
mul r3.y, cb3[17].x, cb5[0].x
mul r3.z, cb3[18].x, cb5[0].x
mul r4.x, cb3[16].y, cb5[0].y
mul r4.y, cb3[17].y, cb5[0].y
mul r4.z, cb3[18].y, cb5[0].y
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.x, cb3[16].z, cb5[0].z
mul r4.y, cb3[17].z, cb5[0].z
mul r4.z, cb3[18].z, cb5[0].z
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r2.xyzx, r3.zxyz
mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
mul r4.xyz, r4.xyzx, -cb3[21].wwww
mov o1.y, r4.x
mov o1.x, r2.z
mov o1.z, r3.x
mov o2.w, r0.y
mov o3.w, r0.z
mov o2.x, r2.x
mov o3.x, r2.y
mov o2.z, r3.y
mov o2.y, r4.y
mov o3.y, r4.z
mov o3.z, r3.z
mov o4.xyzw, cb0[9].xyzw
add r0.x, v2.z, cb5[2].w
mad r0.x, r0.x, cb6[0].y, l(0.500000)
round_ni r0.x, r0.x
div r0.x, r0.x, cb6[0].x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
mul r0.x, r0.x, cb6[0].x
ftou r0.x, r0.x
lt r0.y, cb6[r0.x + 2].w, l(0.000000)
mad r0.zw, -cb6[r0.x + 2].zzzw, v1.yyyx, cb6[r0.x + 2].xxxy
mad r2.xy, cb6[r0.x + 2].zwzz, v1.xyxx, cb6[r0.x + 2].xyxx
movc o5.xy, r0.yyyy, r0.zwzz, r2.xyxx
mul r0.x, r1.z, cb4[1].y
exp o5.w, -r0.x
mov o5.z, l(0)
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r2.xyzw, r3.yzzx, r3.xyzz
dp4 r4.x, cb2[41].xyzw, r2.xyzw
dp4 r4.y, cb2[42].xyzw, r2.xyzw
dp4 r4.z, cb2[43].xyzw, r2.xyzw
mad r0.xyz, cb2[44].xyzx, r0.xxxx, r4.xyzx
mov r3.w, l(1.000000)
dp4 r2.x, cb2[38].xyzw, r3.xyzw
dp4 r2.y, cb2[39].xyzw, r3.xyzw
dp4 r2.z, cb2[40].xyzw, r3.xyzw
add r0.xyz, r0.xyzx, r2.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o7.zw, r1.zzzw
add o7.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used