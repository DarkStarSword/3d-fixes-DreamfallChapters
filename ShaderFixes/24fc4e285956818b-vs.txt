// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 24fc4e285956818b-vs.txt
// 3DMigoto: 24fc4e285956818b | Matched 2 variants of 2 shaders: FX/Heat Distort, FX/Heat Distort No Clamp
//
// 1:    Unity headers extracted from HeatDistort.shader
// 2:    Unity headers extracted from HeatDistort_NoClamp.shader
// 2:    Shader "FX/Heat Distort No Clamp" {
// 1:    Shader "FX/Heat Distort" {
//         Properties {
// 2:       _BumpAmt ("Distortion", Float) = 10.000000
// 1:       _BumpAmt ("Distortion", Range(0.000000,128.000000)) = 10.000000
//          _MainTex ("Tint Color (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//         }
//         SubShader 1/2 {
//           Tags { "QUEUE"="Transparent+1" "RenderType"="Transparent" }
//           GrabPass {
//             Name "BASE"
//             Tags { "LIGHTMODE"="Always" }
//            }
//           Pass 1/1 {
//             Name "BASE"
//             Tags { "LIGHTMODE"="Always" "QUEUE"="Transparent+1" "RenderType"="Transparent" }
//             ZWrite Off
//             Blend SrcAlpha OneMinusSrcAlpha
//             GpuProgramID 52264
//             Program "vp" {
//               SubProgram "d3d11 " {
//                 GpuProgramIndex 1
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from HeatDistort.shader.decompressed:
// 2: Unity 5.3 headers extracted from HeatDistort_NoClamp.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 8 0 0
//      undeciphered2: 1 0 2 0 0 0
//      undeciphered3: 13 3 0 0 2 1 3 4
//      ConstBuffer "$Globals" 160
//      Vector 112 [_BumpMap_ST]
//      Vector 128 [_MainTex_ST]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      BindCB "$Globals" 0
//      BindCB "UnityPerDraw" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:16:16 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2     zw        2     NONE   float     zw
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output o3.xyzw
dcl_temps 2

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 24fc4e285956818b-vs.txt
ne r1.w, r0.w, l(1.0)
if_nz r1.w
  add r1.w, r0.w, -r1.y
  mad r0.x, r1.w, r1.x, r0.x
endif

mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
mov o1.zw, r0.zzzw
mul o1.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad o2.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
mad o2.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
mov o3.xyzw, v2.xyzw
ret 
// Approximately 0 instruction slots used