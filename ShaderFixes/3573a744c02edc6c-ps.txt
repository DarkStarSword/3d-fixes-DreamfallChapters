// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3573a744c02edc6c-ps.txt
// 3DMigoto: 3573a744c02edc6c | Matched 3 variants of 1 shaders: Chickenlord/Reflective/Fresnel/Specular
//
//       Unity headers extracted from Reflect-Glossy_Fresnel.shader
//       Shader "Chickenlord/Reflective/Fresnel/Specular" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//          _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//          _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//          _Fresnel ("Reflection Fresnel Exponent", Range(0.000000,6.000000)) = 1.000000
//          _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//          _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//         }
//         Fallback "Reflective/VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//             GpuProgramID 27926
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 139
// 2:              GpuProgramIndex 159
// 4:              GpuProgramIndex 179
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Reflect-Glossy_Fresnel.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 28 4 0
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//      undeciphered2: 1 4 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 64 [unity_Lightmap_HDR]
//      Vector 96 [_LightColor0]
//      Vector 128 [_Color]
//      Vector 144 [_ReflectColor]
//      Float 164 [_Fresnel]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_Cube] CUBE 3
//      SetTexture 2 [_ShadowMapTexture] 2D 1
//      SetTexture 3 [unity_Lightmap] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:15:11 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         3  ( FLT, FLT, FLT, FLT)
// c5         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c7         cb3            24         1  ( FLT, FLT, FLT, FLT)
// c8         cb4             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t2               
// s2             s2              t0               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, 1, 0, 0, 0
    dcl t0.xyz
    dcl t1.xyz
    dcl_pp t2.xyz
    dcl t3.xyz
    dcl t4
    dcl t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    rcp r0.w, t5.w
    mul r0.xy, r0.w, t5
    texld_pp r1, t4, s0
    texld_pp r0, r0, s1
    add_pp r0.y, -r0.x, c9.x
    dp3_sat_pp r0.z, t2, c6
    mul_pp r0.y, r0.y, r0.z
    mul_pp r1.w, r1.w, c0.x
    mul_pp r2.xyz, r1, r1.w
    mad_pp r0.yzw, r0.y, -c1.xxyz, r2.xxyz
    mul_pp r3.xyz, r0.x, r1
    max_pp r4.xyz, r3, r0.yzww
    mad_pp r0.xyz, r1.w, r1, -r4
    mad_pp r0.xyz, c7.x, r0, r4
    min_pp r1.xyz, r0, r2
    add r0.xyz, -t3, c5
    nrm_pp r2.xyz, r0
    dp3 r1.w, r2, t2
    add r1.w, -r1.w, c9.x
    pow r0.x, r1.w, c4.y
    texld_pp r2, t0, s2
    texld_pp r3, t1, s3
    mul_pp r0.yzw, r2.w, r3.xxyz
    mul_pp r2.xyz, r2, c2
    mul_pp r0.xyz, r0.x, r0.yzww
    mul_pp r0.xyz, r0, c3
    mad_pp r0.xyz, r2, r1, r0
    mov_sat r0.w, t0.z
    lrp_pp r1.xyz, r0.w, r0, c8
    mov_pp r1.w, c9.x
    mov_pp oC0, r1

// approximately 35 instruction slots used (4 texture, 31 arithmetic)
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3573a744c02edc6c-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

dp3_sat r0.x, v3.xyzx, cb2[0].xyzx
div r0.yz, v6.xxyx, v6.wwww
sample r1.xyzw, r0.yzyy, t2.xyzw, s1
add r0.y, -r1.x, l(1.000000)
mul r0.x, r0.y, r0.x
sample r2.xyzw, v5.xyxx, t3.xyzw, s0
mul r0.y, r2.w, cb0[4].x
mul r1.yzw, r2.xxyz, r0.yyyy
mad r0.xzw, -r0.xxxx, cb0[6].xxyz, r1.yyzw
mul r3.xyz, r1.xxxx, r2.xyzx
max r0.xzw, r0.xxzw, r3.xxyz
mad r2.xyz, r0.yyyy, r2.xyzx, -r0.xzwx
mad r0.xyz, cb3[24].xxxx, r2.xyzx, r0.xzwx
min r0.xyz, r0.xyzx, r1.yzwy
add r1.xyz, -v4.xyzx, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r1.xyzx, v3.xyzx
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[10].y
exp r0.w, r0.w
sample r1.xyzw, v2.xyzx, t1.xyzw, s3
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyz, r1.xyzx, r2.wwww
mul r2.xyz, r2.xyzx, cb0[8].xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[9].xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, -cb4[0].xyzx
mov_sat r0.w, v1.z
mad o0.xyz, r0.wwww, r0.xyzx, cb4[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used