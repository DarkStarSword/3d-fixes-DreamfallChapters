// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d86d669654a8a8a8-vs.txt
// 3DMigoto: d86d669654a8a8a8 | Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
//
// 3:    Unity headers extracted from CustomFog_BumpSpecIllum.shader
// c:    Unity headers extracted from CustomFog_BumpSpecIllumAlpha.shader
// 3:    Shader "Dreamfall/Backdrop/CustomFog_BumpSpecIllum" {
// c:    Shader "Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//          _ReflectColor ("Reflect Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//          _EmissiveColor ("Emissive Color Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//          _MainTex ("Base (RGB), Emission/spec(A)", 2D) = "white" { }
// c:       _AlphaTex ("Alpha (RGB)", 2D) = "white" { }
//          _FogColorTint ("Fog Color Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _FogColorBoost ("Fog Color Boost", Float) = 1.000000
//          _FogFactor ("Illum Fog Blend (1 is full fog))", Range(0.000000,1.000000)) = 1.000000
//          _OverallFog ("Overall Fog Strength", Range(0.000000,1.000000)) = 0.000000
//         }
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "RenderType"="Opaque" }
//           Pass 4/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//             ZWrite Off
// c:          GpuProgramID 205749
// 3:          GpuProgramID 227875
//             Program "vp" {
//               SubProgram "d3d11 " {
// 5:              GpuProgramIndex 67
// a:              GpuProgramIndex 75
//               }
//             }
//           }
//         }
//       }
//
// 3: Unity 5.3 headers extracted from CustomFog_BumpSpecIllum.shader.decompressed:
// c: Unity 5.3 headers extracted from CustomFog_BumpSpecIllumAlpha.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 23 0 0
// a:   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
// 5:   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 288
//      Vector 208 [unity_FogStart]
//      Vector 224 [unity_FogEnd]
//      Vector 240 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityLightmaps" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:58:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[16], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d86d669654a8a8a8-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r1.xyz, v0.yyyy, cb2[5].xyzx
mad r1.xyz, cb2[4].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb2[6].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb2[7].xyzx, v0.wwww, r1.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r1.x, cb0[14].x
add r1.y, -cb0[13].x, cb0[14].x
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul_sat o1.z, r1.y, r1.x
mad o1.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
mul r1.xyz, v0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
mad o2.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o3.zw, r0.zzzw
add o3.xy, r1.zzzz, r1.xwxx
mad o4.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
mov o4.zw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used