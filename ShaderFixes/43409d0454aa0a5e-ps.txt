// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 43409d0454aa0a5e-ps.txt
// 3DMigoto: 43409d0454aa0a5e |    Unity headers extracted from FogVolume.shader
//    Shader "Hidden/FogVolume" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//          ZTest Always
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha OneMinusSrcAlpha
//          GpuProgramID 27624
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 253
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FogVolume.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 127 1 2
//   Keywords { "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 96 [_Color]
//   Vector 112 [_InscatteringColor]
//   Vector 128 [_BoxMin]
//   Vector 144 [_BoxMax]
//   Vector 160 [Speed]
//   Vector 176 [Stretch]
//   Vector 208 [_ShadowColor]
//   Vector 240 [L] 3
//   Float 252 [_InscatteringIntensity]
//   Float 256 [InscatteringShape]
//   Float 260 [_Visibility]
//   Float 264 [InscatteringStartDistance]
//   Float 272 [InscatteringTransitionWideness]
//   Float 276 [_3DNoiseScale]
//   Float 280 [_RayStep]
//   Float 284 [gain]
//   Float 288 [threshold]
//   Float 292 [Shade]
//   Float 296 [_SceneIntersectionThreshold]
//   Float 300 [ShadowBrightness]
//   Float 304 [SlyCollision]
//   Float 308 [Exposure]
//   Float 312 [FadeDistance]
//   Float 316 [ShadowShift]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 192 [unity_ObjectToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_Gradient] 2D 1
//   SetTexture 2 [_NoiseVolume] 3D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:18:59 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 43409d0454aa0a5e-ps.txt
mov r14.xyzw, cb1[4].xyzw
mov r15.xyzw, l(0)
mul r15.x, -r13.x, r13.y
mul r17.xyzw, cb10[0].xyzw, r15.xxxx
mad r17.xyzw, cb10[1].xyzw, r15.yyyy, r17.xyzw
mad r17.xyzw, cb10[2].xyzw, r15.zzzz, r17.xyzw
mad r17.xyzw, cb10[3].xyzw, r15.wwww, r17.xyzw
mul r16.xyzw, cb11[12].xyzw, r17.xxxx
mad r16.xyzw, cb11[13].xyzw, r17.yyyy, r16.xyzw
mad r16.xyzw, cb11[14].xyzw, r17.zzzz, r16.xyzw
mad r16.xyzw, cb11[15].xyzw, r17.wwww, r16.xyzw
add r14.xyz, r14.xyz, -r16.xyz

add r0.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
add r2.xyz, -v5.xyzx, cb0[8].xyzx
div r2.xyz, r2.xyzx, r0.xyzx
add r3.xyz, -v5.xyzx, cb0[9].xyzx
div r3.xyz, r3.xzyx, r0.xzyx
mov r2.w, r3.x
movc r1.xw, r1.xxxx, r2.xxxw, r2.wwwx
mov r3.xw, r2.zzzy
movc r2.xy, r1.yyyy, r3.wzww, r3.zwzz
lt r0.w, r1.x, r2.x
movc r0.w, r0.w, r2.x, r1.x
lt r1.x, r2.y, r1.w
movc r1.x, r1.x, r2.y, r1.w
movc r1.yz, r1.zzzz, r3.xxyx, r3.yyxy
lt r1.w, r0.w, r1.y
movc r0.w, r1.w, r1.y, r0.w
lt r1.y, r1.z, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.yzw, |v5.xxyz|, -cb0[9].xxyz
ge r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.yzw, r1.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.y, r1.z, r1.y
add r1.y, r1.w, r1.y
min r1.y, r1.y, l(1.000000)
mul r0.w, r0.w, r1.y
div r1.yz, v2.xxyx, v2.wwww
sample r2.xyzw, r1.yzyy, t0.xyzw, s0
mad r1.w, cb1[7].z, r2.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.x, r2.x, v4.z
div r1.w, r1.w, r2.x
max r2.x, r1.x, r0.w
min r2.y, r1.x, r0.w
min r2.xy, |r1.wwww|, r2.xyxx
add r2.x, -r2.y, r2.x
div r2.x, r2.x, cb0[16].y
exp r2.x, -r2.x
add r2.x, -r2.x, l(1.000000)
add r2.yzw, v1.xxyz, -r14.xxyz
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r2.yzw, r2.yyzw, r3.xxxx
div r3.x, |r1.w|, cb0[17].x
add_sat r3.x, r3.x, -cb0[16].z
mad r3.yzw, r0.xxyz, r0.wwww, v5.xxyz
mad r0.xyz, r0.xyzx, r1.xxxx, v5.xyzx
add r0.xyz, -r3.yzwy, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
dp2 r1.x, r1.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r1.x, null, r1.x
mul r1.x, r1.x, l(43758.546875)
frc r1.x, r1.x
add r1.x, -r1.x, l(-1.000000)
mad r1.x, cb0[19].x, r1.x, l(1.000000)
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
add r1.xyz, -r3.yzwy, v5.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r1.x, |r1.w|
div r1.x, r1.x, cb0[18].z
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
mul r1.xyz, cb0[10].xyzx, cb1[0].xxxx
add r1.w, cb0[8].y, -cb0[9].y
mul r4.xyz, cb0[11].xyzx, cb0[17].yyyy
add r5.xyz, -cb0[13].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r4.w, -cb0[18].y, l(1.000000)
add r5.w, -r4.w, l(1.000000)
mov r6.w, l(1.000000)
mov r8.w, r0.w
mov r8.xyz, r3.yzwy
mov r7.xyzw, l(0,0,0,0)
mov r9.x, l(0)
loop 
  ilt r9.y, r9.x, l(50)
  lt r9.z, l(0.000000), r8.w
  and r9.y, r9.z, r9.y
  breakc_z r9.y
  dp3 r10.x, r8.xyzx, cb2[12].xyzx
  dp3 r10.y, r8.xyzx, cb2[13].xyzx
  dp3 r10.z, r8.xyzx, cb2[14].xyzx
  dp3 r9.y, r10.xyzx, r10.xyzx
  sqrt r9.y, r9.y
  div r9.y, r9.y, cb0[19].z
  mul r9.y, r9.y, l(-1.442695)
  exp r9.y, r9.y
  min r9.y, r9.y, l(1.000000)
  div r9.zw, r8.xxxy, r1.wwww
  add r9.zw, -r9.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  add r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l r10.xyzw, r9.zwzz, t1.xyzw, s1, l(0.000000)
  mul r9.z, r10.w, cb0[17].w
  mul r9.y, r9.y, r9.z
  mad r11.xyz, r8.xyzx, r4.xyzx, r1.xyzx
  sample_l r12.xyzw, r11.xyzx, t2.xyzw, s2, l(0.000000)
  mul r9.z, r9.y, r12.x
  mad r9.y, r12.x, r9.y, -cb0[18].x
  mul_sat r9.y, r9.z, r9.y
  mov r6.xyz, r10.xyzx
  mul r10.xyzw, r6.xyzw, r9.yyyy
  mov r6.xyz, r11.xzyx
  mov r9.yzw, l(0,1.000000,0,0)
  loop 
    ige r11.w, r9.w, l(3)
    breakc_nz r11.w
    mul r11.w, r9.z, v6.y
    mad r6.xy, r9.zzzz, v6.xzxx, r6.xyxx
    mad r6.z, r11.w, l(0.001000), r6.z
    sample_l r12.xyzw, r6.xzyx, t2.xyzw, s2, l(0.000000)
    mad r9.y, -r12.x, r9.y, r9.y
    mad r9.z, cb0[19].w, l(0.333333343), r9.z
    iadd r9.w, r9.w, l(1)
  endloop 
  mul r6.x, r9.y, cb0[18].w
  mul r6.y, r6.x, r6.x
  mul r6.x, r6.y, r6.x
  mad r6.xyz, r6.xxxx, r5.xyzx, cb0[13].xyzx
  mad r6.xyz, r6.xyzx, r5.wwww, r4.wwww
  mul r10.xyz, r6.xyzx, r10.xyzx
  add r6.x, -r7.w, l(1.000000)
  mad_sat r7.xyzw, r10.xyzw, r6.xxxx, r7.xyzw
  iadd r9.x, r9.x, l(1)
  mad r8.xyz, r0.xyzx, cb0[17].zzzz, r8.xyzx
  add r8.w, r8.w, -cb0[17].z
endloop 
mul r7.xyz, r7.xyzx, cb0[6].xyzx
max r0.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r7.xyzx, cb0[7].xyzx
dp3_sat r1.w, r2.yzwy, cb0[15].xyzx
mad r2.y, -cb0[16].x, cb0[16].x, l(1.000000)
dp2 r1.w, r1.wwww, cb0[16].xxxx
mad r1.w, cb0[16].x, cb0[16].x, -r1.w
add r1.w, r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, l(1.500000)
exp r1.w, r1.w
div r1.w, r2.y, r1.w
mul r1.w, r1.w, l(0.0795772821)
mul r2.x, r2.x, r3.x
mul r1.w, r1.w, r2.x
mul r1.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
mul_sat o0.xyz, r0.xyzx, cb0[19].yyyy
mov_sat o0.w, r0.w
ret 
// Approximately 0 instruction slots used