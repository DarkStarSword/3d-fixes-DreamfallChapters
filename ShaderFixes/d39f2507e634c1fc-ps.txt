// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d39f2507e634c1fc-ps.txt
// 3DMigoto: d39f2507e634c1fc | Matched 2 variants of 2 shaders: Hidden/FogVolume, Hidden/FogVolume_SHADE
//
// 1:    Unity headers extracted from FogVolume.shader
// 2:    Unity headers extracted from FogVolume_SHADE.shader
// 1:    Shader "Hidden/FogVolume" {
// 2:    Shader "Hidden/FogVolume_SHADE" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//           Pass 1/1 {
//             Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//             ZTest Always
//             ZWrite Off
//             Cull Front
//             Blend SrcAlpha OneMinusSrcAlpha
// 2:          GpuProgramID 16353
// 1:          GpuProgramID 27624
//             Program "fp" {
//               SubProgram "d3d11 " {
// 2:              GpuProgramIndex 127
// 1:              GpuProgramIndex 255
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from FogVolume.shader.decompressed:
// 2: Unity 5.3 headers extracted from FogVolume_SHADE.shader.decompressed:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201510240 145 1 3
// 2:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 1:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
//      undeciphered2: 1 3 3 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 320
//      Vector 96 [_Color]
//      Vector 112 [_InscatteringColor]
//      Vector 128 [_BoxMin]
//      Vector 144 [_BoxMax]
//      Vector 160 [Speed]
//      Vector 176 [Stretch]
//      Vector 208 [_ShadowColor]
//      Vector 240 [L] 3
//      Float 252 [_InscatteringIntensity]
//      Float 256 [InscatteringShape]
//      Float 260 [_Visibility]
//      Float 264 [InscatteringStartDistance]
//      Float 272 [InscatteringTransitionWideness]
//      Float 276 [_3DNoiseScale]
//      Float 280 [_RayStep]
//      Float 284 [gain]
//      Float 288 [threshold]
//      Float 292 [Shade]
//      Float 296 [_SceneIntersectionThreshold]
//      Float 300 [ShadowBrightness]
//      Float 304 [SlyCollision]
//      Float 308 [Exposure]
//      Float 312 [FadeDistance]
//      Float 316 [ShadowShift]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 192 [unity_ObjectToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_Gradient] 2D 1
//      SetTexture 2 [_NoiseVolume] 3D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:53:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 20
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d39f2507e634c1fc-ps.txt
mov r17.xyzw, cb1[4].xyzw
mul r18.x, -r16.x, r16.y
mul r19.xyzw, cb10[0].xyzw, r18.xxxx
add r17.xyz, r17.xyz, -r19.xyz

add r0.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
add r2.xyz, -v5.xyzx, cb0[8].xyzx
div r2.xyz, r2.xyzx, r0.xyzx
add r3.xyz, -v5.xyzx, cb0[9].xyzx
div r3.xyz, r3.xzyx, r0.xzyx
mov r2.w, r3.x
movc r1.xw, r1.xxxx, r2.xxxw, r2.wwwx
mov r3.xw, r2.zzzy
movc r2.xy, r1.yyyy, r3.wzww, r3.zwzz
lt r0.w, r1.x, r2.x
movc r0.w, r0.w, r2.x, r1.x
lt r1.x, r2.y, r1.w
movc r1.x, r1.x, r2.y, r1.w
movc r1.yz, r1.zzzz, r3.xxyx, r3.yyxy
lt r1.w, r0.w, r1.y
movc r0.w, r1.w, r1.y, r0.w
lt r1.y, r1.z, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.yzw, |v5.xxyz|, -cb0[9].xxyz
ge r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.yzw, r1.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.y, r1.z, r1.y
add r1.y, r1.w, r1.y
min r1.y, r1.y, l(1.000000)
mul r0.w, r0.w, r1.y
div r1.yz, v2.xxyx, v2.wwww
sample r2.xyzw, r1.yzyy, t0.xyzw, s0
mad r1.w, cb1[7].z, r2.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.x, r2.x, v4.z
div r1.w, r1.w, r2.x
max r2.x, r1.x, r0.w
min r2.y, r1.x, r0.w
min r2.xy, |r1.wwww|, r2.xyxx
add r2.x, -r2.y, r2.x
div r2.x, r2.x, cb0[16].y
exp r2.x, -r2.x
add r2.x, -r2.x, l(1.000000)
add r2.yzw, v1.xxyz, -r17.xxyz
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r2.yzw, r2.yyzw, r3.xxxx
div r3.x, |r1.w|, cb0[17].x
add_sat r3.x, r3.x, -cb0[16].z
mad r3.yzw, r0.xxyz, r0.wwww, v5.xxyz
mad r0.xyz, r0.xyzx, r1.xxxx, v5.xyzx
add r0.xyz, -r3.yzwy, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
dp2 r1.x, r1.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r1.x, null, r1.x
mul r1.x, r1.x, l(43758.546875)
frc r1.x, r1.x
add r1.x, -r1.x, l(-1.000000)
mad r1.x, cb0[19].x, r1.x, l(1.000000)
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
add r1.xyz, -r3.yzwy, v5.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r1.x, |r1.w|
div r1.x, r1.x, cb0[18].z
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
mul r1.xyz, cb0[10].xyzx, cb1[0].xxxx
add r1.w, cb0[8].y, -cb0[9].y
mul r4.xyz, cb0[11].xyzx, cb0[17].yyyy
mul r5.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r6.xyz, r1.xyzx, r1.xyzx
add r7.xyz, -cb0[13].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r4.w, -cb0[18].y, l(1.000000)
add r5.w, -r4.w, l(1.000000)
mov r8.w, l(1.000000)
mov r6.w, r0.w
mov r10.xyz, r3.yzwy
mov r9.xyzw, l(0,0,0,0)
mov r7.w, l(0)
loop 
  ilt r10.w, r7.w, l(50)
  lt r11.x, l(0.000000), r6.w
  and r10.w, r10.w, r11.x
  breakc_z r10.w
  dp3 r11.x, r10.xyzx, cb2[12].xyzx
  dp3 r11.y, r10.xyzx, cb2[13].xyzx
  dp3 r11.z, r10.xyzx, cb2[14].xyzx
  dp3 r10.w, r11.xyzx, r11.xyzx
  sqrt r10.w, r10.w
  div r10.w, r10.w, cb0[19].z
  mul r10.w, r10.w, l(-1.442695)
  exp r10.w, r10.w
  min r10.w, r10.w, l(1.000000)
  div r11.xy, r10.xyxx, r1.wwww
  add r11.xy, -r11.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  add r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_l r11.xyzw, r11.xyxx, t1.xyzw, s1, l(0.000000)
  mul r11.w, r11.w, cb0[17].w
  mul r10.w, r10.w, r11.w
  mad r12.xyz, r10.xyzx, r4.xyzx, r1.xyzx
  mad r13.xyz, r10.xyzx, r5.xyzx, -r6.xyzx
  sample_l r14.xyzw, r12.xyzx, t2.xyzw, s2, l(0.000000)
  sample_l r15.xyzw, r13.xyzx, t2.xyzw, s2, l(0.000000)
  add r11.w, -r14.x, r15.x
  mad r11.w, r11.w, l(0.500000), r14.x
  mul r12.w, r10.w, r11.w
  mad r10.w, r11.w, r10.w, -cb0[18].x
  mul_sat r10.w, r12.w, r10.w
  mov r8.xyz, r11.xyzx
  mul r11.xyzw, r8.xyzw, r10.wwww
  mov r8.xyz, r12.xzyx
  mov r10.w, l(1.000000)
  mov r12.w, l(0)
  mov r13.w, l(0)
  loop 
    ige r14.x, r13.w, l(3)
    breakc_nz r14.x
    mul r14.x, r12.w, v6.y
    mad r8.xy, r12.wwww, v6.xzxx, r8.xyxx
    mad r8.z, r14.x, l(0.001000), r8.z
    sample_l r14.xyzw, r8.xzyx, t2.xyzw, s2, l(0.000000)
    mad r10.w, -r14.x, r10.w, r10.w
    mad r12.w, cb0[19].w, l(0.333333343), r12.w
    iadd r13.w, r13.w, l(1)
  endloop 
  mul r8.x, r10.w, cb0[18].w
  mul r8.y, r8.x, r8.x
  mul r8.x, r8.y, r8.x
  mad r8.xyz, r8.xxxx, r7.xyzx, cb0[13].xyzx
  mov r12.xyz, r13.xzyx
  mov r12.w, l(1.000000)
  mov r13.w, l(0)
  mov r14.x, l(0)
  loop 
    ige r14.y, r14.x, l(3)
    breakc_nz r14.y
    mul r14.y, r13.w, v6.y
    mad r12.xy, r13.wwww, v6.xzxx, r12.xyxx
    mad r12.z, r14.y, l(0.001000), r12.z
    sample_l r15.xyzw, r12.xzyx, t2.xyzw, s2, l(0.000000)
    mad r12.w, -r15.x, r12.w, r12.w
    mad r13.w, cb0[19].w, l(0.333333343), r13.w
    iadd r14.x, r14.x, l(1)
  endloop 
  mul r12.x, r12.w, cb0[18].w
  mul r12.y, r12.x, r12.x
  mul r12.x, r12.y, r12.x
  mad r12.xyz, r12.xxxx, r7.xyzx, cb0[13].xyzx
  add r12.xyz, -r8.xyzx, r12.xyzx
  mad r8.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r8.xyzx
  mad r8.xyz, r8.xyzx, r5.wwww, r4.wwww
  mul r11.xyz, r8.xyzx, r11.xyzx
  add r8.x, -r9.w, l(1.000000)
  mad_sat r9.xyzw, r11.xyzw, r8.xxxx, r9.xyzw
  iadd r7.w, r7.w, l(1)
  mad r10.xyz, r0.xyzx, cb0[17].zzzz, r10.xyzx
  add r6.w, r6.w, -cb0[17].z
endloop 
mul r9.xyz, r9.xyzx, cb0[6].xyzx
max r0.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r9.xyzx, cb0[7].xyzx
dp3_sat r1.w, r2.yzwy, cb0[15].xyzx
mad r2.y, -cb0[16].x, cb0[16].x, l(1.000000)
dp2 r1.w, r1.wwww, cb0[16].xxxx
mad r1.w, cb0[16].x, cb0[16].x, -r1.w
add r1.w, r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, l(1.500000)
exp r1.w, r1.w
div r1.w, r2.y, r1.w
mul r1.w, r1.w, l(0.0795772821)
mul r2.x, r2.x, r3.x
mul r1.w, r1.w, r2.x
mul r1.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
mul_sat o0.xyz, r0.xyzx, cb0[19].yyyy
mov_sat o0.w, r0.w
ret 
// Approximately 0 instruction slots used