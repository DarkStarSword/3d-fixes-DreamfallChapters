// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2eb5e49bcc35d779-vs.txt
// 3DMigoto: 2eb5e49bcc35d779 |    Unity headers extracted from ScreenDistort.shader
//    Shader "FX/Screen Distort" {
//      Properties {
//       _BumpAmt ("Distortion", Float) = 1.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _InvFade ("Soft Particles Factor", Float) = 1.000000
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+1" "RenderType"="Opaque" }
//        GrabPass {
//          Name "BASE"
//          Tags { "LIGHTMODE"="Always" }
//         }
//        Pass 1/1 {
//          Name "BASE"
//          Tags { "LIGHTMODE"="Always" "QUEUE"="Transparent+1" "RenderType"="Opaque" }
//          GpuProgramID 8938
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 2
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ScreenDistort.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 16 0 0
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 13 3 0 0 2 1 3 4
//   ConstBuffer "$Globals" 160
//   Vector 112 [_BumpMap_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:13:17 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         8  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c11, 1, -1, 0.5, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mul r0, v0.y, c4
    mad r0, c3, v0.x, r0
    mad r0, c5, v0.z, r0
    mad r0, c6, v0.w, r0
    mad r1.xy, r0, c11, r0.w
    mul oT0.xy, r1, c11.z
    mad oT1.xy, v1, c1, c1.zwzw
    mul r1.x, r0.y, c2.x
    mul r1.w, r1.x, c11.z
    mul r1.xz, r0.xyww, c11.z
    add oT2.xy, r1.z, r1.xwzw
    mul r1.x, v0.y, c8.z
    mad r1.x, c7.z, v0.x, r1.x
    mad r1.x, c9.z, v0.z, r1.x
    add r1.x, r1.x, c10.z
    mov oT2.z, -r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT0.zw, r0
    mov oT2.w, r0.w
    mov oT3, v2

// approximately 21 instruction slots used
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2eb5e49bcc35d779-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mad r1.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
mul o1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov o1.zw, r0.zzzw
mov o3.w, r0.w
mad o2.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
mul r0.y, r0.y, cb1[5].x
mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r0.y, l(0.500000)
add o3.xy, r0.zzzz, r0.xwxx
mul r0.x, v0.y, cb2[5].z
mad r0.x, cb2[4].z, v0.x, r0.x
mad r0.x, cb2[6].z, v0.z, r0.x
add r0.x, r0.x, cb2[7].z
mov o3.z, -r0.x
mov o4.xyzw, v2.xyzw
ret 
// Approximately 0 instruction slots used