// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bb3b2c4df0b970f5-vs.txt
// 3DMigoto: bb3b2c4df0b970f5 | Matched 2 variants of 1 shaders: Hidden/TerrainEngine/Details/WavingDoublePass
//
//       Unity headers extracted from atsV2WavingGrass.shader
//       Shader "Hidden/TerrainEngine/Details/WavingDoublePass" {
//         Properties {
//          _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//          _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//          _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//          _Cutoff2 ("Cutoff", Float) = 0.500000
//         }
//         Fallback Off
//         SubShader 1/2 {
//           LOD 200
//           Tags { "QUEUE"="AlphaTest+200" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest+200" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//             ZWrite Off
//             Cull Off
//             Blend One One
//             ColorMask RGB
//             GpuProgramID 66428
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 318
// 2:              GpuProgramIndex 321
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from atsV2WavingGrass.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 55 0 0
// 1:   Keywords { "POINT" "SHADOWS_CUBE" "FOG_EXP2" }
// 2:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "FOG_EXP2" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 15 4 0 0 2 1 1 2 3 4
//      ConstBuffer "$Globals" 288
//      Vector 224 [_WaveAndDistance]
//      Vector 240 [_WavingTint]
//      Vector 256 [_MainTex_ST]
//      ConstBuffer "UnityLighting" 720
//      Vector 16 [_LightPositionRange]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:50:49 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            14         3  ( FLT, FLT, FLT, FLT)
// c4         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c9         cb2            12         7  ( FLT, FLT, FLT, FLT)
// c16        cb3             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c17, 0.0480000004, 0.0599999987, 0.239999995, 0.0960000008
    def c18, 0.0240000002, 0.0799999982, 0.200000003, -0.161616161
    def c19, 1.20000005, 2, 1.60000002, 4.80000019
    def c20, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c21, 0.215387449, 0.358979076, 0.287183255, 0.861549795
    def c22, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c23, -0.5, 0.5, 0, 0
    def c24, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c25, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mul r0, v0.z, c18.xyyz
    mad r0, v0.x, c17, r0
    mov r1.x, c1.x
    mad r0, r1.x, c19, r0
    frc r0, r0
    mad r0, r0, c20.x, c20.y
    mul r1, r0, r0
    mul r2, r0, r1
    mad r0, r2, c18.w, r0
    mul r2, r1, r2
    mul r1, r1, r2
    mad r0, r2, c20.z, r0
    mad r0, r1, c20.w, r0
    mul r0, r0, c21
    mul r0, r0, r0
    dp4 r1.x, r0, c22.xxyz
    mul r1.x, r1.x, c22.w
    mov r2.x, c23.x
    add r1.yzw, r2.x, c2.xxyz
    mad r1.xyz, r1.x, r1.yzww, c23.y
    mul r1.xyz, r1, v7
    add oT3.xyz, r1, r1
    mad oT0.xy, v3, c3, c3.zwzw
    mul r1.x, v2.x, c13.x
    mul r1.y, v2.x, c14.x
    mul r1.z, v2.x, c15.x
    mul r2.x, v2.y, c13.y
    mul r2.y, v2.y, c14.y
    mul r2.z, v2.y, c15.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c13.z
    mul r2.y, v2.z, c14.z
    mul r2.z, v2.z, c15.z
    add r1.xyz, r1, r2
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mov r1.w, v7.w
    mul r1.x, r1.w, v3.y
    mul r1.x, r1.x, c1.z
    mul r0, r0, r1.x
    dp4 r1.x, r0, c25
    dp4 r0.x, r0, c24
    mul r0.yz, r1.x, c15.xxzw
    mad r0.xy, c13.xzzw, r0.x, r0.yzzw
    add r0.xy, -r0, v0.xzzw
    mul r1.xyz, v0.y, c10
    mad r1.xyz, c9, r0.x, r1
    mad r1.xyz, c11, r0.y, r1
    mad r1.xyz, c12, v0.w, r1
    add oT4.xyz, r1, -c4
    mov oT2.xyz, r1
    mul r1, v0.y, c6
    mad r1, c5, r0.x, r1
    mad r0, c7, r0.y, r1
    add r0, r0, c8
    mul r1.x, r0.z, c16.x
    mul r1.x, r1.x, -r1.x
    exp oT0.z, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT3.w, v7.w

// approximately 62 instruction slots used
vs_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[2], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.zzzz, l(0.024000, 0.080000, 0.080000, 0.200000)
mad r0.xyzw, v0.xxxx, l(0.048000, 0.060000, 0.240000, 0.096000), r0.xyzw
mad r0.xyzw, cb0[14].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r1.xyzw, r0.xyzw, r0.xyzw
mul r2.xyzw, r0.xyzw, r1.xyzw
mad r0.xyzw, r2.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r0.xyzw
mul r2.xyzw, r1.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
mad r0.xyzw, r2.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r0.xyzw
mad r0.xyzw, r1.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r0.xyzw
mul r0.xyzw, r0.xyzw, l(0.215387449, 0.358979076, 0.287183255, 0.861549795)
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r1.x, v3.y, v7.w
mul r1.x, r1.x, cb0[14].z
mul r1.xyzw, r0.xyzw, r1.xxxx
dp4 r0.x, r0.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.x, r0.x, l(0.700000)
dp4 r0.y, r1.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
dp4 r0.z, r1.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
mul r0.yw, r0.yyyy, cb2[18].xxxz
mad r0.yz, cb2[16].xxzx, r0.zzzz, r0.yywy
add r0.yz, -r0.yyzy, v0.xxzx
mul r1.xyzw, v0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.yyyy, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bb3b2c4df0b970f5-vs.txt
ne r3.w, r1.w, l(1.0)
if_nz r3.w
  add r3.w, r1.w, -r3.y
  mad r1.x, r3.w, r3.x, r1.x
endif

mul r0.w, r1.z, cb3[1].x
mul r0.w, r0.w, -r0.w
exp o1.z, r0.w
mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
mul r1.x, v2.x, cb2[16].x
mul r1.y, v2.x, cb2[17].x
mul r1.z, v2.x, cb2[18].x
mul r2.x, v2.y, cb2[16].y
mul r2.y, v2.y, cb2[17].y
mul r2.z, v2.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb2[16].z
mul r2.y, v2.z, cb2[17].z
mul r2.z, v2.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.xyzx
mul r1.xyz, v0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, r0.yyyy, r1.xyzx
mad r0.yzw, cb2[14].xxyz, r0.zzzz, r1.xxyz
mad r0.yzw, cb2[15].xxyz, v0.wwww, r0.yyzw
mov o3.xyz, r0.yzwy
add o5.xyz, r0.yzwy, -cb1[1].xyzx
add r0.yzw, cb0[15].xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
mad r0.xyz, r0.xxxx, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.xyzx, v7.xyzx
add o4.xyz, r0.xyzx, r0.xyzx
mov o4.w, v7.w
ret 
// Approximately 0 instruction slots used