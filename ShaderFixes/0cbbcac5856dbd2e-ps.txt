// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0cbbcac5856dbd2e-ps.txt
// 3DMigoto: 0cbbcac5856dbd2e | Matched 2 variants of 2 shaders: Hidden/FogVolume_Rotation, Hidden/FogVolume_Rotation_SHADE
//
// 1:    Unity headers extracted from FogVolume_Rotation.shader
// 2:    Unity headers extracted from FogVolume_Rotation_SHADE.shader
// 1:    Shader "Hidden/FogVolume_Rotation" {
// 2:    Shader "Hidden/FogVolume_Rotation_SHADE" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//           Pass 1/1 {
//             Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//             ZTest Always
//             ZWrite Off
//             Cull Front
//             Blend SrcAlpha OneMinusSrcAlpha
// 2:          GpuProgramID 57605
// 1:          GpuProgramID 59518
//             Program "fp" {
//               SubProgram "d3d11 " {
// 2:              GpuProgramIndex 127
// 1:              GpuProgramIndex 255
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from FogVolume_Rotation.shader.decompressed:
// 2: Unity 5.3 headers extracted from FogVolume_Rotation_SHADE.shader.decompressed:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201510240 155 1 3
// 2:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 1:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
//      undeciphered2: 1 3 3 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 336
//      Vector 96 [_Color]
//      Vector 112 [_InscatteringColor]
//      Vector 128 [_BoxMin]
//      Vector 144 [_BoxMax]
//      Vector 160 [Speed]
//      Vector 176 [Stretch]
//      Vector 208 [_ShadowColor]
//      Vector 240 [L] 3
//      Float 252 [_InscatteringIntensity]
//      Float 256 [InscatteringShape]
//      Float 260 [_Visibility]
//      Float 264 [InscatteringStartDistance]
//      Float 272 [InscatteringTransitionWideness]
//      Float 276 [_3DNoiseScale]
//      Float 280 [_RayStep]
//      Float 284 [gain]
//      Float 288 [threshold]
//      Float 292 [SwirlAdjust]
//      Float 296 [Shade]
//      Float 300 [_SceneIntersectionThreshold]
//      Float 304 [ShadowBrightness]
//      Float 308 [SlyCollision]
//      Float 312 [Exposure]
//      Float 316 [FadeDistance]
//      Float 320 [ShadowShift]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 192 [unity_ObjectToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_Gradient] 2D 1
//      SetTexture 2 [_NoiseVolume] 3D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:57:10 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0cbbcac5856dbd2e-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
add r2.xyz, -v5.xyzx, cb0[8].xyzx
div r2.xyz, r2.xyzx, r0.xyzx
add r3.xyz, -v5.xyzx, cb0[9].xyzx
div r3.xyz, r3.xzyx, r0.xzyx
mov r2.w, r3.x
movc r1.xw, r1.xxxx, r2.xxxw, r2.wwwx
mov r3.xw, r2.zzzy
movc r2.xy, r1.yyyy, r3.wzww, r3.zwzz
lt r0.w, r1.x, r2.x
movc r0.w, r0.w, r2.x, r1.x
lt r1.x, r2.y, r1.w
movc r1.x, r1.x, r2.y, r1.w
movc r1.yz, r1.zzzz, r3.xxyx, r3.yyxy
lt r1.w, r0.w, r1.y
movc r0.w, r1.w, r1.y, r0.w
lt r1.y, r1.z, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.yzw, |v5.xxyz|, -cb0[9].xxyz
ge r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.yzw, r1.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.y, r1.z, r1.y
add r1.y, r1.w, r1.y
min r1.y, r1.y, l(1.000000)
mul r0.w, r0.w, r1.y
div r1.yz, v2.xxyx, v2.wwww
sample r2.xyzw, r1.yzyy, t0.xyzw, s0
mad r1.w, cb1[7].z, r2.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.x, r2.x, v4.z
div r1.w, r1.w, r2.x
max r2.x, r1.x, r0.w
min r2.y, r1.x, r0.w
min r2.xy, |r1.wwww|, r2.xyxx
add r2.x, -r2.y, r2.x
div r2.x, r2.x, cb0[16].y
exp r2.x, -r2.x
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
add r2.yzw, v1.xxyz, -r18.xxyz
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r2.yzw, r2.yyzw, r3.xxxx
div r3.x, |r1.w|, cb0[17].x
add_sat r3.x, r3.x, -cb0[16].z
mad r3.yzw, r0.xxyz, r0.wwww, v5.xxyz
mad r0.xyz, r0.xyzx, r1.xxxx, v5.xyzx
add r0.xyz, -r3.yzwy, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
dp2 r1.x, r1.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r1.x, null, r1.x
mul r1.x, r1.x, l(43758.546875)
frc r1.x, r1.x
add r1.x, -r1.x, l(-1.000000)
mad r1.x, cb0[19].y, r1.x, l(1.000000)
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
add r1.xyz, -r3.yzwy, v5.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r1.x, |r1.w|
div r1.x, r1.x, cb0[18].w
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
add r1.x, cb0[8].y, -cb0[9].y
mul r4.xyzw, cb0[10].xyzw, cb1[0].xxxx
mul r1.yzw, cb0[11].xxyz, cb0[17].yyyy
mul r5.xyz, r4.yzwy, l(0.800000, 0.800000, 0.800000, 0.000000)
add r6.xyz, -cb0[13].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r5.w, -cb0[18].z, l(1.000000)
add r6.w, -r5.w, l(1.000000)
mov r7.w, l(1.000000)
mov r9.w, r0.w
mov r9.xyz, r3.yzwy
mov r8.xyzw, l(0,0,0,0)
mov r10.x, l(0)
loop 
  ilt r10.y, r10.x, l(50)
  lt r10.z, l(0.000000), r9.w
  and r10.y, r10.z, r10.y
  breakc_z r10.y
  dp3 r11.x, r9.xyzx, cb2[12].xyzx
  dp3 r11.y, r9.xyzx, cb2[13].xyzx
  dp3 r11.z, r9.xyzx, cb2[14].xyzx
  dp3 r10.y, r11.xyzx, r11.xyzx
  sqrt r10.y, r10.y
  div r10.y, r10.y, cb0[19].w
  mul r10.y, r10.y, l(-1.442695)
  exp r10.y, r10.y
  min r10.y, r10.y, l(1.000000)
  div r10.zw, r9.xxxy, r1.xxxx
  add r10.zw, -r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  add r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l r11.xyzw, r10.zwzz, t1.xyzw, s1, l(0.000000)
  mul r10.z, r11.w, cb0[17].w
  mul r10.y, r10.y, r10.z
  mul r10.z, r10.y, cb0[18].y
  mad r10.w, cb0[10].x, cb1[0].x, r10.z
  sincos r12.x, r13.x, r10.w
  mov r13.yz, r12.xxxx
  mad r12.xyz, r13.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r12.xyz, r12.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r10.z, r4.x, l(1.200000), r10.z
  sincos r13.x, r14.x, r10.z
  mov r14.yz, r13.xxxx
  mad r13.xyz, r14.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r14.xyz, r9.xyzx, r1.yzwy, r4.yzwy
  dp2 r15.x, r14.xyxx, r12.xzxx
  dp2 r15.y, r14.yxyy, r12.xyxx
  mad r12.xyz, r9.xyzx, r1.yzwy, r5.xyzx
  dp2 r16.x, r12.xyxx, r13.xzxx
  dp2 r16.y, r12.yxyy, r13.xyxx
  mov r15.z, r14.z
  sample_l r13.xyzw, r15.xyzx, t2.xyzw, s2, l(1.000000)
  mov r16.z, r12.z
  sample_l r12.xyzw, r16.xyzx, t2.xyzw, s2, l(0.000000)
  add r10.z, -r13.x, r12.x
  mad r10.z, r10.z, l(0.500000), r13.x
  mul r10.w, r10.y, r10.z
  mad r10.y, r10.z, r10.y, -cb0[18].x
  mul_sat r10.y, r10.w, r10.y
  mov r7.xyz, r11.xyzx
  mul r11.xyzw, r7.xyzw, r10.yyyy
  mov r7.xyz, r15.xzyx
  mov r10.yzw, l(0,1.000000,0,0)
  loop 
    ige r12.x, r10.w, l(3)
    breakc_nz r12.x
    mul r12.x, r10.z, v6.y
    mad r7.xy, r10.zzzz, v6.xzxx, r7.xyxx
    mad r7.z, r12.x, l(0.001000), r7.z
    sample_l r12.xyzw, r7.xzyx, t2.xyzw, s2, l(0.000000)
    mad r10.y, -r12.x, r10.y, r10.y
    mad r10.z, cb0[20].x, l(0.333333343), r10.z
    iadd r10.w, r10.w, l(1)
  endloop 
  mul r7.x, r10.y, cb0[19].x
  mul r7.y, r7.x, r7.x
  mul r7.x, r7.y, r7.x
  mad r7.xyz, r7.xxxx, r6.xyzx, cb0[13].xyzx
  mov r12.xyz, r16.xzyx
  mov r10.zw, l(0,0,1.000000,0)
  mov r12.w, l(0)
  loop 
    ige r13.x, r12.w, l(3)
    breakc_nz r13.x
    mul r13.x, r10.w, v6.y
    mad r12.xy, r10.wwww, v6.xzxx, r12.xyxx
    mad r12.z, r13.x, l(0.001000), r12.z
    sample_l r13.xyzw, r12.xzyx, t2.xyzw, s2, l(0.000000)
    mad r10.z, -r13.x, r10.z, r10.z
    mad r10.w, cb0[20].x, l(0.333333343), r10.w
    iadd r12.w, r12.w, l(1)
  endloop 
  mul r10.w, r10.z, cb0[19].x
  mul r12.x, r10.w, r10.w
  mul r10.w, r10.w, r12.x
  mad r12.xyz, r10.wwww, r6.xyzx, cb0[13].xyzx
  add r12.xyz, -r7.xyzx, r12.xyzx
  mad r7.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r7.xyzx
  mad r7.xyz, r7.xyzx, r6.wwww, r5.wwww
  mul r11.xyz, r7.xyzx, r11.xyzx
  add r7.x, -r8.w, l(1.000000)
  mad_sat r8.xyzw, r11.xyzw, r7.xxxx, r8.xyzw
  iadd r10.x, r10.x, l(1)
  mad r9.xyz, r0.xyzx, cb0[17].zzzz, r9.xyzx
  add r9.w, r9.w, -cb0[17].z
endloop 
mul r0.xyz, r8.xyzx, cb0[6].xyzx
mul r1.xyz, r0.xyzx, r0.xyzx
dp3_sat r0.w, r2.yzwy, cb0[15].xyzx
mad r1.w, -cb0[16].x, cb0[16].x, l(1.000000)
dp2 r0.w, r0.wwww, cb0[16].xxxx
mad r0.w, cb0[16].x, cb0[16].x, -r0.w
add r0.w, r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, l(1.500000)
exp r0.w, r0.w
div r0.w, r1.w, r0.w
mul r0.w, r0.w, l(0.0795772821)
mul r1.w, r2.x, r3.x
mul r0.w, r0.w, r1.w
mul r1.xyz, r1.xyzx, cb0[7].xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mul r8.xyz, r0.xyzx, cb0[19].zzzz
mov_sat o0.xyzw, r8.xyzw
ret 
// Approximately 0 instruction slots used