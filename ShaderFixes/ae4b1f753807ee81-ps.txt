// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ae4b1f753807ee81-ps.txt
// 3DMigoto: ae4b1f753807ee81 |    Unity headers extracted from Standard_Sparkle.shader
//    Shader "Dreamfall/Unity5/Standard_Sparkle" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectColor ("Reflect Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _EmissiveColor ("Emissive Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Fresnel ("Fresnel", Float) = 1.000000
//       _DetailMulti ("Detail Strength", Float) = 1.000000
//       _EmissiveStrength ("Emissionstrength", Float) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DetailBumpMap ("DetailMap", 2D) = "bump" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _SparkleMap1 ("Sparkle 1", 2D) = "black" { }
//       _SparkleMap2 ("Sparkle 2", 2D) = "black" { }
//       _TileFactor ("Tile Factor", Float) = 1.000000
//       _Effect1UvX ("Effect 1 UV X speed", Float) = 1.000000
//       _Effect1UvY ("Effect 1 UV Y speed", Float) = 1.000000
//       _Effect2UvX ("Effect 2 UV X speed", Float) = 1.000000
//       _Effect2UvY ("Effect 2 UV Y speed", Float) = 1.000000
//       _MasterSpeed ("Master Speed", Float) = 1.000000
//       _SparkleCutoff ("Sparkle Cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 111668
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 273
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Sparkle.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 159 12 0
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 9 4 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 352
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 192 [_AlphaFactor]
//   Float 196 [_glossHigh]
//   Float 200 [_glossLow]
//   Float 204 [_MetalNess]
//   Float 208 [_MetalNessAlphaFactor]
//   Vector 224 [_Color]
//   Vector 256 [_EmissiveColor]
//   Float 272 [_EmissiveStrength]
//   Float 276 [_Fresnel]
//   Float 280 [_DetailMulti]
//   Float 284 [_TileFactor]
//   Float 288 [_Effect1UvX]
//   Float 292 [_Effect1UvY]
//   Float 296 [_Effect2UvX]
//   Float 300 [_Effect2UvY]
//   Float 304 [_MasterSpeed]
//   Float 308 [_SparkleCutoff]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_SparkleMap1] 2D 6
//   SetTexture 2 [_SparkleMap2] 2D 7
//   SetTexture 3 [_BumpMap] 2D 4
//   SetTexture 4 [_DetailBumpMap] 2D 5
//   SetTexture 5 [_Cube] CUBE 8
//   SetTexture 6 [_LightTextureB0] 2D 2
//   SetTexture 7 [_LightTexture0] CUBE 1
//   SetTexture 8 [_ShadowMapTexture] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Feb 07 09:11:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ae4b1f753807ee81-ps.txt
mov r9.xyzw, cb1[4].xyzw
mov r10.xyzw, l(0)
mul r10.x, -r8.x, r8.y
mul r12.xyzw, cb10[0].xyzw, r10.xxxx
mad r12.xyzw, cb10[1].xyzw, r10.yyyy, r12.xyzw
mad r12.xyzw, cb10[2].xyzw, r10.zzzz, r12.xyzw
mad r12.xyzw, cb10[3].xyzw, r10.wwww, r12.xyzw
mul r11.xyzw, cb11[12].xyzw, r12.xxxx
mad r11.xyzw, cb11[13].xyzw, r12.yyyy, r11.xyzw
mad r11.xyzw, cb11[14].xyzw, r12.zzzz, r11.xyzw
mad r11.xyzw, cb11[15].xyzw, r12.wwww, r11.xyzw
add r9.xyz, r9.xyz, -r11.xyz

dp3 r0.x, v6.xyzx, v6.xyzx
sqrt r0.x, r0.x
mul r0.x, r0.x, cb2[1].w
mul r0.x, r0.x, l(0.970000)
add r0.yzw, v6.xxyz, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
sample r1.xyzw, r0.yzwy, t8.xyzw, s0
add r0.yzw, v6.xxyz, l(0.000000, -0.00781250000, -0.00781250000, 0.00781250000)
sample r2.xyzw, r0.yzwy, t8.xyzw, s0
mov r1.y, r2.x
add r0.yzw, v6.xxyz, l(0.000000, -0.00781250000, 0.00781250000, -0.00781250000)
sample r2.xyzw, r0.yzwy, t8.xyzw, s0
mov r1.z, r2.x
add r0.yzw, v6.xxyz, l(0.000000, 0.00781250000, -0.00781250000, -0.00781250000)
sample r2.xyzw, r0.yzwy, t8.xyzw, s0
mov r1.w, r2.x
lt r0.xyzw, r1.xyzw, r0.xxxx
movc r0.xyzw, r0.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
mul r0.yzw, v5.yyyy, cb0[9].xxyz
mad r0.yzw, cb0[8].xxyz, v5.xxxx, r0.yyzw
mad r0.yzw, cb0[10].xxyz, v5.zzzz, r0.yyzw
add r0.yzw, r0.yyzw, cb0[11].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
sample r2.xyzw, r0.yzwy, t7.xyzw, s1
sample r1.xyzw, r1.xxxx, t6.xyzw, s2
mul r0.y, r2.w, r1.x
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, cb0[6].xyzx
mul r1.xyzw, cb0[18].xyzw, cb1[0].xxxx
mad r1.xyzw, r1.xyzw, cb0[19].xxxx, v1.xyxy
mul r1.xyzw, r1.xyzw, cb0[17].wwww
sample r2.xyzw, r1.xyxx, t1.xyzw, s6
sample r1.xyzw, r1.zwzz, t2.xyzw, s7
add r0.w, r1.x, r2.x
mad_sat r0.w, r0.w, l(0.500000), -cb0[19].y
mul r1.xyz, r0.wwww, cb0[16].xyzx
mul r1.xyz, r1.xyzx, cb0[17].xxxx
sample r2.xyzw, v1.zwzz, t4.xyzw, s5
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
sample r3.xyzw, v1.xyxx, t3.xyzw, s4
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
max r3.xyz, r3.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mad r2.xyz, r2.xyzx, cb0[17].zzzz, r3.xyzx
add r0.w, cb0[17].z, l(1.000000)
div r2.xyz, r2.xyzx, r0.wwww
dp3 r4.x, v2.xyzx, r2.xyzx
dp3 r4.y, v3.xyzx, r2.xyzx
dp3 r4.z, v4.xyzx, r2.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, -r2.xyzx, r4.xyzx
add r0.w, r0.w, r0.w
mad r4.xyz, r4.xyzx, -r0.wwww, -r2.xyzx
sample r4.xyzw, r4.xyzx, t5.xyzw, s8
mul r4.xyz, r1.xyzx, r4.xyzx
mul r5.xyz, r2.yyyy, v3.xyzx
mad r5.xyz, v2.xyzx, r2.xxxx, r5.xyzx
mad r5.xyz, v4.xyzx, r2.zzzz, r5.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r0.w, r5.xyzx, r3.xyzx
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
max r1.w, cb0[17].y, l(0.100000)
min r1.w, r1.w, l(32.000000)
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
sample r5.xyzw, v1.xyxx, t0.xyzw, s3
mul r6.xyzw, r5.xyzw, cb0[14].xyzw
mad r4.xyz, r4.xyzx, r0.wwww, r6.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r4.xyzx
add r4.xyz, r1.xyzx, -cb0[2].xyzx
add r5.xy, r6.wyww, r6.wxww
max r0.w, r6.w, cb0[12].x
max r1.w, r5.x, cb0[13].x
mad r2.w, r5.z, cb0[14].z, r5.y
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[12].w
mad r4.xyz, r1.wwww, r4.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r3.w, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[12].y
mad r2.w, cb0[12].z, r2.w, r3.w
mad r0.w, -r2.w, r0.w, l(1.000000)
add r2.w, -r0.w, l(1.000000)
mad r2.w, r2.w, l(0.968000), l(0.030000)
log r2.w, r2.w
div r2.w, l(10.000000), r2.w
mad r3.w, r2.w, r2.w, l(2.000000)
mul r2.w, r2.w, r2.w
mul r3.w, r3.w, l(0.159154937)
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
dp3 r3.x, r5.xyzx, r5.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r5.xyzx
add r6.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mad r7.xyz, r6.xyzx, r4.wwww, r2.xyzx
dp3 r2.x, r3.xyzx, r2.xyzx
mul r6.xyz, r4.wwww, r6.xyzx
dp3 r2.y, r7.xyzx, r7.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.001000, 0.000000, 0.000000)
rsq r2.y, r2.y
mul r7.xyz, r2.yyyy, r7.xyzx
dp3 r2.y, r3.xyzx, r7.xyzx
dp3 r2.z, r6.xyzx, r7.xyzx
dp3 r3.x, r5.xyzx, r6.xyzx
max r3.x, r3.x, l(0.000000)
max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.y, r2.y
mul r2.y, r2.y, r2.w
exp r2.y, r2.y
mul r2.y, r3.w, r2.y
mul r2.w, r0.w, r0.w
mul r3.y, r2.w, l(0.797884583)
mad r2.w, -r2.w, l(0.797884583), l(1.000000)
mad r3.z, r2.x, r2.w, r3.y
add r2.x, -r2.x, l(1.000000)
mad r2.w, r3.x, r2.w, r3.y
mad r2.w, r2.w, r3.z, l(0.000010)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul r2.y, r2.y, r2.w
mul r2.y, r2.y, l(0.785398185)
max r2.w, r2.y, l(0.000100)
sqrt r2.w, r2.w
eq r3.y, cb0[3].w, l(0.000000)
movc r2.y, r3.y, r2.w, r2.y
mul r2.y, r3.x, r2.y
max r2.y, r2.y, l(0.000000)
mul r1.w, r1.w, r2.y
mul r3.yzw, r0.xxyz, r1.wwww
add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, -r2.z, l(1.000000)
mul r2.y, r2.z, r2.z
dp2 r0.w, r2.yyyy, r0.wwww
add r0.w, r0.w, l(-0.500000)
mul r2.y, r1.w, r1.w
mul r2.y, r2.y, r2.y
mul r1.w, r1.w, r2.y
mad r2.yzw, r5.xxyz, r1.wwww, r4.xxyz
mul r2.yzw, r2.yyzw, r3.yyzw
mul r1.w, r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r2.x, r1.w
mad r1.w, r0.w, r1.w, l(1.000000)
add r2.x, -r3.x, l(1.000000)
mul r3.y, r2.x, r2.x
mul r3.y, r3.y, r3.y
mul r2.x, r2.x, r3.y
mad r0.w, r0.w, r2.x, l(1.000000)
mul r0.w, r1.w, r0.w
mul r0.w, r3.x, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used