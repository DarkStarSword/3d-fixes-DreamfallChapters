// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e50ad65f0d224f40-vs.txt
// 3DMigoto: e50ad65f0d224f40 |    Unity headers extracted from SpeedTreeBillboard.shader
//    Shader "Nature/SpeedTree Billboard" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          GpuProgramID 520081
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 3043
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 82 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 160
//   Vector 144 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 32 [unity_4LightPosX0]
//   Vector 48 [unity_4LightPosY0]
//   Vector 64 [unity_4LightPosZ0]
//   Vector 80 [unity_4LightAtten0]
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 0 [unity_BillboardNormal] 3
//   Vector 16 [unity_BillboardTangent] 3
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityBillboardPerCamera" 5
//   BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 07:01:36 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 6      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb6             0        18  ( FLT, FLT, FLT, FLT)
// c19        cb0             9         1  ( FLT, FLT, FLT, FLT)
// c20        cb1             5         1  ( FLT, FLT, FLT, FLT)
// c21        cb2             2         8  ( FLT, FLT, FLT, FLT)
// c29        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c36        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c40        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c47        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c48        cb5             0         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c18                             Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c51, -0.5, 0.5, 0, 1
    def c52, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    add r0.x, v2.z, c50.w
    mov r0.yzw, c51
    mad r0.x, r0.x, c0.y, r0.y
    frc r0.y, r0.x
    add r0.x, -r0.y, r0.x
    rcp r0.y, c0.x
    mul r0.x, r0.y, r0.x
    abs r0.y, r0.x
    sge r0.x, r0.x, -r0.x
    frc r0.y, r0.y
    lrp r1.x, r0.x, r0.y, -r0.y
    mul r0.x, r1.x, c0.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mova a0.x, r0.x
    mad r0.xy, c2[a0.x].zwzw, -v1.yxzw, c2[a0.x]
    mad r1.xy, c2[a0.x].zwzw, v1, c2[a0.x]
    slt r0.z, c2[a0.x].w, r0.z
    add r0.xy, r0, -r1
    mad oT3.xy, r0.z, r0, r1
    mov r0.xyz, c48
    mul r1.x, r0.x, c44.x
    mul r1.y, r0.x, c45.x
    mul r1.z, r0.x, c46.x
    mul r2.x, r0.y, c44.y
    mul r2.y, r0.y, c45.y
    mul r2.z, r0.y, c46.y
    add r1.xyz, r1, r2
    mul r2.x, r0.z, c44.z
    mul r2.y, r0.z, c45.z
    mul r2.z, r0.z, c46.z
    add r0.xyz, r1, r2
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c32, r2
    dp4 r3.y, c33, r2
    dp4 r3.z, c34, r2
    mad r0.xyz, c35, r0.x, r3
    mov r1.w, c51.w
    dp4 r2.x, c29, r1
    dp4 r2.y, c30, r1
    dp4 r2.z, c31, r1
    add r0.xyz, r0, r2
    max r2.xyz, r0, c51.z
    mov r2.w, c52.x
    lit r3, r2.xxww
    mov r0.x, r3.z
    lit r3, r2.yyww
    lit r2, r2.zzww
    mov r0.z, r2.z
    mov r0.y, r3.z
    mad r0.xyz, r0, c52.y, c52.z
    max r0.xyz, r0, c51.z
    add r1.w, v1.x, c51.x
    mul r1.w, r1.w, c1.x
    mul r1.w, r1.w, v2.x
    mul r2.xyz, r1.w, c49
    mad r1.w, v1.y, c1.y, c1.z
    mad r2.w, r1.w, v2.y, r2.y
    add r2.xyz, r2.xwzw, v0
    mul r3.xyz, r2.y, c41
    mad r3.xyz, c40, r2.x, r3
    mad r3.xyz, c42, r2.z, r3
    add r3.xyz, r3, c43
    add r4, -r3.y, c22
    mul r5, r1.y, r4
    mul r4, r4, r4
    add r6, -r3.x, c21
    mad r5, r6, r1.x, r5
    mad r4, r6, r6, r4
    add r6, -r3.z, c23
    mov oT1.xyz, r3
    mad r3, r6, r1.z, r5
    mov oT0.xyz, r1
    mad r1, r6, r6, r4
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mad r1, r1, c24, r0.w
    mul r3, r3, r4
    max r3, r3, c51.z
    rcp r4.x, r1.x
    rcp r4.y, r1.y
    rcp r4.z, r1.z
    rcp r4.w, r1.w
    mul r1, r3, r4
    mul r3.xyz, r1.y, c26
    mad r3.xyz, c25, r1.x, r3
    mad r1.xyz, c27, r1.z, r3
    mad r1.xyz, c28, r1.w, r1
    add oT4.xyz, r0, r1
    mul r0, r2.y, c37
    mad r0, c36, r2.x, r0
    mad r0, c38, r2.z, r0
    add r0, r0, c39
    mul r1.x, r0.y, c20.x
    mul r1.w, r1.x, c51.y
    mul r1.xz, r0.xyww, c51.y
    add oT5.xy, r1.z, r1.xwzw
    mul r1.x, r0.z, c47.y
    exp oT0.w, -r1.x
    mad oPos.xy, r0.w, c18, r0
    mov oPos.zw, r0
    mov oT5.zw, r0
    mov oT2, c19
    mov oT3.z, c51.z

// approximately 111 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, v1.x, l(-0.500000)
mul r0.x, r0.x, cb6[1].x
mul r0.x, r0.x, v2.x
mul r0.xyz, r0.xxxx, cb5[1].xyzx
mad r1.x, v1.y, cb6[1].y, cb6[1].z
mad r0.w, r1.x, v2.y, r0.y
add r0.xyz, r0.xwzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e50ad65f0d224f40-vs.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mul r0.w, r1.z, cb4[1].y
exp o1.w, -r0.w
mul r2.x, cb3[16].x, cb5[0].x
mul r2.y, cb3[17].x, cb5[0].x
mul r2.z, cb3[18].x, cb5[0].x
mul r3.x, cb3[16].y, cb5[0].y
mul r3.y, cb3[17].y, cb5[0].y
mul r3.z, cb3[18].y, cb5[0].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, cb3[16].z, cb5[0].z
mul r3.y, cb3[17].z, cb5[0].z
mul r3.z, cb3[18].z, cb5[0].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mov o1.xyz, r2.xyzx
mul r3.xyz, r0.yyyy, cb3[13].xyzx
mad r0.xyw, cb3[12].xyxz, r0.xxxx, r3.xyxz
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb3[15].xyzx
mov o2.xyz, r0.xyzx
mov o3.xyzw, cb0[9].xyzw
add r0.w, v2.z, cb5[2].w
mad r0.w, r0.w, cb6[0].y, l(0.500000)
round_ni r0.w, r0.w
div r0.w, r0.w, cb6[0].x
ge r3.x, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r3.x, r0.w, -r0.w
mul r0.w, r0.w, cb6[0].x
ftou r0.w, r0.w
lt r3.x, cb6[r0.w + 2].w, l(0.000000)
mad r3.yz, -cb6[r0.w + 2].zzwz, v1.yyxy, cb6[r0.w + 2].xxyx
mad r4.xy, cb6[r0.w + 2].zwzz, v1.xyxx, cb6[r0.w + 2].xyxx
movc o4.xy, r3.xxxx, r3.yzyy, r4.xyxx
mov o4.z, l(0)
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r3.xyz, cb2[44].xyzx, r0.wwww, r4.xyzx
mov r2.w, l(1.000000)
dp4 r4.x, cb2[38].xyzw, r2.xyzw
dp4 r4.y, cb2[39].xyzw, r2.xyzw
dp4 r4.z, cb2[40].xyzw, r2.xyzw
add r3.xyz, r3.xyzx, r4.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.xyzw, -r0.yyyy, cb2[3].xyzw
mul r5.xyzw, r2.yyyy, r4.xyzw
mul r4.xyzw, r4.xyzw, r4.xyzw
add r6.xyzw, -r0.xxxx, cb2[2].xyzw
add r0.xyzw, -r0.zzzz, cb2[4].xyzw
mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
mad r2.xyzw, r0.xyzw, r2.zzzz, r5.xyzw
mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
rsq r4.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r0.xyzw, r2.xyzw
mul r2.xyz, r0.yyyy, cb2[7].xyzx
mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
add o5.xyz, r3.xyzx, r0.xyzx
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used