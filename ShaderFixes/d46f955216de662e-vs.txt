// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d46f955216de662e-vs.txt
// 3DMigoto: d46f955216de662e |    Unity headers extracted from SpeedTreeBillboard.shader
//    Shader "Nature/SpeedTree Billboard" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 6/6 {
//          Tags { "LIGHTMODE"="Vertex" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          GpuProgramID 794840
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 2708
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 47 0 1
//   Keywords { "FOG_EXP" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 128
//   Vector 112 [_Color]
//   ConstBuffer "UnityLighting" 720
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 0 [unity_BillboardNormal] 3
//   Vector 16 [unity_BillboardTangent] 3
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityBillboardPerCamera" 5
//   BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:54:57 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb6             0        18  ( FLT, FLT, FLT, FLT)
// c19        cb0             7         1  ( FLT, FLT, FLT, FLT)
// c20        cb1             6         2  ( FLT, FLT, FLT, FLT)
// c22        cb1            14         2  ( FLT, FLT, FLT, FLT)
// c24        cb1            22         2  ( FLT, FLT, FLT, FLT)
// c26        cb2             0        11  ( FLT, FLT, FLT, FLT)
// c37        cb3             0         1  ( FLT, FLT, FLT, FLT)
// c38        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c39        cb5             0         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c18                             Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c42, -0.5, 0.5, 0, 1
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    add r0.x, v2.z, c41.w
    mov r0.yzw, c42
    mad r0.x, r0.x, c0.y, r0.y
    frc r0.y, r0.x
    add r0.x, -r0.y, r0.x
    rcp r0.y, c0.x
    mul r0.x, r0.y, r0.x
    abs r0.y, r0.x
    sge r0.x, r0.x, -r0.x
    frc r0.y, r0.y
    lrp r1.x, r0.x, r0.y, -r0.y
    mul r0.x, r1.x, c0.x
    frc r0.y, r0.x
    add r0.x, r0.x, -r0.y
    mova a0.x, r0.x
    mad r0.xy, c2[a0.x].wzzw, -v1, c2[a0.x].yxzw
    mad r1.xy, c2[a0.x].wzzw, v1.yxzw, c2[a0.x].yxzw
    slt r0.z, c2[a0.x].w, r0.z
    add r0.xy, r0, -r1
    mad oT0.zw, r0.z, r0.xyxy, r1.xyxy
    add r0.x, v1.x, c42.x
    mul r0.x, r0.x, c1.x
    mul r0.x, r0.x, v2.x
    mul r1.xyz, r0.x, c40
    mad r0.x, v1.y, c1.y, c1.z
    mad r1.w, r0.x, v2.y, r1.y
    add r0.xyz, r1.xwzw, v0
    mul r1.xyz, r0.y, c31
    mad r1.xyz, c30, r0.x, r1
    mad r1.xyz, c32, r0.z, r1
    add r1.xyz, r1, c33
    mad r2.xyz, r1, -c22.w, c22
    mad r1.xyz, r1, -c23.w, c23
    dp3 r1.w, r2, r2
    rsq r2.w, r1.w
    mad r1.w, r1.w, c24.z, r0.w
    rcp r1.w, r1.w
    mul r2.xyz, r2.w, r2
    mov r3.xyz, c39
    mul r4.xyz, r3.y, c35
    mad r3.xyw, c34.xyzz, r3.x, r4.xyzz
    mad r3.xyz, c36, r3.z, r3.xyww
    nrm r4.xyz, r3
    dp3 r2.x, r4, r2
    max r2.x, r2.x, c42.z
    mul r1.w, r1.w, r2.x
    add r2.xyz, c37, c37
    mad r2.xyz, c20, r1.w, r2
    dp3 r1.w, r1, r1
    rsq r2.w, r1.w
    mad r0.w, r1.w, c25.z, r0.w
    rcp r0.w, r0.w
    mul r1.xyz, r1, r2.w
    dp3 r1.x, r4, r1
    max r1.x, r1.x, c42.z
    mul r0.w, r0.w, r1.x
    mad r1.xyz, c21, r0.w, r2
    mul oT1.xyz, r1, c19
    mul r1, r0.y, c27
    mad r1, c26, r0.x, r1
    mad r0, c28, r0.z, r1
    add r0, r0, c29
    mul r1.x, r0.z, c38.y
    exp oT0.x, -r1.x
    mad oPos.xy, r0.w, c18, r0
    mov oPos.zw, r0
    mov oT0.y, c42.z
    mov oT1.w, c19.w

// approximately 70 instruction slots used
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[25], dynamicIndexed
dcl_constantbuffer cb2[11], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, v1.x, l(-0.500000)
mul r0.x, r0.x, cb6[1].x
mul r0.x, r0.x, v2.x
mul r0.xyz, r0.xxxx, cb5[1].xyzx
mad r1.x, v1.y, cb6[1].y, cb6[1].z
mad r0.w, r1.x, v2.y, r0.y
add r0.xyz, r0.xwzx, v0.xyzx
add r0.w, v2.z, cb5[2].w
mad r0.w, r0.w, cb6[0].y, l(0.500000)
round_ni r0.w, r0.w
div r0.w, r0.w, cb6[0].x
ge r1.x, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r1.x, r0.w, -r0.w
mul r0.w, r0.w, cb6[0].x
ftou r0.w, r0.w
lt r1.x, cb6[r0.w + 2].w, l(0.000000)
mad r1.yz, -cb6[r0.w + 2].zzwz, v1.yyxy, cb6[r0.w + 2].xxyx
mad r2.xy, cb6[r0.w + 2].zwzz, v1.xyxx, cb6[r0.w + 2].xyxx
movc o1.yz, r1.xxxx, r1.yyzy, r2.xxyx
mul r1.xyz, r0.yyyy, cb2[5].xyzx
mad r1.xyz, cb2[4].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb2[6].xyzx, r0.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[7].xyzx
mul r2.xyz, cb2[9].xyzx, cb5[0].yyyy
mad r2.xyz, cb2[8].xyzx, cb5[0].xxxx, r2.xyzx
mad r2.xyz, cb2[10].xyzx, cb5[0].zzzz, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r4.xyz, r3.xyzx
mov r0.w, l(0)
loop 
  ige r1.w, r0.w, l(2)
  breakc_nz r1.w
  mad r5.xyz, -r1.xyzx, cb1[r0.w + 14].wwww, cb1[r0.w + 14].xyzx
  dp3 r1.w, r5.xyzx, r5.xyzx
  rsq r2.w, r1.w
  mul r5.xyz, r2.wwww, r5.xyzx
  mad r1.w, r1.w, cb1[r0.w + 22].z, l(1.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  dp3 r2.w, r2.xyzx, r5.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r1.w, r1.w, r2.w
  mad r4.xyz, cb1[r0.w + 6].xyzx, r1.wwww, r4.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mul o2.xyz, r4.xyzx, cb0[7].xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d46f955216de662e-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mul r1.x, r0.z, cb4[1].y
exp o1.x, -r1.x

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o1.w, l(0)
mov o2.w, cb0[7].w
ret 
// Approximately 0 instruction slots used