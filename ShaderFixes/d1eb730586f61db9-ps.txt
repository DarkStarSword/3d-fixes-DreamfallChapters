// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d1eb730586f61db9-ps.txt
// 3DMigoto: d1eb730586f61db9 |    Unity headers extracted from Standard_Disintegrate_VertexPosition.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Bumped Diffuse VertexPos" {
//      Properties {
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _IlumMap ("Ilum Texture", 2D) = "White" { }
//       _IlumColor ("Ilum Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _IlumStrength ("Ilum Strength", Float) = 0.000000
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,4.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _PlayerPos ("Player position(Set in script)", Vector) = (0.000000,0.000000,0.000000,1.000000)
//       _curveVal ("CurveValue", Float) = 1.000000
//       _test ("squash test", Float) = 1.000000
//       _flip ("Flip", Range(-1.000000,1.000000)) = 1.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 42534
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 73
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_VertexPosition.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 141 7 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 9 5 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Float 128 [_MetalNess]
//   Float 132 [_AlphaFactor]
//   Float 136 [_glossHigh]
//   Float 140 [_glossLow]
//   Float 144 [_MetalNessAlphaFactor]
//   Vector 160 [_DissolveColor]
//   Float 176 [_DissolveEdge]
//   Float 180 [_TileFactor]
//   Vector 192 [_EdgeEmission]
//   Vector 224 [_PlayerPos] 3
//   Float 236 [_curveVal]
//   Float 240 [_test]
//   Float 244 [_flip]
//   Float 248 [_IlumStrength]
//   Vector 256 [_IlumColor]
//   Float 272 [_EmissionFloat]
//   Float 276 [_UVxSpeed]
//   Float 320 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_IlumMap] 2D 6
//   SetTexture 2 [_NoiseTex] 2D 5
//   SetTexture 3 [_BumpMap] 2D 4
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_Lightmap] 2D 0
//   SetTexture 6 [unity_LightmapInd] 2D -1
//   SetTexture 7 [unity_SpecCube0] CUBE 1
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:53:10 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyzw        7     NONE   float   xy  
// TEXCOORD                 6   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xy
dcl_input_ps linear v8.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d1eb730586f61db9-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r0.w, v3.w, cb0[15].x
add r2.xyz, -r0.xwzx, cb0[14].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
mul r1.w, r0.w, cb0[14].w
mad r2.y, cb1[0].x, cb0[17].y, v1.y
mad r2.z, -r0.w, cb0[14].w, l(1.000000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r4.xyzw, r3.xyzw, v5.xyzw
mul r2.z, r2.z, cb0[15].y
mul r2.w, cb0[11].x, cb0[15].y
mov r2.x, v1.x
mul r2.xy, r2.xyxx, cb0[11].yyyy
sample r5.xyzw, r2.xyxx, t2.xyzw, s5
mad r2.x, r0.w, cb0[14].w, r5.x
mul r2.x, r2.x, r2.w
lt r2.x, r2.z, r2.x
lt r1.w, l(0.000000), r1.w
and r1.w, r1.w, r2.x
if_nz r1.w
  mad r0.w, -r0.w, cb0[14].w, r5.x
  mul r2.xyz, cb0[12].xyzx, cb0[17].xxxx
  mul r5.w, r0.w, cb0[15].y
  mov r3.xyw, cb0[10].xyxz
else 
  sample r6.xyzw, v1.xyxx, t1.xyzw, s6
  mul r6.xyz, r6.xyzx, cb0[16].xyzx
  mul r2.xyz, r6.xyzx, cb0[15].zzzz
  mov r3.xyw, r4.xyxz
  mov r5.w, l(0)
endif 
sample r6.xyzw, v1.zwzz, t3.xyzw, s4
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
add r4.xy, r4.wyww, r4.wxww
max r0.w, r4.x, cb0[9].x
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[8].x
mad r1.w, r3.z, v5.z, r4.y
mul r2.w, r1.w, l(0.333333343)
mad r1.w, -r1.w, l(0.333333343), cb0[8].z
mad r1.w, cb0[8].w, r1.w, r2.w
max r2.w, r4.w, cb0[8].y
add r3.z, r5.w, -cb0[20].x
lt r3.z, r3.z, l(0.000000)
discard_nz r3.z
div r4.xy, v8.xyxx, v8.wwww
sample r4.xyzw, r4.xyxx, t4.xyzw, s2
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
mad r3.z, -r1.w, r2.w, l(1.000000)
dp3 r4.y, -r1.xyzx, r7.xyzx
add r4.y, r4.y, r4.y
mad r4.yzw, r7.xxyz, -r4.yyyy, -r1.xxyz
sample r6.xyzw, v7.xyxx, t5.xyzw, s0
log r6.w, r6.w
mul r6.w, r6.w, cb0[4].y
exp r6.w, r6.w
mul r6.w, r6.w, cb0[4].x
mul r8.xyz, r6.xyzx, r6.wwww
sample r9.xyzw, v7.xyxx, t6.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r6.w, r7.xyzx, r9.xyzx
add r6.w, r6.w, l(0.500000)
mul r8.xyz, r6.wwww, r8.xyzx
max r6.w, r9.w, l(0.000100)
div r8.xyz, r8.xyzx, r6.wwww
dp3_sat r6.w, r7.xyzx, cb2[0].xyzx
add r7.w, -r4.x, l(1.000000)
mul r6.w, r6.w, r7.w
mad r9.xyz, -r6.wwww, cb0[6].xyzx, r8.xyzx
mul r6.xyz, r4.xxxx, r6.xyzx
max r6.xyz, r9.xyzx, r6.xyzx
add r9.xyz, -r6.xyzx, r8.xyzx
mad r6.xyz, cb3[24].xxxx, r9.xyzx, r6.xyzx
min r6.xyz, r6.xyzx, r8.xyzx
lt r4.x, l(0.000000), cb4[2].w
if_nz r4.x
  dp3 r4.x, r4.yzwy, r4.yzwy
  rsq r4.x, r4.x
  mul r8.xyz, r4.xxxx, r4.yzwy
  add r9.xyz, -r0.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.x, r9.y, r9.x
  min r4.x, r9.z, r4.x
  add r9.xyz, r0.xyzx, -cb4[2].xyzx
  mad r8.xyz, r8.xyzx, r4.xxxx, r9.xyzx
else 
  mov r8.xyz, r4.yzwy
endif 
log r4.x, r3.z
mul r4.x, r4.x, l(0.750000)
exp r4.x, r4.x
mad r6.w, -r4.x, l(0.700000), l(1.700000)
mul r4.x, r4.x, r6.w
mul r4.x, r4.x, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t7.xyzw, s1, r4.x
log r6.w, r8.w
mul r6.w, r6.w, cb4[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb4[3].x
mul r9.xyz, r8.xyzx, r6.wwww
lt r7.w, cb4[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb4[6].w
  if_nz r7.w
    dp3 r7.w, r4.yzwy, r4.yzwy
    rsq r7.w, r7.w
    mul r10.xyz, r4.yzwy, r7.wwww
    add r11.xyz, -r0.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r4.yzw, r10.xxyz, r7.wwww, r0.xxyz
  endif 
  sample_l r4.xyzw, r4.yzwy, t8.xyzw, s1, r4.x
  log r0.x, r4.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r6.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb4[1].wwww, r4.xyzx, r0.xyzx
endif 
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r7.xyzx
add r4.xyz, r3.xywx, -cb0[2].xyzx
mad r4.xyz, r0.wwww, r4.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r3.xyw, r0.wwww, r3.xyxw
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r3.z, r3.z
eq r0.z, cb0[3].w, l(0.000000)
mul r1.x, r0.y, r3.z
mad r1.x, -r1.x, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r1.x, r0.y
mad r0.z, r1.w, r2.w, -r0.w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r9.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r4.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r4.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r3.xywx, r6.xyzx, r0.xyzx
add r5.xyz, r2.xyzx, r0.xyzx
mov o0.xyzw, r5.xyzw
ret 
// Approximately 0 instruction slots used