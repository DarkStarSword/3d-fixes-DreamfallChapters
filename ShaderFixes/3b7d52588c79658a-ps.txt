// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3b7d52588c79658a-ps.txt
// 3DMigoto: 3b7d52588c79658a |    Unity headers extracted from ghost.shader
//    Shader "Character/Ghost Shader Bumped" {
//      Properties {
//       _MainTex ("Texture", 2D) = "white" { }
//       _BumpMap ("Bumpmap", 2D) = "bump" { }
//       _RimColor ("Rim Color", Color) = (0.460000,0.000000,1.000000,0.000000)
//       _RimPower ("Rim Power", Range(0.200000,2.000000)) = 0.500000
//       _Brightness ("Brightness", Range(0.000000,3.000000)) = 1.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 10754
//          Program "fp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 38
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ghost.shader.decompressed:
//   API d3d11_9x
//   Shader model ps_4_0_level_9_1
//   undeciphered1: 201510240 33 2 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 2 3 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 96 [_LightColor0]
//   Vector 128 [_RimColor]
//   Float 144 [_RimPower]
//   Float 148 [_Brightness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BumpMap] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:16:54 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             8         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
// s1             s1              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c5, 0.300000012, 0.589999974, 0.109999999, 0
    def c6, 2, -1, 1, 0.333333343
    dcl t0
    dcl t1
    dcl t2
    dcl t3
    dcl_2d s0
    dcl_2d s1
    mov r0.xy, t0.zwzw
    texld_pp r1, t0, s0
    texld_pp r0, r0, s1
    mad_pp r0.xy, r0.wyzw, c6.x, c6.y
    dp2add_sat_pp r0.w, r0, r0, c5.w
    add_pp r0.w, -r0.w, c6.z
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r2.x, t1, r0
    dp3_pp r2.y, t2, r0
    dp3_pp r2.z, t3, r0
    dp3_pp r0.w, r2, c4
    max_pp r1.w, r0.w, c5.w
    dp3_pp r0.w, r1, c5
    mul_pp r1.xyz, r0.w, c0
    mov r2.x, t1.w
    mov r2.y, t2.w
    mov r2.z, t3.w
    add r2.xyz, -r2, c3
    nrm_pp r3.xyz, r2
    mul r2.xyz, r3.y, t2
    mad r2.xyz, t1, r3.x, r2
    mad_pp r2.xyz, t3, r3.z, r2
    nrm r3.xyz, r2
    dp3_sat r0.x, r3, r0
    add_pp r0.x, -r0.x, c6.z
    pow r2.x, r0.x, c2.x
    mul r0.xyz, r2.x, c1
    mul_pp r0.xyw, r0.xyzz, c2.y
    mad_pp r1.xyz, r1, r1.w, r0.xyww
    add_pp r0.x, r0.y, r0.x
    mad_pp r0.x, r0.z, c2.y, r0.x
    mul_pp r1.w, r0.x, c6.w
    mov_pp oC0, r1

// approximately 41 instruction slots used (2 texture, 39 arithmetic)
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3b7d52588c79658a-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v1.zwzz, t1.xyzw, s1
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
dp3 r1.x, v2.xyzx, r0.xyzx
dp3 r1.y, v3.xyzx, r0.xyzx
dp3 r1.z, v4.xyzx, r0.xyzx
dp3 r0.w, r1.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
sample r1.xyzw, v1.xyxx, t0.xyzw, s0
dp3 r1.x, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r1.xyz, r1.xxxx, cb0[6].xyzx
mov r2.x, v2.w
mov r2.y, v3.w
mov r2.z, v4.w
add r2.xyz, -r2.xyzx, r5.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r2.xyw, v2.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, v4.xyzx, r2.zzzz, r2.xywx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3_sat r0.x, r2.xyzx, r0.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[9].x
exp r0.x, r0.x
mul r0.xyz, r0.xxxx, cb0[8].xyzx
mul r2.xyz, r0.xyzx, cb0[9].yyyy
mad o0.xyz, r1.xyzx, r0.wwww, r2.xyzx
add r0.x, r2.y, r2.x
mad r0.x, r0.z, cb0[9].y, r0.x
mul o0.w, r0.x, l(0.333333343)
ret 
// Approximately 0 instruction slots used