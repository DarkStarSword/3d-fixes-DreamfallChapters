// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 48f545a17e7938eb-ps.txt
// 3DMigoto: 48f545a17e7938eb |    Unity headers extracted from Reflect-BumpSpec_Fresnel.shader
//    Shader "Chickenlord/Reflective/Fresnel/Bumped Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.000000,6.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 35263
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 93
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-BumpSpec_Fresnel.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 82 6 2
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Shininess]
//   Float 164 [_Fresnel]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_Cube] CUBE 3
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:13:05 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 6      w        5     NONE   float      w
// TEXCOORD                 7   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 48f545a17e7938eb-ps.txt
mov r9.xyzw, cb1[4].xyzw
mul r10.x, -r8.x, r8.y
mul r11.xyzw, cb10[0].xyzw, r10.xxxx
add r9.xyz, r9.xyz, -r11.xyz

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r9.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s1
mul r4.xyz, r4.xyzx, cb0[8].xyzx
sample r5.xyzw, v1.zwzz, t1.xyzw, s2
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r1.w, -r2.xyzx, r6.xyzx
add r1.w, r1.w, r1.w
mad r2.xyz, r6.xyzx, -r1.wwww, -r2.xyzx
sample r2.xyzw, r2.xyzx, t2.xyzw, s3
mul r2.xyz, r4.wwww, r2.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r3.xyzx, r5.xyzx
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[10].y
exp r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v3.wwww, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v2.wwww, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v4.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r0.yzw, r1.wwww, r3.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb4[6].xxyz
  mul r3.yzw, r0.yyzw, cb4[5].xxyz
  mul r0.y, r3.y, l(0.250000)
  mul r0.z, cb4[0].z, l(0.500000)
  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r3.x, r0.w, r0.y
  sample r5.xyzw, r3.xzwx, t3.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r7.xyzw, r0.yzwy, t3.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r3.xyzw, r0.yzwy, t3.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r6.xyzw
  dp4 r5.y, r7.xyzw, r6.xyzw
  dp4 r5.z, r3.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r5.x, cb2[38].xyzw, r6.xyzw
  dp4 r5.y, cb2[39].xyzw, r6.xyzw
  dp4 r5.z, cb2[40].xyzw, r6.xyzw
endif 
add r0.yzw, r5.xxyz, v5.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
log r3.xyz, r0.yzwy
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.yzw, r1.wwww, r3.xxyz, r0.yyzw
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r6.xyzx, cb2[0].xyzx
max r0.x, r0.x, l(0.000000)
dp3 r1.x, r6.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, cb0[10].x, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r4.w, r1.x
mul r1.yzw, r4.xxyz, cb0[6].xxyz
mul r3.xyz, cb0[6].xyzx, cb0[7].xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r3.xyzx
mad r0.xyz, r4.xyzx, r0.yzwy, r1.xyzx
mad r0.xyz, r2.xyzx, cb0[9].xyzx, r0.xyzx
mul r0.w, v5.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used