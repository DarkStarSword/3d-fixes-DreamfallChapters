// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 85c247c672c6ee3d-vs.txt
// 3DMigoto: 85c247c672c6ee3d |    Unity headers extracted from WavingGrass.shader
//    Shader "Hidden/TerrainEngine/Details/WavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff ("Cutoff", Float) = 0.500000
//      }
//      Fallback Off
//      SubShader 1/2 {
//        LOD 200
//        Tags { "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="Grass" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="true" "RenderType"="Grass" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 53785
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 41
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from WavingGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 60 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 31 5 0 0 2 1 1 2 3 4 4 5
//   ConstBuffer "$Globals" 176
//   Vector 160 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityLightmaps" 32
//   Vector 0 [unity_LightmapST]
//   ConstBuffer "UnityTerrain" 272
//   Vector 0 [_WavingTint]
//   Vector 16 [_WaveAndDistance]
//   Vector 32 [_CameraPosition]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityLightmaps" 4
//   BindCB "UnityTerrain" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:37:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c7         cb2            12         7  ( FLT, FLT, FLT, FLT)
// c14        cb3             1         1  ( FLT, FLT, FLT, FLT)
// c15        cb4             0         1  ( FLT, FLT, FLT, FLT)
// c16        cb5             0         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c19, -0.5, 0.5, 0, 1
    def c20, 0.0120000001, 0.0199999996, 0.0599999987, 0.0240000002
    def c21, 0.00600000005, 0.0199999996, 0.0500000007, -0.161616161
    def c22, 1.20000005, 2, 1.60000002, 4.80000019
    def c23, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c24, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c25, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c26, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord7 v7
    mul r0.xy, v0.xzzw, c17.y
    mul r1, r0.y, c21.xyyz
    mad r0, r0.x, c20, r1
    mov r1.x, c17.x
    mad r0, r1.x, c22, r0
    frc r0, r0
    mad r0, r0, c23.x, c23.y
    mul r1, r0, r0
    mul r2, r0, r1
    mad r0, r2, c21.w, r0
    mul r2, r1, r2
    mul r1, r1, r2
    mad r0, r2, c23.z, r0
    mad r0, r1, c23.w, r0
    mul r0, r0, r0
    mul r0, r0, r0
    mul r1.x, v7.w, c17.z
    mul r1, r0, r1.x
    dp4 r0.x, r0, c24.xxyz
    mul r0.x, r0.x, c24.w
    dp4 r2.x, r1, c25
    dp4 r2.z, r1, c26
    mad r1.xz, r2, -c17.z, v0
    mov r1.y, v0.y
    add r0.yzw, r1.xxyz, -c18.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    add r0.y, -r0.y, c17.w
    add r0.y, r0.y, r0.y
    mul r0.y, r0.y, c18.w
    max r0.y, r0.y, c19.z
    min oT3.w, r0.y, c19.w
    mov r2.x, c19.x
    add r0.yzw, r2.x, c16.xxyz
    mad r0.xyz, r0.x, r0.yzww, c19.y
    mul r0.xyz, r0, v7
    add oT3.xyz, r0, r0
    mad oT0.xy, v3, c1, c1.zwzw
    mul r0.xyz, v0.y, c8
    mad r0.xyz, c7, r1.x, r0
    mad r0.xyz, c9, r1.z, r0
    mad oT2.xyz, c10, v0.w, r0
    mul r0.x, v2.x, c11.x
    mul r0.y, v2.x, c12.x
    mul r0.z, v2.x, c13.x
    mul r2.x, v2.y, c11.y
    mul r2.y, v2.y, c12.y
    mul r2.z, v2.y, c13.y
    add r0.xyz, r0, r2
    mul r2.x, v2.z, c11.z
    mul r2.y, v2.z, c12.z
    mul r2.z, v2.z, c13.z
    add r0.xyz, r0, r2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mad oT4.xy, v4, c15, c15.zwzw
    mul r0, v0.y, c4
    mad r0, c3, r1.x, r0
    mad r0, c5, r1.z, r0
    add r0, r0, c6
    mul r1.x, r0.y, c2.x
    mul r1.w, r1.x, c19.y
    mul r1.xz, r0.xyww, c19.y
    add oT5.xy, r1.z, r1.xwzw
    mad oT0.z, r0.z, c14.z, c14.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT5.zw, r0
    mov oT4.zw, c19.z

// approximately 69 instruction slots used
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xy, v0.xzxx, cb5[1].yyyy
mul r1.xyzw, r0.yyyy, l(0.006000, 0.020000, 0.020000, 0.050000)
mad r0.xyzw, r0.xxxx, l(0.012000, 0.020000, 0.060000, 0.024000), r1.xyzw
mad r0.xyzw, cb5[1].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r1.xyzw, r0.xyzw, r0.xyzw
mul r2.xyzw, r0.xyzw, r1.xyzw
mad r0.xyzw, r2.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r0.xyzw
mul r2.xyzw, r1.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
mad r0.xyzw, r2.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r0.xyzw
mad r0.xyzw, r1.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r0.xyzw
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r1.x, v7.w, cb5[1].z
mul r1.xyzw, r0.xyzw, r1.xxxx
dp4 r0.x, r0.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.x, r0.x, l(0.700000)
dp4 r2.x, r1.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
dp4 r2.z, r1.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
mad r1.xz, -r2.xxzx, cb5[1].zzzz, v0.xxzx
mul r2.xyzw, v0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb2[2].xyzw, r1.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb2[3].xyzw
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 85c247c672c6ee3d-vs.txt
ne r5.w, r2.w, l(1.0)
if_nz r5.w
  add r5.w, r2.w, -r5.y
  mad r2.x, r5.w, r5.x, r2.x
endif

mad o1.z, r2.z, cb3[1].z, cb3[1].w
mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
mul r3.x, v2.x, cb2[16].x
mul r3.y, v2.x, cb2[17].x
mul r3.z, v2.x, cb2[18].x
mul r4.x, v2.y, cb2[16].y
mul r4.y, v2.y, cb2[17].y
mul r4.z, v2.y, cb2[18].y
add r0.yzw, r3.xxyz, r4.xxyz
mul r3.x, v2.z, cb2[16].z
mul r3.y, v2.z, cb2[17].z
mul r3.z, v2.z, cb2[18].z
add r0.yzw, r0.yyzw, r3.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul o2.xyz, r0.yzwy, r1.wwww
mul r0.yzw, v0.yyyy, cb2[13].xxyz
mad r0.yzw, cb2[12].xxyz, r1.xxxx, r0.yyzw
mad r0.yzw, cb2[14].xxyz, r1.zzzz, r0.yyzw
mad o3.xyz, cb2[15].xyzx, v0.wwww, r0.yzwy
mov r1.y, v0.y
add r0.yzw, r1.xxyz, -cb5[2].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
add r0.y, -r0.y, cb5[1].w
add r0.y, r0.y, r0.y
mul_sat o4.w, r0.y, cb5[2].w
add r0.yzw, cb5[0].xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
mad r0.xyz, r0.xxxx, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.xyzx, v7.xyzx
add o4.xyz, r0.xyzx, r0.xyzx
mad o5.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
mov o5.zw, l(0,0,0,0)
mul r0.x, r2.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r2.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r2.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used