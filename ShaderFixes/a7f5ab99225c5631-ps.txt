// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a7f5ab99225c5631-ps.txt
// 3DMigoto: a7f5ab99225c5631 |    Unity headers extracted from Standard_Disintegrate_AlphaCutoff_VertexPosition.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Alpha Cutoff Bumped Diffuse VertexPos" {
//      Properties {
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _Cutoff ("Cutoff", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,1.000000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,10.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _PlayerPos ("Player position(Set in script)", Vector) = (0.000000,0.000000,0.000000,1.000000)
//       _curveVal ("CurveValue", Float) = 1.000000
//       _test ("squash test", Float) = 1.000000
//       _flip ("Flip", Range(-1.000000,1.000000)) = 1.000000
//       _UseplayerPos ("Use Player Pos (1=on)", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 25835
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 75
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_AlphaCutoff_VertexPosition.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 250 8 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 8 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Float 128 [_MetalNess]
//   Float 132 [_AlphaFactor]
//   Float 136 [_glossHigh]
//   Float 140 [_glossLow]
//   Float 144 [_MetalNessAlphaFactor]
//   Float 148 [_DisintegrateAmount]
//   Vector 160 [_DissolveColor]
//   Float 176 [_DissolveEdge]
//   Float 180 [_TileFactor]
//   Vector 192 [_EdgeEmission]
//   Vector 224 [_PlayerPos] 3
//   Float 236 [_UseplayerPos]
//   Float 240 [_curveVal]
//   Float 244 [_test]
//   Float 248 [_flip]
//   Float 252 [_EmissionFloat]
//   Float 256 [_UVxSpeed]
//   Float 304 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_NoiseTex] 2D 5
//   SetTexture 2 [_BumpMap] 2D 4
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_LightmapInd] 2D -1
//   SetTexture 6 [unity_SpecCube0] CUBE 1
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:41:08 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyzw        7     NONE   float   xy  
// TEXCOORD                 6   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xy
dcl_input_ps linear v8.xyw
dcl_output o0.xyzw
dcl_temps 24
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r20.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a7f5ab99225c5631-ps.txt
mov r21.xyzw, cb1[4].xyzw
mul r22.x, -r20.x, r20.y
mul r23.xyzw, cb10[0].xyzw, r22.xxxx
add r21.xyz, r21.xyz, -r23.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r21.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
mul r0.w, v3.w, cb0[15].y
add r3.xyz, -r0.xwzx, cb0[14].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
mul r0.w, r0.w, cb0[15].x
mad r3.y, cb1[0].x, cb0[16].x, v1.y
eq r2.w, cb0[14].w, l(1.000000)
movc r0.w, r2.w, r0.w, cb0[9].y
add r2.w, -r0.w, l(1.000000)
sample r4.xyzw, v1.xyxx, t0.xyzw, s3
mul r5.xyzw, r4.xyzw, v5.xyzw
mul r2.w, r2.w, cb0[15].z
mul r3.z, cb0[11].x, cb0[15].z
lt r2.w, r2.w, r3.z
lt r3.z, l(0.000000), r0.w
and r2.w, r2.w, r3.z
mov r3.x, v1.x
mul r3.xy, r3.xyxx, cb0[11].yyyy
sample r3.xyzw, r3.xyxx, t1.xyzw, s5
if_nz r2.w
  add r0.w, -r0.w, r3.x
  mul r3.xyz, cb0[12].xyzx, cb0[15].wwww
  mul r0.w, r0.w, r5.w
  mul r6.w, r0.w, cb0[15].z
  mov r4.xyw, cb0[10].xyxz
else 
  mov r4.xyw, r5.xyxz
  mov r3.xyz, l(0,0,0,0)
  mov r6.w, r5.w
endif 
sample r7.xyzw, v1.zwzz, t2.xyzw, s4
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r7.xyxx, r7.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r7.z, r0.w
add r5.xy, r5.wyww, r5.wxww
max r0.w, r5.x, cb0[9].x
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[8].x
mad r2.w, r4.z, v5.z, r5.y
mul r3.w, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[8].z
mad r2.w, cb0[8].w, r2.w, r3.w
max r3.w, r5.w, cb0[8].y
mul r4.z, r2.w, r3.w
add r5.x, r6.w, -cb0[19].x
lt r5.x, r5.x, l(0.000000)
discard_nz r5.x
div r5.xy, v8.xyxx, v8.wwww
sample r5.xyzw, r5.xyxx, t3.xyzw, s2
dp3 r8.x, v2.xyzx, r7.xyzx
dp3 r8.y, v3.xyzx, r7.xyzx
dp3 r8.z, v4.xyzx, r7.xyzx
mad r5.y, -r2.w, r3.w, l(1.000000)
dp3 r5.z, -r2.xyzx, r8.xyzx
add r5.z, r5.z, r5.z
mad r7.xyz, r8.xyzx, -r5.zzzz, -r2.xyzx
sample r9.xyzw, v7.xyxx, t4.xyzw, s0
log r5.z, r9.w
mul r5.z, r5.z, cb0[4].y
exp r5.z, r5.z
mul r5.z, r5.z, cb0[4].x
mul r10.xyz, r9.xyzx, r5.zzzz
sample r11.xyzw, v7.xyxx, t5.xyzw, s0
mad r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.z, r11.xyzx, r11.xyzx
sqrt r5.z, r5.z
max r5.z, r5.z, l(0.001000)
div r11.xyz, r11.xyzx, r5.zzzz
dp3 r5.w, r8.xyzx, r11.xyzx
max r5.w, r5.w, l(0.000000)
add r7.w, -r5.z, l(1.000000)
mul r12.xyz, r7.wwww, r10.xyzx
mul r13.xyz, r5.zzzz, r10.xyzx
add r14.xy, v7.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r15.xyzw, r14.xyxx, t4.xyzw, s0
log r7.w, r15.w
mul r7.w, r7.w, cb0[4].y
exp r7.w, r7.w
mul r7.w, r7.w, cb0[4].x
mul r15.xyz, r15.xyzx, r7.wwww
sample r14.xyzw, r14.xyxx, t5.xyzw, s0
mad r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r7.w, r14.xyzx, r14.xyzx
sqrt r7.w, r7.w
max r7.w, r7.w, l(0.001000)
div r14.xyz, r14.xyzx, r7.wwww
dp3 r8.w, r8.xyzx, r14.xyzx
max r8.w, r8.w, l(0.000000)
add r9.w, -r7.w, l(1.000000)
mul r16.xyz, r9.wwww, r15.xyzx
mul r17.xyz, r7.wwww, r15.xyzx
mul r16.xyz, r8.wwww, r16.xyzx
mad r12.xyz, r12.xyzx, r5.wwww, r16.xyzx
dp3_sat r9.w, r8.xyzx, cb2[0].xyzx
add r10.w, -r5.x, l(1.000000)
mul r9.w, r9.w, r10.w
mul r16.xyz, r9.wwww, cb0[6].xyzx
mad r18.xyz, r10.xyzx, r5.zzzz, -r16.xyzx
mul r9.xyz, r5.xxxx, r9.xyzx
max r18.xyz, r18.xyzx, r9.xyzx
mad r10.xyz, r10.xyzx, r5.zzzz, -r18.xyzx
mad r10.xyz, cb3[24].xxxx, r10.xyzx, r18.xyzx
min r10.xyz, r10.xyzx, r13.xyzx
mad r13.xyz, r15.xyzx, r7.wwww, -r16.xyzx
max r13.xyz, r9.xyzx, r13.xyzx
mad r15.xyz, r15.xyzx, r7.wwww, -r13.xyzx
mad r13.xyz, cb3[24].xxxx, r15.xyzx, r13.xyzx
min r13.xyz, r13.xyzx, r17.xyzx
mad r15.xyz, -r9.wwww, cb0[6].xyzx, r12.xyzx
max r9.xyz, r9.xyzx, r15.xyzx
add r15.xyz, -r9.xyzx, r12.xyzx
mad r9.xyz, cb3[24].xxxx, r15.xyzx, r9.xyzx
min r9.xyz, r9.xyzx, r12.xyzx
lt r5.x, l(0.000000), cb4[2].w
if_nz r5.x
  dp3 r5.x, r7.xyzx, r7.xyzx
  rsq r5.x, r5.x
  mul r12.xyz, r5.xxxx, r7.xyzx
  add r15.xyz, -r0.xyzx, cb4[0].xyzx
  div r15.xyz, r15.xyzx, r12.xyzx
  add r16.xyz, -r0.xyzx, cb4[1].xyzx
  div r16.xyz, r16.xyzx, r12.xyzx
  lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
  movc r15.xyz, r17.xyzx, r15.xyzx, r16.xyzx
  min r5.x, r15.y, r15.x
  min r5.x, r15.z, r5.x
  add r15.xyz, r0.xyzx, -cb4[2].xyzx
  mad r12.xyz, r12.xyzx, r5.xxxx, r15.xyzx
else 
  mov r12.xyz, r7.xyzx
endif 
log r5.x, r5.y
mul r5.x, r5.x, l(0.750000)
exp r5.x, r5.x
mad r5.z, -r5.x, l(0.700000), l(1.700000)
mul r5.x, r5.z, r5.x
mul r5.x, r5.x, l(6.000000)
sample_l r12.xyzw, r12.xyzx, t6.xyzw, s1, r5.x
log r5.z, r12.w
mul r5.z, r5.z, cb4[3].y
exp r5.z, r5.z
mul r5.z, r5.z, cb4[3].x
mul r15.xyz, r12.xyzx, r5.zzzz
lt r7.w, cb4[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb4[6].w
  if_nz r7.w
    dp3 r7.w, r7.xyzx, r7.xyzx
    rsq r7.w, r7.w
    mul r16.xyz, r7.wwww, r7.xyzx
    add r17.xyz, -r0.xyzx, cb4[4].xyzx
    div r17.xyz, r17.xyzx, r16.xyzx
    add r18.xyz, -r0.xyzx, cb4[5].xyzx
    div r18.xyz, r18.xyzx, r16.xyzx
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r16.xyzx
    movc r17.xyz, r19.xyzx, r17.xyzx, r18.xyzx
    min r7.w, r17.y, r17.x
    min r7.w, r17.z, r7.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.xyz, r16.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l r7.xyzw, r7.xyzx, t7.xyzw, s1, r5.x
  log r0.x, r7.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r5.zzzz, r12.xyzx, -r0.xyzx
  mad r15.xyz, cb4[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r8.xyzx, r8.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r8.xyzx
add r7.xyz, r4.xywx, -cb0[2].xyzx
mad r7.xyz, r0.wwww, r7.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r4.xyw, r0.wwww, r4.xyxw
mad r8.xyz, r1.xyzx, r1.wwww, r11.xyzx
dp3 r5.x, r8.xyzx, r8.xyzx
max r5.x, r5.x, l(0.001000)
rsq r5.x, r5.x
mul r8.xyz, r5.xxxx, r8.xyzx
dp3 r5.x, r0.xyzx, r8.xyzx
max r5.x, r5.x, l(0.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3 r2.y, r11.xyzx, r8.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.z, r5.y, r5.y
mul r5.z, r2.z, l(0.797884583)
mad r7.w, -r2.z, l(0.797884583), l(1.000000)
mad r8.x, r5.w, r7.w, r5.z
mad r5.z, r2.x, r7.w, r5.z
mad r5.z, r8.x, r5.z, l(0.000010)
div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
add r7.w, -r5.y, l(1.000000)
mad r7.w, r7.w, l(0.968000), l(0.030000)
log r7.w, r7.w
div r7.w, l(10.000000), r7.w
mul r8.x, r7.w, r7.w
mad r8.yz, r7.wwww, r7.wwww, l(0.000000, 2.000000, 1.000000, 0.000000)
mul r7.w, r8.y, l(0.159154937)
log r5.x, r5.x
mul r5.x, r5.x, r8.x
exp r5.x, r5.x
mul r5.x, r7.w, r5.x
add r7.w, -r5.w, l(1.000000)
mul r8.y, r7.w, r7.w
mul r8.y, r8.y, r8.y
mul r7.w, r7.w, r8.y
add r2.x, -r2.x, l(1.000000)
mul r8.y, r2.x, r2.x
mul r8.y, r8.y, r8.y
mul r2.x, r2.x, r8.y
mul r8.y, r2.y, r2.y
dp2 r8.y, r8.yyyy, r5.yyyy
add r8.y, r8.y, l(-0.500000)
mad r7.w, r8.y, r7.w, l(1.000000)
mad r8.y, r8.y, r2.x, l(1.000000)
mul r7.w, r7.w, r8.y
mul r5.x, r5.x, r5.z
mul r5.x, r5.x, l(0.785398185)
eq r5.z, cb0[3].w, l(0.000000)
max r8.y, r5.x, l(0.000100)
sqrt r8.y, r8.y
movc r5.x, r5.z, r8.y, r5.x
mul r5.x, r5.w, r5.x
max r5.x, r5.x, l(0.000000)
mul r5.w, r5.w, r7.w
mul r5.y, r2.z, r5.y
mad r5.y, -r5.y, l(0.280000), l(1.000000)
mad r7.w, r2.z, r2.z, l(1.000000)
div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
movc r5.y, r5.z, r5.y, r7.w
dp3 r7.w, r7.xyzx, r7.xyzx
ne r7.w, r7.w, l(0.000000)
and r7.w, r7.w, l(0x3f800000)
mul r5.x, r5.x, r7.w
mad r0.w, r2.w, r3.w, -r0.w
add_sat r0.w, r0.w, l(1.000000)
mad r9.xyz, r10.xyzx, r5.wwww, r9.xyzx
mul r10.xyz, r10.xyzx, r5.xxxx
add r2.y, -r2.y, l(1.000000)
mul r2.w, r2.y, r2.y
mul r2.w, r2.w, r2.w
mul r2.y, r2.y, r2.w
add r11.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r11.xyz, r11.xyzx, r2.yyyy, r7.xyzx
mul r10.xyz, r10.xyzx, r11.xyzx
mad r9.xyz, r4.xywx, r9.xyzx, r10.xyzx
mul r5.xyw, r15.xyxz, r5.yyyy
add r10.xyz, -r7.xyzx, r0.wwww
mad r2.xyw, r2.xxxx, r10.xyxz, r7.xyxz
mad r2.xyw, r5.xyxw, r2.xyxw, r9.xyxz
mad r1.xyz, r1.xyzx, r1.wwww, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, r14.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r0.y, r0.y
mad r0.z, r0.z, r4.z, r2.z
log r0.x, r0.x
mul r0.x, r0.x, r8.x
exp r0.x, r0.x
mul r0.x, r0.x, r8.z
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(8.000000), l(0.000100)
div r0.x, r0.x, r0.y
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r5.z, r0.y, r0.x
mad r0.xyz, r0.xxxx, r7.xyzx, r4.xywx
mul r0.xyz, r13.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r8.wwww, r2.xywx
add r6.xyz, r3.xyzx, r0.xyzx
mov o0.xyzw, r6.xyzw
ret 
// Approximately 0 instruction slots used