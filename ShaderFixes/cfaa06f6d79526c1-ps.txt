// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cfaa06f6d79526c1-ps.txt
// 3DMigoto: cfaa06f6d79526c1 |    Unity headers extracted from ReflectRiver.shader
//    Shader "Dreamfall/FX/River (Supports Shadows)" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _BumpAmt ("BumpAmount", Range(0.000000,1.000000)) = 1.000000
//       _Fresnel ("Reflection Fresnel Exponent", Float) = 2.000000
//       _ReflAmount ("Reflection amount", Float) = 2.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _Cube1 ("Reflection Cubemap Red", CUBE) = "" { }
//       _Cube2 ("Reflection Cubemap Green", CUBE) = "" { }
//       _Cube3 ("Reflection Cubemap Blue", CUBE) = "" { }
//       _WaterSpeed ("Water Speed1", Float) = 1.000000
//       _WaterSpeed2 ("Water Speed1", Float) = 1.000000
//       _Roughness ("Roughness", Float) = 1.000000
//       _Metallic ("Metalness", Float) = 0.010000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 34634
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 65
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ReflectRiver.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 129 8 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 9 3 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Float 144 [_BumpAmt]
//   Float 148 [_ReflAmount]
//   Float 152 [_ReflPow]
//   Float 156 [_Fresnel]
//   Float 160 [_WaterSpeed]
//   Float 164 [_WaterSpeed2]
//   Float 168 [_Metallic]
//   Float 172 [_Roughness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_Cube1] CUBE 4
//   SetTexture 3 [_Cube2] CUBE 5
//   SetTexture 4 [_Cube3] CUBE 6
//   SetTexture 5 [unity_Lightmap] 2D 0
//   SetTexture 6 [unity_LightmapInd] 2D -1
//   SetTexture 7 [unity_SpecCube0] CUBE 1
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:52:28 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cfaa06f6d79526c1-ps.txt
mov r15.xyzw, cb1[4].xyzw
mul r16.x, -r14.x, r14.y
mul r17.xyzw, cb10[0].xyzw, r16.xxxx
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mad r4.xy, cb1[0].xxxx, cb0[10].xyxx, v1.wwww
mov r4.z, v1.z
sample r5.xyzw, r4.zxzz, t1.xyzw, s3
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
sample r4.xyzw, r4.zyzz, t1.xyzw, s3
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
add r4.xyz, r4.xyzx, r5.xyzx
mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[9].xxxx, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r0.w, -r1.xyzx, r5.xyzx
add r0.w, r0.w, r0.w
mad r6.xyz, r5.xyzx, -r0.wwww, -r1.xyzx
sample r7.xyzw, r6.xyzx, t2.xyzw, s4
sample r8.xyzw, r6.xyzx, t3.xyzw, s5
sample r9.xyzw, r6.xyzx, t4.xyzw, s6
mul r8.xyz, r8.xyzx, v5.yyyy
mad r7.xyz, r7.xyzx, v5.xxxx, r8.xyzx
mad r7.xyz, r9.xyzx, v5.zzzz, r7.xyzx
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[9].zzzz
exp r7.xyz, r7.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r2.xyzx, r4.xyzx
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[9].w
exp r0.w, r0.w
mul r2.xyz, r0.wwww, r7.xyzx
mul r4.xyz, r3.xyzx, cb0[8].xyzx
mul r2.xyz, r2.xyzx, cb0[9].yyyy
mul r2.xyz, r3.wwww, r2.xyzx
add r0.w, -cb0[10].w, l(1.000000)
sample r7.xyzw, v6.xyxx, t5.xyzw, s0
log r1.w, r7.w
mul r1.w, r1.w, cb0[4].y
exp r1.w, r1.w
mul r1.w, r1.w, cb0[4].x
mul r7.xyz, r7.xyzx, r1.wwww
sample r8.xyzw, v6.xyxx, t6.xyzw, s0
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r1.w, r5.xyzx, r8.xyzx
add r1.w, r1.w, l(0.500000)
mul r7.xyz, r1.wwww, r7.xyzx
max r1.w, r8.w, l(0.000100)
div r7.xyz, r7.xyzx, r1.wwww
lt r1.w, l(0.000000), cb2[2].w
if_nz r1.w
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r6.xyzx
  add r9.xyz, -r0.xyzx, cb2[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb2[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r1.w, r9.y, r9.x
  min r1.w, r9.z, r1.w
  add r9.xyz, r0.xyzx, -cb2[2].xyzx
  mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
else 
  mov r8.xyz, r6.xyzx
endif 
log r1.w, r0.w
mul r1.w, r1.w, l(0.750000)
exp r1.w, r1.w
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r1.w, r1.w, r2.w
mul r1.w, r1.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t7.xyzw, s1, r1.w
log r2.w, r8.w
mul r2.w, r2.w, cb2[3].y
exp r2.w, r2.w
mul r2.w, r2.w, cb2[3].x
mul r9.xyz, r8.xyzx, r2.wwww
lt r3.w, cb2[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb2[6].w
  if_nz r3.w
    dp3 r3.w, r6.xyzx, r6.xyzx
    rsq r3.w, r3.w
    mul r10.xyz, r3.wwww, r6.xyzx
    add r11.xyz, -r0.xyzx, cb2[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb2[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r3.w, r11.y, r11.x
    min r3.w, r11.z, r3.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r6.xyz, r10.xyzx, r3.wwww, r0.xyzx
  endif 
  sample_l r6.xyzw, r6.xyzx, t8.xyzw, s1, r1.w
  log r0.x, r6.w
  mul r0.x, r0.x, cb2[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r6.xyzx, r0.xxxx
  mad r6.xyz, r2.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb2[1].wwww, r6.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
mad r3.xyz, r3.xyzx, cb0[8].xyzx, -cb0[2].xyzx
mad r3.xyz, cb0[10].zzzz, r3.xyzx, cb0[2].xyzx
mad r1.w, -cb0[10].z, cb0[2].w, cb0[2].w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r0.w, r0.w
eq r0.z, cb0[3].w, l(0.000000)
mul r0.w, r0.y, r0.w
mad r0.w, -r0.w, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r0.w, r0.y
add r0.z, -r1.w, cb0[10].w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r9.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r3.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r4.xyzx, r7.xyzx, r0.xyzx
mad o0.xyz, r2.xyzx, v5.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used