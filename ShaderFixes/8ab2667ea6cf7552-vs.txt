// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8ab2667ea6cf7552-vs.txt
// 3DMigoto: 8ab2667ea6cf7552 |    Unity headers extracted from TreeCreatorLeavesOptimized.shader
//    Shader "Hidden/Nature/Tree Creator Leaves Optimized" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _TranslucencyColor ("Translucency Color", Color) = (0.730000,0.850000,0.410000,1.000000)
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.300000
//       _TranslucencyViewDependency ("View dependency", Range(0.000000,1.000000)) = 0.700000
//       _ShadowStrength ("Shadow Strength", Range(0.000000,1.000000)) = 0.800000
//       _ShadowOffsetScale ("Shadow Offset Scale", Float) = 1.000000
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _ShadowTex ("Shadow (RGB)", 2D) = "white" { }
//       _BumpSpecMap ("Normalmap (GA) Spec (R) Shadow Offset (B)", 2D) = "bump" { }
//       _TranslucencyMap ("Trans (B) Gloss(A)", 2D) = "white" { }
//      [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//      }
//      Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Leaves Rendertex"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TreeLeaf" }
//          ColorMask RGB
//          GpuProgramID 56536
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 23
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TreeCreatorLeavesOptimized.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 132 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 159 6 0 0 2 1 1 2 3 4 4 5 7 8
//   ConstBuffer "$Globals" 224
//   Vector 128 [_Wind]
//   Vector 144 [_Color]
//   Vector 192 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 32 [unity_4LightPosX0]
//   Vector 48 [unity_4LightPosY0]
//   Vector 64 [unity_4LightPosZ0]
//   Vector 80 [unity_4LightAtten0]
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityTerrain" 272
//   Vector 80 [_TreeInstanceColor]
//   Vector 96 [_TreeInstanceScale]
//   Vector 176 [_SquashPlaneNormal]
//   Float 192 [_SquashAmount]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityTerrain" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:38:21 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             8         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c14        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c25        cb3             8        11  ( FLT, FLT, FLT, FLT)
// c36        cb3            21         1  ( FLT, FLT, FLT, FLT)
// c37        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c38        cb5             5         2  ( FLT, FLT, FLT, FLT)
// c40        cb5            11         2  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c42, 1.97500002, 0.792999983, 0.375, 0.193000004
    def c43, 1, -1, 2, -0.5
    def c44, 2, 3, 0.100000001, 0.300000012
    def c45, 0, 0.416666657, 1.05499995, -0.0549999997
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord7 v7
    mov r0.xyz, c38
    mul oT4.xyz, r0, c2
    mad oT0.xy, v3, c3, c3.zwzw
    mov r0.x, c29.w
    mov r0.y, c30.w
    mov r0.z, c31.w
    dp3 r0.x, r0, c43.x
    add r0.y, r0.x, v7.x
    add r0.z, r0.y, v7.y
    mul r1.xy, v2, c25
    add r1.x, r1.y, r1.x
    mul r2.xy, v2, c26
    add r1.y, r2.y, r2.x
    mul r2.xy, v2, c27
    add r1.z, r2.y, r2.x
    abs r0.w, v1.w
    add r0.w, -r0.w, c43.x
    mad r1.xyz, r1, r0.w, v0
    mul r1.xyz, r1, c39
    dp3 r0.x, r1, r0.z
    add r2, r0.xxyy, c4.y
    mul r2, r2, c42
    frc r2, r2
    mad r2, r2, c43.z, c43.w
    frc r2, r2
    mad r2, r2, c43.z, c43.y
    abs r2, r2
    mul r3, r2, r2
    mad r2, r2, -c44.x, c44.y
    mul r2, r2, r3
    add r0.xy, r2.ywzw, r2.xzzw
    mul r2.xyz, r0.y, c1
    mul r2.xyz, r2, v4.y
    mul r3.y, r0.y, v4.y
    dp3 r4.w, v2, c28
    dp3 r4.x, v2, c25
    dp3 r4.y, v2, c26
    dp3 r4.z, v2, c27
    dp4 r0.y, r4, r4
    rsq r0.y, r0.y
    mad r4.xyz, r4, r0.y, -v2
    mad r4.xyz, r0.w, r4, v2
    mul r0.y, v7.y, c44.z
    mul r3.xz, r4, r0.y
    nrm r5.xyz, r4
    mov r0.z, c44.w
    mad r0.xyz, r0.xzxw, r3, r2
    mad r0.xyz, r0, c1.w, r1
    mad r0.xyz, v4.x, c1, r0
    dp3 r1.x, c40, r0
    add r1.x, r1.x, c40.w
    mad r1.xyz, r1.x, -c40, r0
    lrp r2.xyz, c41.x, r0, r1
    mul r0.xyz, r2.y, c30
    mad r0.xyz, c29, r2.x, r0
    mad r0.xyz, c31, r2.z, r0
    add r0.xyz, r0, c32
    add r1, -r0.y, c7
    mul r3, r1, r1
    add r4, -r0.x, c6
    mad r3, r4, r4, r3
    add r6, -r0.z, c8
    mad r3, r6, r6, r3
    rsq r7.x, r3.x
    rsq r7.y, r3.y
    rsq r7.z, r3.z
    rsq r7.w, r3.w
    mov r8.xw, c43.x
    mad r3, r3, c9, r8.x
    mul r8.x, r5.x, c33.x
    mul r8.y, r5.x, c34.x
    mul r8.z, r5.x, c35.x
    mul r9.x, r5.y, c33.y
    mul r9.y, r5.y, c34.y
    mul r9.z, r5.y, c35.y
    add r5.xyw, r8.xyzz, r9.xyzz
    mul r8.x, r5.z, c33.z
    mul r8.y, r5.z, c34.z
    mul r8.z, r5.z, c35.z
    add r5.xyz, r5.xyww, r8
    nrm r8.xyz, r5
    mul r1, r1, r8.y
    mad r1, r4, r8.x, r1
    mad r1, r6, r8.z, r1
    mul r1, r7, r1
    max r1, r1, c45.x
    rcp r4.x, r3.x
    rcp r4.y, r3.y
    rcp r4.z, r3.z
    rcp r4.w, r3.w
    mul r1, r1, r4
    mul r3.xyz, r1.y, c11
    mad r3.xyz, c10, r1.x, r3
    mad r1.xyz, c12, r1.z, r3
    mad r1.xyz, c13, r1.w, r1
    mul r1.w, r8.y, r8.y
    mad r1.w, r8.x, r8.x, -r1.w
    mul r3, r8.yzzx, r8.xyzz
    dp4 r4.x, c17, r3
    dp4 r4.y, c18, r3
    dp4 r4.z, c19, r3
    mad r3.xyz, c20, r1.w, r4
    dp4 r4.x, c14, r8
    dp4 r4.y, c15, r8
    dp4 r4.z, c16, r8
    add r3.xyz, r3, r4
    max r3.xyz, r3, c45.x
    mov r3.w, c45.y
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r3.xyz, r4, c45.z, c45.w
    max r3.xyz, r3, c45.x
    add oT5.xyz, r1, r3
    mul r1, r2.y, c22
    mad r1, c21, r2.x, r1
    mad r1, c23, r2.z, r1
    add r1, r1, c24
    mul r2.x, r1.y, c5.x
    mul r2.w, r2.x, -c43.w
    mul r2.xz, r1.xyww, -c43.w
    add oT6.xy, r2.z, r2.xwzw
    mad oT0.z, r1.z, c37.z, c37.w
    mad oPos.xy, r1.w, c0, r1
    mov oPos.zw, r1
    mov oT6.zw, r1
    dp3 r1.w, v1, c28
    dp3 r1.x, v1, c25
    dp3 r1.y, v1, c26
    dp3 r1.z, v1, c27
    dp4 r1.w, r1, r1
    rsq r1.w, r1.w
    mul r1.xyz, r1.w, r1
    mov r1.w, c43.y
    lrp r2, r0.w, r1, v1
    nrm r1.xyz, r2
    mul r0.w, r2.w, c36.w
    mul r2.xyz, r1.y, c30.yzxw
    mad r1.xyw, c29.yzzx, r1.x, r2.xyzz
    mad r1.xyz, c31.yzxw, r1.z, r1.xyww
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul r1.xyz, r1.w, r1
    mov oT1.x, r1.z
    mul r2.xyz, r1, r8.zxyw
    mad r2.xyz, r8.yzxw, r1.yzxw, -r2
    mul r2.xyz, r0.w, r2
    mov oT1.y, r2.x
    mov oT1.z, r8.x
    mov oT1.w, r0.x
    mov oT2.x, r1.x
    mov oT3.x, r1.y
    mov oT2.y, r2.y
    mov oT3.y, r2.z
    mov oT2.z, r8.y
    mov oT3.z, r8.z
    mov oT2.w, r0.y
    mov oT3.w, r0.z
    mov oT4.w, v7.w

// approximately 168 instruction slots used
vs_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[13], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v7.xyw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.x, cb3[12].w
mov r0.y, cb3[13].w
mov r0.z, cb3[14].w
dp3 r0.x, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.y, r0.x, v7.x
add r0.z, r0.y, v7.y
dp2 r1.x, v2.xyxx, cb3[8].xyxx
dp2 r1.y, v2.xyxx, cb3[9].xyxx
dp2 r1.z, v2.xyxx, cb3[10].xyxx
add r0.w, -|v1.w|, l(1.000000)
mad r1.xyz, r1.xyzx, r0.wwww, v0.xyzx
mul r1.xyz, r1.xyzx, cb5[6].xyzx
dp3 r0.x, r1.xyzx, r0.zzzz
add r2.xyzw, r0.xxyy, cb1[0].yyyy
mul r2.xyzw, r2.xyzw, l(1.975000, 0.793000, 0.375000, 0.193000)
frc r2.xyzw, r2.xyzw
mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-0.500000, -0.500000, -0.500000, -0.500000)
frc r2.xyzw, r2.xyzw
mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r3.xyzw, |r2.xyzw|, |r2.xyzw|
mad r2.xyzw, -|r2.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r2.xyzw, r2.xyzw, r3.xyzw
add r0.xy, r2.ywyy, r2.xzxx
mul r2.xyz, r0.yyyy, cb0[8].xyzx
mul r2.xyz, r2.xyzx, v4.yyyy
mul r3.y, r0.y, v4.y
dp3 r4.w, v2.xyzx, cb3[11].xyzx
dp3 r4.x, v2.xyzx, cb3[8].xyzx
dp3 r4.y, v2.xyzx, cb3[9].xyzx
dp3 r4.z, v2.xyzx, cb3[10].xyzx
dp4 r0.y, r4.xyzw, r4.xyzw
rsq r0.y, r0.y
mad r4.xyz, r4.xyzx, r0.yyyy, -v2.xyzx
mad r4.xyz, r0.wwww, r4.xyzx, v2.xyzx
mul r0.y, v7.y, l(0.100000)
mul r3.xz, r4.xxzx, r0.yyyy
mov r0.z, l(0.300000)
mad r0.xyz, r0.xzxx, r3.xyzx, r2.xyzx
mad r0.xyz, r0.xyzx, cb0[8].wwww, r1.xyzx
mad r0.xyz, v4.xxxx, cb0[8].xyzx, r0.xyzx
dp3 r1.x, cb5[11].xyzx, r0.xyzx
add r1.x, r1.x, cb5[11].w
mad r1.xyz, -r1.xxxx, cb5[11].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -r1.xyzx
mad r0.xyz, cb5[12].xxxx, r0.xyzx, r1.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8ab2667ea6cf7552-vs.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mad o1.z, r1.z, cb4[1].z, cb4[1].w
mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r2.xyz, r0.yyyy, cb3[13].xyzx
mad r2.xyz, cb3[12].xyzx, r0.xxxx, r2.xyzx
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r2.xyzx
add r0.xyz, r0.xyzx, cb3[15].xyzx
mov o2.w, r0.x
dp3 r2.w, v1.xyzx, cb3[11].xyzx
dp3 r2.x, v1.xyzx, cb3[8].xyzx
dp3 r2.y, v1.xyzx, cb3[9].xyzx
dp3 r2.z, v1.xyzx, cb3[10].xyzx
dp4 r2.w, r2.xyzw, r2.xyzw
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mov r2.w, l(-1.000000)
add r2.xyzw, r2.xyzw, -v1.xyzw
mad r2.xyzw, r0.wwww, r2.xyzw, v1.xyzw
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r0.w, r2.w, cb3[21].w
mul r3.xyz, r2.yyyy, cb3[13].yzxy
mad r2.xyw, cb3[12].yzyx, r2.xxxx, r3.xyxz
mad r2.xyz, cb3[14].yzxy, r2.zzzz, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mov o2.x, r2.z
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r4.xyzx
mul r4.x, r3.x, cb3[16].x
mul r4.y, r3.x, cb3[17].x
mul r4.z, r3.x, cb3[18].x
mul r5.x, r3.y, cb3[16].y
mul r5.y, r3.y, cb3[17].y
mul r5.z, r3.y, cb3[18].y
add r3.xyw, r4.xyxz, r5.xyxz
mul r4.x, r3.z, cb3[16].z
mul r4.y, r3.z, cb3[17].z
mul r4.z, r3.z, cb3[18].z
add r3.xyz, r3.xywx, r4.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r4.xyz, r2.xyzx, r3.zxyz
mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
mul r4.xyz, r0.wwww, r4.xyzx
mov o2.y, r4.x
mov o2.z, r3.x
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.w, r0.y
mov o3.y, r4.y
mov o4.y, r4.z
mov o3.z, r3.y
mov o4.w, r0.z
mov o4.z, r3.z
mul o5.xyz, cb0[9].xyzx, cb5[5].xyzx
mov o5.w, v7.w
mul r0.w, r3.y, r3.y
mad r0.w, r3.x, r3.x, -r0.w
mul r2.xyzw, r3.yzzx, r3.xyzz
dp4 r4.x, cb2[41].xyzw, r2.xyzw
dp4 r4.y, cb2[42].xyzw, r2.xyzw
dp4 r4.z, cb2[43].xyzw, r2.xyzw
mad r2.xyz, cb2[44].xyzx, r0.wwww, r4.xyzx
mov r3.w, l(1.000000)
dp4 r4.x, cb2[38].xyzw, r3.xyzw
dp4 r4.y, cb2[39].xyzw, r3.xyzw
dp4 r4.z, cb2[40].xyzw, r3.xyzw
add r2.xyz, r2.xyzx, r4.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.xyzw, -r0.yyyy, cb2[3].xyzw
mul r5.xyzw, r3.yyyy, r4.xyzw
mul r4.xyzw, r4.xyzw, r4.xyzw
add r6.xyzw, -r0.xxxx, cb2[2].xyzw
add r0.xyzw, -r0.zzzz, cb2[4].xyzw
mad r5.xyzw, r6.xyzw, r3.xxxx, r5.xyzw
mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
mad r4.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
mad r0.xyzw, r0.xyzw, r3.zzzz, r5.xyzw
rsq r3.xyzw, r4.xyzw
mad r4.xyzw, r4.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
mul r0.xyzw, r0.xyzw, r3.xyzw
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r4.xyzw, r0.xyzw
mul r3.xyz, r0.yyyy, cb2[7].xyzx
mad r3.xyz, cb2[6].xyzx, r0.xxxx, r3.xyzx
mad r0.xyz, cb2[8].xyzx, r0.zzzz, r3.xyzx
mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
add o6.xyz, r0.xyzx, r2.xyzx
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o7.zw, r1.zzzw
add o7.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used