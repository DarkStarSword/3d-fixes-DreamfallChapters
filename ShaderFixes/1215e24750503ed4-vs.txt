// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1215e24750503ed4-vs.txt
// 3DMigoto: 1215e24750503ed4 | Matched 2 variants of 1 shaders: Hidden/RenderGrey
//
//       Unity headers extracted from RenderGrey.shader
//       Shader "Hidden/RenderGrey" {
//         Properties {
//          _MainTex ("Base (RGB)", 2D) = "white" { }
//         }
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "RenderType"="Opaque" }
//           Pass 4/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//             ZWrite Off
//             GpuProgramID 233918
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 239
// 2:              GpuProgramIndex 249
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from RenderGrey.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 20 0 0
// 2:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
// 1:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 17 2 0 0 4 5
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityShadows" 416
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityShadows" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityLightmaps" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:12:02 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             5         1  ( FLT, FLT, FLT, FLT)
// c2         cb1            25         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         8  ( FLT, FLT, FLT, FLT)
// c11        cb2            12         4  ( FLT, FLT, FLT, FLT)
// c15        cb3             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c16, 0.5, 1, 0, 0
    dcl_texcoord v0
    dcl_texcoord4 v4
    mul r0, v0.y, c4
    mad r0, c3, v0.x, r0
    mad r0, c5, v0.z, r0
    add r0, r0, c6
    mul r1.x, r0.y, c1.x
    mul r1.w, r1.x, c16.x
    mul r1.xz, r0.xyww, c16.x
    add oT1.xy, r1.z, r1.xwzw
    mad oT2.xy, v4, c15, c15.zwzw
    mul r1.xyz, v0.y, c12
    mad r1.xyz, c11, v0.x, r1
    mad r1.xyz, c13, v0.z, r1
    mad r1.xyz, c14, v0.w, r1
    add r2.xyz, r1, -c2
    mov oT0.xyz, r1
    mul oT3.xyz, r2, c2.w
    mul r1.x, v0.y, c8.z
    mad r1.x, c7.z, v0.x, r1.x
    mad r1.x, c9.z, v0.z, r1.x
    add r1.x, r1.x, c10.z
    mov r1.w, c2.w
    add r1.y, -r1.w, c16.y
    mul oT3.w, r1.y, -r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT1.zw, r0
    mov oT2.zw, c16.z

// approximately 27 instruction slots used
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[26], immediateIndexed
dcl_constantbuffer cb2[16], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1215e24750503ed4-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r1.xyz, v0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
mov o1.xyz, r1.xyzx
add r1.xyz, r1.xyzx, -cb1[25].xyzx
mul o4.xyz, r1.xyzx, cb1[25].wwww
mul r0.y, r0.y, cb0[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o2.zw, r0.zzzw
add o2.xy, r1.zzzz, r1.xwxx
mad o3.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
mov o3.zw, l(0,0,0,0)
mul r0.x, v0.y, cb2[5].z
mad r0.x, cb2[4].z, v0.x, r0.x
mad r0.x, cb2[6].z, v0.z, r0.x
add r0.x, r0.x, cb2[7].z
add r0.y, -cb1[25].w, l(1.000000)
mul o4.w, r0.y, -r0.x
ret 
// Approximately 0 instruction slots used