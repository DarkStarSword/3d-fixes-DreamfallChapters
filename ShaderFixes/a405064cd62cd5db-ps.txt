// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a405064cd62cd5db-ps.txt
// 3DMigoto: a405064cd62cd5db | Matched 8 variants of 1 shaders: Hidden/FogVolume_Rotation
//
//        Unity headers extracted from FogVolume_Rotation.shader
//        Shader "Hidden/FogVolume_Rotation" {
//          SubShader 1/1 {
//            Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//            Pass 1/1 {
//              Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//              ZTest Always
//              ZWrite Off
//              Cull Front
//              Blend SrcAlpha OneMinusSrcAlpha
//              GpuProgramID 59518
//              Program "fp" {
//                SubProgram "d3d11 " {
// 01:              GpuProgramIndex 193
// 02:              GpuProgramIndex 195
// 04:              GpuProgramIndex 197
// 08:              GpuProgramIndex 199
// 10:              GpuProgramIndex 201
// 20:              GpuProgramIndex 203
// 40:              GpuProgramIndex 205
// 80:              GpuProgramIndex 207
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from FogVolume_Rotation.shader.decompressed:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201510240 59 1 0
// 10:   Keywords { "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 20:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 02:   Keywords { "_DOUBLE_LAYER" "_FOG_VOLUME_INSCATTERING" }
// 80:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 08:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_VOLUME_INSCATTERING" }
// 01:   Keywords { "_FOG_VOLUME_INSCATTERING" }
// 40:   Keywords { "_SHADE" "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 04:   Keywords { "_SHADE" "_FOG_VOLUME_INSCATTERING" }
//       undeciphered2: 1 1 2 1 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 320
//       Vector 96 [_Color]
//       Vector 112 [_InscatteringColor]
//       Vector 128 [_BoxMin]
//       Vector 144 [_BoxMax]
//       Vector 240 [L] 3
//       Float 252 [_InscatteringIntensity]
//       Float 256 [InscatteringShape]
//       Float 260 [_Visibility]
//       Float 264 [InscatteringStartDistance]
//       Float 272 [InscatteringTransitionWideness]
//       Float 312 [Exposure]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       Vector 112 [_ZBufferParams]
//       SetTexture 0 [_CameraDepthTexture] 2D 0
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:44:48 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a405064cd62cd5db-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

add r0.xyz, |v5.xyzx|, -cb0[9].xyzx
ge r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r0.xyz, r0.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
add r0.x, r0.y, r0.x
add r0.x, r0.z, r0.x
min r0.x, r0.x, l(1.000000)
add r0.yzw, -v5.xxyz, cb0[9].xxyz
add r1.xyz, v3.xyzx, -v5.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
div r2.xyz, r0.ywzy, r1.xzyx
mov r3.w, r2.x
add r0.yzw, -v5.xxyz, cb0[8].xxyz
div r3.xyz, r0.yzwy, r1.xyzx
lt r0.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xxyz
movc r1.xy, r0.yyyy, r3.xwxx, r3.wxww
mov r2.xw, r3.zzzy
movc r0.yz, r0.zzzz, r2.wwzw, r2.zzwz
movc r1.zw, r0.wwww, r2.xxxy, r2.yyyx
lt r0.w, r1.x, r0.y
movc r0.y, r0.w, r0.y, r1.x
lt r0.w, r0.y, r1.z
movc r0.y, r0.w, r1.z, r0.y
mul r0.x, r0.x, r0.y
lt r0.y, r0.z, r1.y
movc r0.y, r0.y, r0.z, r1.y
lt r0.z, r1.w, r0.y
movc r0.y, r0.z, r1.w, r0.y
max r0.z, r0.y, r0.x
min r0.x, r0.y, r0.x
div r0.yw, v2.xxxy, v2.wwww
sample r1.xyzw, r0.ywyy, t0.xyzw, s0
mad r0.y, cb1[7].z, r1.x, cb1[7].w
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r0.w, r0.w, v4.z
div r0.y, r0.y, r0.w
min r0.xz, |r0.yyyy|, r0.xxzx
div r0.y, |r0.y|, cb0[17].x
add_sat r0.y, r0.y, -cb0[16].z
add r0.x, -r0.x, r0.z
div r0.x, r0.x, cb0[16].y
exp r0.x, -r0.x
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mul r0.y, r0.x, r0.y
add r1.xyz, v1.xyzx, -r5.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3_sat r0.z, r1.xyzx, cb0[15].xyzx
dp2 r0.z, r0.zzzz, cb0[16].xxxx
mad r0.z, cb0[16].x, cb0[16].x, -r0.z
add r0.z, r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, l(1.500000)
exp r0.z, r0.z
mad r0.w, -cb0[16].x, cb0[16].x, l(1.000000)
div r0.z, r0.w, r0.z
mul r0.z, r0.z, l(0.0795772821)
mul r0.y, r0.y, r0.z
mul r1.xyz, cb0[6].xyzx, cb0[7].xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.yzw, r1.xxyz, r0.yyyy, cb0[6].xxyz
mul_sat o0.xyz, r0.yzwy, cb0[19].zzzz
mul r0.y, cb0[6].w, cb0[6].w
mul_sat o0.w, r0.y, r0.x
ret 
// Approximately 0 instruction slots used