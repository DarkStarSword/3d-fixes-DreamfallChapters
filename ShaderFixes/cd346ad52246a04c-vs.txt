// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed cd346ad52246a04c-vs.txt
// 3DMigoto: cd346ad52246a04c | Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
//
//       Unity headers extracted from SpeedTreeBillboard.shader
//       Shader "Nature/SpeedTree Billboard" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//         }
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//             Cull Off
//             GpuProgramID 26093
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 233
// 2:              GpuProgramIndex 241
// 4:              GpuProgramIndex 249
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 119 0 0
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "BILLBOARD_FACE_CAMERA_POS" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 4:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "BILLBOARD_FACE_CAMERA_POS" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "BILLBOARD_FACE_CAMERA_POS" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 176
//      Float 132 [_WindQuality]
//      Float 136 [_WindEnabled]
//      Vector 144 [_HueVariation]
//      Vector 160 [_Color]
//      ConstBuffer "UnityLighting" 720
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 96 [_ST_WindBranchAdherences]
//      ConstBuffer "UnityBillboardPerCamera" 48
//      Vector 32 [unity_BillboardCameraParams]
//      ConstBuffer "UnityBillboardPerBatch" 288
//      Vector 0 [unity_BillboardInfo]
//      Vector 16 [unity_BillboardSize]
//      Vector 32 [unity_BillboardImageTexCoords0]
//      Vector 48 [unity_BillboardImageTexCoords1]
//      Vector 64 [unity_BillboardImageTexCoords2]
//      Vector 80 [unity_BillboardImageTexCoords3]
//      Vector 96 [unity_BillboardImageTexCoords4]
//      Vector 112 [unity_BillboardImageTexCoords5]
//      Vector 128 [unity_BillboardImageTexCoords6]
//      Vector 144 [unity_BillboardImageTexCoords7]
//      Vector 160 [unity_BillboardImageTexCoords8]
//      Vector 176 [unity_BillboardImageTexCoords9]
//      Vector 192 [unity_BillboardImageTexCoords10]
//      Vector 208 [unity_BillboardImageTexCoords11]
//      Vector 224 [unity_BillboardImageTexCoords12]
//      Vector 240 [unity_BillboardImageTexCoords13]
//      Vector 256 [unity_BillboardImageTexCoords14]
//      Vector 272 [unity_BillboardImageTexCoords15]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "SpeedTreeWind" 3
//      BindCB "UnityBillboardPerCamera" 4
//      BindCB "UnityBillboardPerBatch" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:55:34 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 7      w        5     NONE   float      w
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_constantbuffer cb5[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyz
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[8].z, cb0[8].y
lt r0.x, l(0.000000), r0.x
add r0.yzw, v0.xxyz, cb2[15].xxyz
add r1.x, r0.y, v2.w
mad r1.y, v2.w, l(0.800000), r0.z
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r1.xy, r1.xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, |r1.xxxy|, |r1.xxxy|
mad r1.xy, -|r1.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r1.xy, r1.zwzz, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, r1.xyxx
mad r1.x, r1.y, r1.y, r1.x
div r1.y, cb3[6].x, cb3[1].z
mad r1.x, cb3[1].y, r1.x, r1.y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r1.z, v1.y, cb5[1].y, cb5[1].z
mul r2.y, r1.z, v2.y
mad r1.y, -r1.y, l(0.250000), r2.y
max r1.y, r1.y, l(0.000000)
mul r1.y, r1.y, cb3[1].z
log r1.z, r1.y
mul r1.z, r1.z, cb3[1].w
exp r1.z, r1.z
ne r1.w, r1.y, l(0.000000)
movc r1.y, r1.w, r1.z, r1.y
mul r1.x, r1.y, r1.x
add r1.y, v1.x, l(-0.500000)
mul r1.y, r1.y, cb5[1].x
mul r1.y, r1.y, v2.x
add r3.xyz, -r0.yzwy, cb4[2].xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xy, r1.zzzz, r3.xzxx
mov r3.zw, -r3.yyyy
dp2 r1.z, r3.xzxx, r3.xwxx
mul r3.xy, r3.yxyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
rsq r1.z, r1.z
mul r1.zw, r1.zzzz, r3.xxxy
mul r2.xz, r1.zzwz, r1.yyyy
mad r3.xz, cb3[0].xxzx, r1.xxxx, r2.xxzx
mov r3.y, r2.y
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r3.xyz, r1.xxxx, r3.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
sqrt r1.x, r1.x
mul r3.xyz, r1.xxxx, r3.xyzx
movc r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
add r2.xyz, r2.xyzx, v0.xyzx
mul r3.xyzw, r2.yyyy, cb2[1].xyzw
mad r3.xyzw, cb2[0].xyzw, r2.xxxx, r3.xyzw
mad r3.xyzw, cb2[2].xyzw, r2.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb2[3].xyzw
mov o0.xyzw, r3.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed cd346ad52246a04c-vs.txt
ne r6.w, r3.w, l(1.0)
if_nz r6.w
  add r6.w, r3.w, -r6.y
  mad r3.x, r6.w, r6.x, r3.x
endif

mov o5.w, r3.z
mul r3.xyz, r2.yyyy, cb2[13].xyzx
mad r2.xyw, cb2[12].xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, cb2[14].xyzx, r2.zzzz, r2.xywx
add r2.xyz, r2.xyzx, cb2[15].xyzx
mov o1.w, r2.x
mul r3.x, r1.w, cb2[16].x
mul r3.y, r1.w, cb2[17].x
mul r3.zw, r1.wwww, cb2[18].xxxx
mul r4.x, -r1.z, cb2[16].z
mul r4.y, -r1.z, cb2[17].z
mul r4.zw, -r1.zzzz, cb2[18].zzzz
add r3.xyzw, r3.xyzw, r4.xyzw
dp3 r0.x, r3.xywx, r3.xywx
rsq r0.x, r0.x
mul r3.xyzw, r0.xxxx, r3.xyzw
mul r4.xyz, r1.wwww, cb2[14].yzxy
mad r4.xyz, cb2[12].yzxy, r1.zzzz, r4.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
mul r5.xyz, r3.wxyw, r4.xyzx
mad r5.xyz, r3.ywxy, r4.yzxy, -r5.xyzx
mul r5.xyz, r5.xyzx, -cb2[21].wwww
mov o1.y, r5.x
mov o1.z, r3.x
mov o1.x, r4.z
mov o2.w, r2.y
mov o3.w, r2.z
mov o2.x, r4.x
mov o3.x, r4.y
mov o2.y, r5.y
mov o3.y, r5.z
mov o2.z, r3.y
mov o3.z, r3.w
mov o4.xyzw, cb0[10].xyzw
add r0.x, r0.z, r0.y
add r0.x, r0.w, r0.x
frc r0.x, r0.x
mul_sat o5.z, r0.x, cb0[9].w
max r0.x, |r1.w|, |r1.z|
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min r0.y, |r1.w|, |r1.z|
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, r0.x
mad r0.z, r0.y, l(0.0208350997), l(-0.085133)
mad r0.z, r0.y, r0.z, l(0.180141)
mad r0.z, r0.y, r0.z, l(-0.330299497)
mad r0.y, r0.y, r0.z, l(0.999866)
mul r0.z, r0.y, r0.x
mad r0.z, r0.z, l(-2.000000), l(1.57079637)
lt r0.w, |r1.w|, |r1.z|
and r0.z, r0.w, r0.z
mad r0.x, r0.x, r0.y, r0.z
lt r0.y, r1.w, -r1.w
and r0.y, r0.y, l(0xc0490fdb)
add r0.x, r0.y, r0.x
min r0.y, r1.w, -r1.z
max r0.z, r1.w, -r1.z
ge r0.z, r0.z, -r0.z
lt r0.y, r0.y, -r0.y
and r0.y, r0.z, r0.y
movc r0.x, r0.y, -r0.x, r0.x
lt r0.y, r0.x, l(0.000000)
and r0.y, r0.y, l(0x40c90fdb)
add r0.x, r0.y, r0.x
add r0.x, r0.x, v2.z
mad r0.x, r0.x, cb5[0].y, l(0.500000)
round_ni r0.x, r0.x
div r0.x, r0.x, cb5[0].x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
mul r0.x, r0.x, cb5[0].x
ftou r0.x, r0.x
lt r0.y, cb5[r0.x + 2].w, l(0.000000)
mad r0.zw, -cb5[r0.x + 2].zzzw, v1.yyyx, cb5[r0.x + 2].xxxy
mad r1.xy, cb5[r0.x + 2].zwzz, v1.xyxx, cb5[r0.x + 2].xyxx
movc o5.xy, r0.yyyy, r0.zwzz, r1.xyxx
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r1.xyzw, r3.ywzx, r3.xyzw
dp4 r2.x, cb1[41].xyzw, r1.xyzw
dp4 r2.y, cb1[42].xyzw, r1.xyzw
dp4 r2.z, cb1[43].xyzw, r1.xyzw
mad o6.xyz, cb1[44].xyzx, r0.xxxx, r2.xyzx
ret 
// Approximately 0 instruction slots used