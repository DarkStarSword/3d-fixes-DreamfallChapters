// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 030c9c38a941e478-vs.txt
// 3DMigoto: 030c9c38a941e478 |    Unity headers extracted from SpeedTreeBillboard.shader
//    Shader "Nature/SpeedTree Billboard" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//        Pass 1/7 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//          Cull Off
//          GpuProgramID 26093
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 131
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 111 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "BILLBOARD_FACE_CAMERA_POS" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 160
//   Float 132 [_WindQuality]
//   Float 136 [_WindEnabled]
//   Vector 144 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "SpeedTreeWind" 256
//   Vector 0 [_ST_WindVector]
//   Vector 16 [_ST_WindGlobal]
//   Vector 96 [_ST_WindBranchAdherences]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "SpeedTreeWind" 4
//   BindCB "UnityBillboardPerCamera" 5
//   BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:01:14 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, cb3[15].xyzx
add r1.x, r0.x, v2.w
mad r1.y, v2.w, l(0.800000), r0.y
add r0.xyz, -r0.xyzx, cb5[2].xyzx
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r1.xy, r1.xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, |r1.xxxy|, |r1.xxxy|
mad r1.xy, -|r1.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r1.xy, r1.zwzz, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, r1.xyxx
mad r0.w, r1.y, r1.y, r1.x
div r1.x, cb4[6].x, cb4[1].z
mad r0.w, cb4[1].y, r0.w, r1.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[1].z
mad r1.y, v1.y, cb6[1].y, cb6[1].z
mul r2.y, r1.y, v2.y
mad r1.x, -r1.x, l(0.250000), r2.y
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, cb4[1].z
log r1.y, r1.x
mul r1.y, r1.y, cb4[1].w
exp r1.y, r1.y
ne r1.z, r1.x, l(0.000000)
movc r1.x, r1.z, r1.y, r1.x
mul r0.w, r0.w, r1.x
add r1.x, v1.x, l(-0.500000)
mul r1.x, r1.x, cb6[1].x
mul r1.x, r1.x, v2.x
dp3 r0.y, r0.xyzx, r0.xyzx
rsq r0.y, r0.y
mul r3.xy, r0.yyyy, r0.xzxx
mov r3.zw, -r3.yyyy
dp2 r0.x, r3.xzxx, r3.xwxx
mul r0.yz, r3.yyxy, l(0.000000, -1.000000, 1.000000, 0.000000)
rsq r0.x, r0.x
mul r0.xy, r0.xxxx, r0.yzyy
mul r2.xz, r0.xxyx, r1.xxxx
mad r1.xz, cb4[0].xxzx, r0.wwww, r2.xxzx
mov r1.y, r2.y
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
sqrt r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
mul r0.z, cb0[8].z, cb0[8].y
lt r0.z, l(0.000000), r0.z
movc r1.xyz, r0.zzzz, r1.xyzx, r2.xyzx
add r1.xyz, r1.xyzx, v0.xyzx
mul r2.xyzw, r1.yyyy, cb3[1].xyzw
mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[2].xyzw, r1.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb3[3].xyzw
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 030c9c38a941e478-vs.txt
ne r5.w, r2.w, l(1.0)
if_nz r5.w
  add r5.w, r2.w, -r5.y
  mad r2.x, r5.w, r5.x, r2.x
endif

mul r3.x, r0.y, cb3[16].x
mul r3.y, r0.y, cb3[17].x
mul r3.z, r0.y, cb3[18].x
mul r4.x, -r0.x, cb3[16].z
mul r4.y, -r0.x, cb3[17].z
mul r4.z, -r0.x, cb3[18].z
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
mov o1.xyz, r3.xyzx
mul r4.xyz, r1.yyyy, cb3[13].xyzx
mad r1.xyw, cb3[12].xyxz, r1.xxxx, r4.xyxz
mad r1.xyz, cb3[14].xyzx, r1.zzzz, r1.xywx
add o2.xyz, r1.xyzx, cb3[15].xyzx
mov o3.xyzw, cb0[9].xyzw
max r0.z, |r0.y|, |r0.x|
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
min r0.w, |r0.y|, |r0.x|
mul r0.z, r0.z, r0.w
mul r0.w, r0.z, r0.z
mad r1.x, r0.w, l(0.0208350997), l(-0.085133)
mad r1.x, r0.w, r1.x, l(0.180141)
mad r1.x, r0.w, r1.x, l(-0.330299497)
mad r0.w, r0.w, r1.x, l(0.999866)
mul r1.x, r0.w, r0.z
mad r1.x, r1.x, l(-2.000000), l(1.57079637)
lt r1.y, |r0.y|, |r0.x|
and r1.x, r1.y, r1.x
mad r0.z, r0.z, r0.w, r1.x
lt r0.w, r0.y, -r0.y
and r0.w, r0.w, l(0xc0490fdb)
add r0.z, r0.w, r0.z
min r0.w, r0.y, -r0.x
max r0.x, r0.y, -r0.x
ge r0.x, r0.x, -r0.x
lt r0.y, r0.w, -r0.w
and r0.x, r0.x, r0.y
movc r0.x, r0.x, -r0.z, r0.z
lt r0.y, r0.x, l(0.000000)
and r0.y, r0.y, l(0x40c90fdb)
add r0.x, r0.y, r0.x
add r0.x, r0.x, v2.z
mad r0.x, r0.x, cb6[0].y, l(0.500000)
round_ni r0.x, r0.x
div r0.x, r0.x, cb6[0].x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
mul r0.x, r0.x, cb6[0].x
ftou r0.x, r0.x
lt r0.y, cb6[r0.x + 2].w, l(0.000000)
mad r0.zw, -cb6[r0.x + 2].zzzw, v1.yyyx, cb6[r0.x + 2].xxxy
mad r1.xy, cb6[r0.x + 2].zwzz, v1.xyxx, cb6[r0.x + 2].xyxx
movc o4.xy, r0.yyyy, r0.zwzz, r1.xyxx
mov o4.z, l(0)
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r1.xyzw, r3.yzzx, r3.xyzz
dp4 r3.x, cb2[41].xyzw, r1.xyzw
dp4 r3.y, cb2[42].xyzw, r1.xyzw
dp4 r3.z, cb2[43].xyzw, r1.xyzw
mad o5.xyz, cb2[44].xyzx, r0.xxxx, r3.xyzx
mul r0.x, r2.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r2.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r2.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used