// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 45bd2e30e915dec1-vs.txt
// 3DMigoto: 45bd2e30e915dec1 | Matched 2 variants of 1 shaders: Nature/SpeedTree Billboard
//
//       Unity headers extracted from SpeedTreeBillboard.shader
//       Shader "Nature/SpeedTree Billboard" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//         }
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//           Pass 6/7 {
//             Name "SHADOWCASTER"
//             Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//             Cull Off
//             GpuProgramID 329055
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 2165
// 2:              GpuProgramIndex 2173
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 133 0 0
// 2:   Keywords { "SHADOWS_DEPTH" "LOD_FADE_CROSSFADE" "BILLBOARD_FACE_CAMERA_POS" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 1:   Keywords { "SHADOWS_DEPTH" "LOD_FADE_CROSSFADE" "BILLBOARD_FACE_CAMERA_POS" "EFFECT_HUE_VARIATION" }
//      undeciphered2: 1 0 9 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 176
//      Float 132 [_WindQuality]
//      Float 136 [_WindEnabled]
//      Vector 144 [_HueVariation]
//      Vector 160 [_Color]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 96 [_ST_WindBranchAdherences]
//      ConstBuffer "UnityBillboardPerCamera" 48
//      Vector 32 [unity_BillboardCameraParams]
//      ConstBuffer "UnityBillboardPerBatch" 288
//      Vector 0 [unity_BillboardInfo]
//      Vector 16 [unity_BillboardSize]
//      Vector 32 [unity_BillboardImageTexCoords0]
//      Vector 48 [unity_BillboardImageTexCoords1]
//      Vector 64 [unity_BillboardImageTexCoords2]
//      Vector 80 [unity_BillboardImageTexCoords3]
//      Vector 96 [unity_BillboardImageTexCoords4]
//      Vector 112 [unity_BillboardImageTexCoords5]
//      Vector 128 [unity_BillboardImageTexCoords6]
//      Vector 144 [unity_BillboardImageTexCoords7]
//      Vector 160 [unity_BillboardImageTexCoords8]
//      Vector 176 [unity_BillboardImageTexCoords9]
//      Vector 192 [unity_BillboardImageTexCoords10]
//      Vector 208 [unity_BillboardImageTexCoords11]
//      Vector 224 [unity_BillboardImageTexCoords12]
//      Vector 240 [unity_BillboardImageTexCoords13]
//      Vector 256 [unity_BillboardImageTexCoords14]
//      Vector 272 [unity_BillboardImageTexCoords15]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerDraw" 4
//      BindCB "UnityPerFrame" 5
//      BindCB "SpeedTreeWind" 6
//      BindCB "UnityBillboardPerCamera" 7
//      BindCB "UnityBillboardPerBatch" 8
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:23:37 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[19], immediateIndexed
dcl_constantbuffer cb5[21], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[3], immediateIndexed
dcl_constantbuffer cb8[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[8].z, cb0[8].y
lt r0.x, l(0.000000), r0.x
add r0.yzw, v0.xxyz, cb4[15].xxyz
add r1.x, r0.y, v2.w
mad r1.y, v2.w, l(0.800000), r0.z
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r1.xy, r1.xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, |r1.xxxy|, |r1.xxxy|
mad r1.xy, -|r1.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r1.xy, r1.zwzz, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, r1.xyxx
mad r1.x, r1.y, r1.y, r1.x
div r1.y, cb6[6].x, cb6[1].z
mad r1.x, cb6[1].y, r1.x, r1.y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb6[1].z
mad r1.z, v1.y, cb8[1].y, cb8[1].z
mul r2.y, r1.z, v2.y
mad r1.y, -r1.y, l(0.250000), r2.y
max r1.y, r1.y, l(0.000000)
mul r1.y, r1.y, cb6[1].z
log r1.z, r1.y
mul r1.z, r1.z, cb6[1].w
exp r1.z, r1.z
ne r1.w, r1.y, l(0.000000)
movc r1.y, r1.w, r1.z, r1.y
mul r1.x, r1.y, r1.x
add r1.y, v1.x, l(-0.500000)
mul r1.y, r1.y, cb8[1].x
mul r1.y, r1.y, v2.x
add r3.xyz, -r0.yzwy, cb7[2].xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xy, r1.zzzz, r3.xzxx
mov r3.zw, -r3.yyyy
dp2 r1.z, r3.xzxx, r3.xwxx
mul r3.xy, r3.yxyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
rsq r1.z, r1.z
mul r1.zw, r1.zzzz, r3.xxxy
mul r2.xz, r1.zzwz, r1.yyyy
mad r3.xz, cb6[0].xxzx, r1.xxxx, r2.xxzx
mov r3.y, r2.y
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r3.xyz, r1.xxxx, r3.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
sqrt r1.x, r1.x
mul r3.xyz, r1.xxxx, r3.xyzx
movc r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
add r2.xyz, r2.xyzx, v0.xyzx
mul r3.xyz, r2.yyyy, cb4[13].xyzx
mad r3.xyz, cb4[12].xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, cb4[14].xyzx, r2.zzzz, r3.xyzx
add r3.xyz, r3.xyzx, cb4[15].xyzx
mad r4.xyz, -r3.xyzx, cb2[0].wwww, cb2[0].xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
mul r5.x, r1.w, cb4[16].x
mul r5.y, r1.w, cb4[17].x
mul r5.z, r1.w, cb4[18].x
mul r6.x, -r1.z, cb4[16].z
mul r6.y, -r1.z, cb4[17].z
mul r6.z, -r1.z, cb4[18].z
add r5.xyz, r5.xyzx, r6.xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r5.xyz, r0.xxxx, r5.xyzx
dp3 r0.x, r5.xyzx, r4.xyzx
mad r0.x, -r0.x, r0.x, l(1.000000)
sqrt r0.x, r0.x
mul r0.x, r0.x, cb3[5].z
mad r4.xyz, -r5.xyzx, r0.xxxx, r3.xyzx
mov o1.xyz, r3.xyzx
mul r3.xyzw, r4.yyyy, cb5[18].xyzw
mad r3.xyzw, cb5[17].xyzw, r4.xxxx, r3.xyzw
mad r3.xyzw, cb5[19].xyzw, r4.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb5[20].xyzw
mul r4.xyzw, r2.yyyy, cb4[1].xyzw
mad r4.xyzw, cb4[0].xyzw, r2.xxxx, r4.xyzw
mad r4.xyzw, cb4[2].xyzw, r2.zzzz, r4.xyzw
add r4.xyzw, r4.xyzw, cb4[3].xyzw
ne r0.x, cb3[5].z, l(0.000000)
movc r3.xyzw, r0.xxxx, r3.xyzw, r4.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r3.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 45bd2e30e915dec1-vs.txt
ne r7.w, r3.w, l(1.0)
if_nz r7.w
  add r7.w, r3.w, -r7.y
  mad r3.x, r7.w, r7.x, r3.x
endif

div_sat r0.x, cb3[5].x, r3.w
add r0.x, r0.x, r3.z

// mov o0.xyw, r3.xyxw // Relocated from here with asmtool.py

max r1.x, r0.x, l(0.000000)
add r1.x, -r0.x, r1.x
mad o0.z, cb3[5].y, r1.x, r0.x
mov o2.xyzw, cb0[10].xyzw
add r0.x, r0.z, r0.y
add r0.x, r0.w, r0.x
frc r0.x, r0.x
mul_sat o3.z, r0.x, cb0[9].w
max r0.x, |r1.w|, |r1.z|
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min r0.y, |r1.w|, |r1.z|
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, r0.x
mad r0.z, r0.y, l(0.0208350997), l(-0.085133)
mad r0.z, r0.y, r0.z, l(0.180141)
mad r0.z, r0.y, r0.z, l(-0.330299497)
mad r0.y, r0.y, r0.z, l(0.999866)
mul r0.z, r0.y, r0.x
mad r0.z, r0.z, l(-2.000000), l(1.57079637)
lt r0.w, |r1.w|, |r1.z|
and r0.z, r0.w, r0.z
mad r0.x, r0.x, r0.y, r0.z
lt r0.y, r1.w, -r1.w
and r0.y, r0.y, l(0xc0490fdb)
add r0.x, r0.y, r0.x
min r0.y, r1.w, -r1.z
max r0.z, r1.w, -r1.z
ge r0.z, r0.z, -r0.z
lt r0.y, r0.y, -r0.y
and r0.y, r0.z, r0.y
movc r0.x, r0.y, -r0.x, r0.x
lt r0.y, r0.x, l(0.000000)
and r0.y, r0.y, l(0x40c90fdb)
add r0.x, r0.y, r0.x
add r0.x, r0.x, v2.z
mad r0.x, r0.x, cb8[0].y, l(0.500000)
round_ni r0.x, r0.x
div r0.x, r0.x, cb8[0].x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
mul r0.x, r0.x, cb8[0].x
ftou r0.x, r0.x
lt r0.y, cb8[r0.x + 2].w, l(0.000000)
mad r0.zw, -cb8[r0.x + 2].zzzw, v1.yyyx, cb8[r0.x + 2].xxxy
mad r1.xy, cb8[r0.x + 2].zwzz, v1.xyxx, cb8[r0.x + 2].xyxx
movc o3.xy, r0.yyyy, r0.zwzz, r1.xyxx
mul r0.xyz, r2.yyyy, cb4[1].xywx
mad r0.xyz, cb4[0].xywx, r2.xxxx, r0.xyzx
mad r0.xyz, cb4[2].xywx, r2.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb4[3].xywx
mul r1.xz, r0.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.x, r0.y, cb1[5].x
mov o4.z, r0.z
mul r1.w, r0.x, l(0.500000)
add r0.xy, r1.zzzz, r1.xwxx
mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o4.xy, r0.zwzz, r0.xyxx
ret 
// Approximately 0 instruction slots used