// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1027a56ae3b1d692-ps.txt
// 3DMigoto: 1027a56ae3b1d692 |    Unity headers extracted from Standard_Disintegrate_AlphaCutoff_VertexPosition.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Alpha Cutoff Bumped Diffuse VertexPos" {
//      Properties {
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _Cutoff ("Cutoff", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,1.000000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,10.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _PlayerPos ("Player position(Set in script)", Vector) = (0.000000,0.000000,0.000000,1.000000)
//       _curveVal ("CurveValue", Float) = 1.000000
//       _test ("squash test", Float) = 1.000000
//       _flip ("Flip", Range(-1.000000,1.000000)) = 1.000000
//       _UseplayerPos ("Use Player Pos (1=on)", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 66624
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 151
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_AlphaCutoff_VertexPosition.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 116 3 2
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 128 [_MetalNess]
//   Float 132 [_AlphaFactor]
//   Float 136 [_glossHigh]
//   Float 140 [_glossLow]
//   Float 144 [_MetalNessAlphaFactor]
//   Float 148 [_DisintegrateAmount]
//   Vector 160 [_DissolveColor]
//   Float 176 [_DissolveEdge]
//   Float 180 [_TileFactor]
//   Vector 224 [_PlayerPos] 3
//   Float 236 [_UseplayerPos]
//   Float 240 [_curveVal]
//   Float 244 [_test]
//   Float 248 [_flip]
//   Float 256 [_UVxSpeed]
//   Float 304 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_NoiseTex] 2D 2
//   SetTexture 2 [_BumpMap] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:58:06 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1027a56ae3b1d692-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mul r2.y, v5.y, cb0[15].y
mov r2.xz, v5.xxzx
add r2.xyz, -r2.xyzx, cb0[14].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
sqrt r1.w, r1.w
mul r1.w, r1.w, cb0[15].x
mad r2.y, cb1[0].x, cb0[16].x, v1.y
eq r2.z, cb0[14].w, l(1.000000)
movc r1.w, r2.z, r1.w, cb0[9].y
add r2.z, -r1.w, l(1.000000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s0
mul r4.xyzw, r3.xyzw, v6.xyzw
mul r2.z, r2.z, cb0[15].z
mul r2.w, cb0[11].x, cb0[15].z
lt r2.z, r2.z, r2.w
lt r2.w, l(0.000000), r1.w
and r2.z, r2.w, r2.z
mov r2.x, v1.x
mul r2.xy, r2.xyxx, cb0[11].yyyy
sample r5.xyzw, r2.xyxx, t1.xyzw, s2
if_nz r2.z
  add r1.w, -r1.w, r5.x
  mul r1.w, r1.w, r4.w
  mul r2.w, r1.w, cb0[15].z
  mov r3.xyw, cb0[10].xyxz
else 
  mov r3.xyw, r4.xyxz
  mov r2.w, r4.w
endif 
sample r5.xyzw, v1.zwzz, t2.xyzw, s1
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r4.xy, r4.wyww, r4.wxww
max r1.w, r4.x, cb0[9].x
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[8].x
mad r3.z, r3.z, v6.z, r4.y
mul r4.x, r3.z, l(0.333333343)
mad r3.z, -r3.z, l(0.333333343), cb0[8].z
mad r3.z, cb0[8].w, r3.z, r4.x
max r4.x, r4.w, cb0[8].y
add r4.y, r2.w, -cb0[19].x
lt r4.y, r4.y, l(0.000000)
discard_nz r4.y
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r4.y, r6.xyzx, cb2[0].xyzx
max r4.y, r4.y, l(0.000000)
dp3 r4.z, r6.xyzx, r6.xyzx
rsq r4.z, r4.z
mul r5.xyz, r4.zzzz, r6.xyzx
add r6.xyz, r3.xywx, -cb0[2].xyzx
mad r6.xyz, r1.wwww, r6.xyzx, cb0[2].xyzx
mad r1.w, -r1.w, cb0[2].w, cb0[2].w
mul r3.xyw, r1.wwww, r3.xyxw
mad r1.w, -r3.z, r4.x, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r0.xyzx
dp3 r1.x, r5.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
dp3 r0.x, cb2[0].xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r1.w, r1.w
mul r0.z, r0.y, l(0.797884583)
mad r0.y, -r0.y, l(0.797884583), l(1.000000)
mad r1.y, r4.y, r0.y, r0.z
mad r0.y, r1.x, r0.y, r0.z
mad r0.y, r1.y, r0.y, l(0.000010)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r1.w, l(1.000000)
mad r0.z, r0.z, l(0.968000), l(0.030000)
log r0.z, r0.z
div r0.z, l(10.000000), r0.z
mul r1.y, r0.z, r0.z
mad r0.z, r0.z, r0.z, l(2.000000)
mul r0.z, r0.z, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.y
exp r0.w, r0.w
mul r0.z, r0.z, r0.w
add r0.w, -r4.y, l(1.000000)
mul r1.y, r0.w, r0.w
mul r1.y, r1.y, r1.y
mul r0.w, r0.w, r1.y
add r1.x, -r1.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mul r1.y, r0.x, r0.x
dp2 r1.y, r1.yyyy, r1.wwww
add r1.y, r1.y, l(-0.500000)
mad r0.w, r1.y, r0.w, l(1.000000)
mad r1.x, r1.y, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, l(0.785398185)
eq r0.z, cb0[3].w, l(0.000000)
max r1.x, r0.y, l(0.000100)
sqrt r1.x, r1.x
movc r0.y, r0.z, r1.x, r0.y
mul r0.yz, r4.yyyy, r0.yywy
max r0.y, r0.y, l(0.000000)
dp3 r0.w, r6.xyzx, r6.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.y, r0.w, r0.y
mul r1.xyz, r0.zzzz, cb0[6].xyzx
mul r0.yzw, r0.yyyy, cb0[6].xxyz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r4.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r0.xxxx, r6.xyzx
mul r0.xyz, r0.yzwy, r4.xyzx
mad r0.xyz, r3.xywx, r1.xyzx, r0.xyzx
mad_sat r0.w, v2.w, cb3[1].z, cb3[1].w
mul r2.xyz, r0.xyzx, r0.wwww
mov o0.xyzw, r2.xyzw
ret 
// Approximately 0 instruction slots used