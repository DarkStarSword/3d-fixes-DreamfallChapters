// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8581caadb5355ad3-ps.txt
// 3DMigoto: 8581caadb5355ad3 |    Unity headers extracted from Standard_Disintegrate_IlumOverlay.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Bumped Diffuse Ilum Overlay" {
//      Properties {
//       _TintColor ("Tint Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,4.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _Illum ("Overlay Texture", 2D) = "black" { }
//       _IllumBump ("Overlay Normal Map", 2D) = "bump" { }
//       _IllumAmnt ("Illum Ammount", Float) = 0.000000
//       _IllumColor ("Ilum Color", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _OverlayColor ("Overlay Color", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _OverlayAmnt ("Overlay Amount", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 108367
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 151
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_IlumOverlay.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 120 5 0
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_TintColor]
//   Float 144 [_MetalNess]
//   Float 148 [_AlphaFactor]
//   Float 152 [_glossHigh]
//   Float 156 [_glossLow]
//   Float 160 [_MetalNessAlphaFactor]
//   Float 164 [_DisintegrateAmount]
//   Vector 176 [_DissolveColor]
//   Float 192 [_DissolveEdge]
//   Float 196 [_TileFactor]
//   Vector 256 [_OverlayColor]
//   Float 272 [_OverlayAmnt]
//   Float 280 [_UVxSpeed]
//   Float 320 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_NoiseTex] 2D 2
//   SetTexture 1 [_MainTex] 2D 0
//   SetTexture 2 [_IllumBump] 2D 4
//   SetTexture 3 [_Illum] 2D 3
//   SetTexture 4 [_BumpMap] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:30:20 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8581caadb5355ad3-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.y, cb1[0].x, cb0[17].z, v1.y
mov r0.x, v1.x
mul r0.xy, r0.xyxx, cb0[12].yyyy
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
add r0.x, r0.x, -cb0[10].y
add r0.y, r0.x, -cb0[20].x
lt r0.y, r0.y, l(0.000000)
discard_nz r0.y
sample r1.xyzw, v1.xyxx, t2.xyzw, s4
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.y, r1.xyxx, r1.xyxx
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
sqrt r1.z, r0.y
sample r2.xyzw, v1.zwzz, t4.xyzw, s1
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.y, r2.xyxx, r2.xyxx
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
sqrt r2.z, r0.y
mad r0.yzw, r1.xxyz, cb0[17].xxxx, r2.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
lt r1.x, r0.x, cb0[12].x
mov o0.w, r0.x
lt r0.x, l(0.000000), cb0[10].y
and r0.x, r0.x, r1.x
movc r0.yzw, r0.xxxx, r2.xxyz, r0.yyzw
dp3 r1.x, v2.xyzx, r0.yzwy
dp3 r1.y, v3.xyzx, r0.yzwy
dp3 r1.z, v4.xyzx, r0.yzwy
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r1.xxyz
dp3 r1.x, r1.xyzx, cb2[0].xyzx
add r1.yzw, -v5.xxyz, r7.xxyz
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mad r2.yzw, r1.yyzw, r2.xxxx, cb2[0].xxyz
mul r1.yzw, r1.yyzw, r2.xxxx
dp3 r1.y, r0.yzwy, r1.yzwy
dp3 r1.z, r2.yzwy, r2.yzwy
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.001000, 0.000000)
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.yzwy
dp3 r0.y, r0.yzwy, r2.xyzx
dp3 r0.z, cb2[0].xyzx, r2.xyzx
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.y, r0.y
sample r2.xyzw, v1.xyxx, t1.xyzw, s0
mul r2.xyzw, r2.xyzw, v6.xyzw
mul r3.xyzw, r2.xyzw, cb0[8].xyzw
add r1.zw, r3.wwwy, r3.wwwx
mad r0.w, r2.z, cb0[8].z, r1.w
mad r2.xyz, -r2.xyzx, cb0[8].xyzx, cb0[16].xyzx
max r1.z, r1.z, cb0[10].x
min r1.z, r1.z, l(1.000000)
mul r1.z, r1.z, cb0[9].x
mul r1.w, r0.w, l(0.333333343)
mad r0.w, -r0.w, l(0.333333343), cb0[9].z
mad r0.w, cb0[9].w, r0.w, r1.w
max r1.w, r3.w, cb0[9].y
mul r2.w, r0.w, r1.w
mad r0.w, -r0.w, r1.w, cb0[16].w
sample r4.xyzw, v1.xyxx, t3.xyzw, s3
mul r4.xyz, r4.xyzx, cb0[17].xxxx
mad r0.w, r4.x, r0.w, r2.w
mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
movc r2.xyz, r0.xxxx, cb0[11].xyzx, r2.xyzx
add r0.x, -r0.w, l(1.000000)
add r0.w, -r0.x, l(1.000000)
mad r0.w, r0.w, l(0.968000), l(0.030000)
log r0.w, r0.w
div r0.w, l(10.000000), r0.w
mul r1.w, r0.w, r0.w
mad r0.w, r0.w, r0.w, l(2.000000)
mul r0.w, r0.w, l(0.159154937)
mul r0.y, r0.y, r1.w
exp r0.y, r0.y
mul r0.y, r0.w, r0.y
mul r0.w, r0.x, r0.x
mul r1.w, r0.w, l(0.797884583)
mad r0.w, -r0.w, l(0.797884583), l(1.000000)
mad r2.w, r1.y, r0.w, r1.w
add r1.y, -r1.y, l(1.000000)
mad r0.w, r1.x, r0.w, r1.w
mad r0.w, r0.w, r2.w, l(0.000010)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.y, r0.y, r0.w
mul r0.y, r0.y, l(0.785398185)
max r0.w, r0.y, l(0.000100)
sqrt r0.w, r0.w
eq r1.w, cb0[3].w, l(0.000000)
movc r0.y, r1.w, r0.w, r0.y
mul r0.y, r1.x, r0.y
max r0.y, r0.y, l(0.000000)
add r3.xyz, r2.xyzx, -cb0[2].xyzx
mad r3.xyz, r1.zzzz, r3.xyzx, cb0[2].xyzx
mad r0.w, -r1.z, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.y, r0.w, r0.y
mul r4.xyz, r0.yyyy, cb0[6].xyzx
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.y, -r0.z, l(1.000000)
mul r0.z, r0.z, r0.z
dp2 r0.x, r0.zzzz, r0.xxxx
add r0.x, r0.x, l(-0.500000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r0.yzw, r5.xxyz, r0.yyyy, r3.xxyz
mul r0.yzw, r0.yyzw, r4.xxyz
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r1.y, r0.x, r1.y, l(1.000000)
add r1.z, -r1.x, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r0.x, r0.x, r1.z, l(1.000000)
mul r0.x, r1.y, r0.x
mul r0.x, r1.x, r0.x
mul r1.xyz, r0.xxxx, cb0[6].xyzx
mad r0.xyz, r2.xyzx, r1.xyzx, r0.yzwy
mad_sat r0.w, v2.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret 
// Approximately 0 instruction slots used