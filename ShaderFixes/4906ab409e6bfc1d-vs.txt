// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4906ab409e6bfc1d-vs.txt
// 3DMigoto: 4906ab409e6bfc1d | Matched 3 variants of 1 shaders: Nature/SpeedTree
//
//       Unity headers extracted from SpeedTree.shader
//       Shader "Nature/SpeedTree" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//          _DetailTex ("Detail", 2D) = "black" { }
//          _BumpMap ("Normal Map", 2D) = "bump" { }
//          _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//         [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//         [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//         }
//         CustomEditor "SpeedTreeMaterialInspector"
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//             Cull [_Cull]
//             GpuProgramID 4395
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 111
// 2:              GpuProgramIndex 119
// 4:              GpuProgramIndex 127
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 195 0 4
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "VERTEXLIGHT_ON" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "VERTEXLIGHT_ON" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8
//      ConstBuffer "$Globals" 176
//      Vector 48 [unity_ColorSpaceLuminance]
//      Float 128 [_WindQuality]
//      Float 132 [_WindEnabled]
//      Vector 144 [_HueVariation]
//      Vector 160 [_Color]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 32 [unity_4LightPosX0]
//      Vector 48 [unity_4LightPosY0]
//      Vector 64 [unity_4LightPosZ0]
//      Vector 80 [unity_4LightAtten0]
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 32 [_ST_WindBranch]
//      Vector 48 [_ST_WindBranchTwitch]
//      Vector 64 [_ST_WindBranchWhip]
//      Vector 80 [_ST_WindBranchAnchor]
//      Vector 96 [_ST_WindBranchAdherences]
//      Vector 112 [_ST_WindTurbulences]
//      Vector 240 [_ST_WindAnimation]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "SpeedTreeWind" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:20:50 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 7      w        5     NONE   float      w
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v7.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw

mul o4.xyz, v7.xxxx, cb0[10].xyzx
add r0.x, cb3[15].y, cb3[15].x
add r0.y, r0.x, cb3[15].z
add r0.z, v0.x, v2.y
add r0.z, r0.z, v2.x
frc r0.yz, r0.yyzy
mad r0.y, r0.z, l(0.500000), r0.y
add r0.y, r0.y, l(-0.300000)
mul_sat o5.z, r0.y, cb0[9].w
mul r0.y, cb0[8].y, cb0[8].x
ge r0.z, l(0.000000), r0.y
mul r1.xyz, cb3[17].xyzx, cb4[0].yyyy
mad r1.xyz, cb3[16].xyzx, cb4[0].xxxx, r1.xyzx
mad r1.xyz, cb3[18].xyzx, cb4[0].zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xy, r0.wwww, r1.xzxx
movc r0.zw, r0.zzzz, l(0,0,0,0), r1.xxxy
ge r1.x, r0.y, l(3.000000)
if_nz r1.x
  eq r1.x, r0.y, l(5.000000)
  if_nz r1.x
    mul r1.xyz, cb3[17].xyzx, cb4[5].yyyy
    mad r1.xyz, cb3[16].xyzx, cb4[5].xxxx, r1.xyzx
    mad r1.xyz, cb3[18].xyzx, cb4[5].zzzz, r1.xyzx
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r1.xyz, r1.wwww, r1.xyzx
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r1.w, r0.x, cb4[2].x
    add r3.x, r1.w, v3.w
    mad r3.y, r1.w, cb4[3].y, v3.w
    mul r2.w, r3.x, cb4[3].y
    mul r3.z, r2.w, l(0.500000)
    add r3.w, r3.x, -v3.z
    add r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r3.xyzw, r3.xyzw
    mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r4.xyzw, |r3.xyzw|, |r3.xyzw|
    mad r3.xyzw, -|r3.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r3.xyzw, r4.xyzw, r3.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r3.xyzw, r3.xyzw, r3.xyzw
    mul r4.w, r3.z, r3.y
    lt r2.w, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r2.wwww, r4.xyxx, r4.zwzz
    mad r2.w, -r3.y, r3.z, r4.x
    mad r2.w, r4.y, r2.w, r4.w
    add r3.y, -r2.w, r4.x
    mad r2.w, r4.y, r3.y, r2.w
    mul r2.w, r2.w, cb4[3].x
    add r3.y, -cb4[0].w, l(1.000000)
    add r3.z, -cb4[3].x, l(1.000000)
    mul r3.x, r3.z, r3.x
    mad r2.w, r2.w, r3.y, r3.x
    mad r3.x, r3.w, cb4[4].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mul r2.xyz, r2.wwww, r2.xyzx
    mad r2.xyz, r2.xyzx, cb4[2].yyyy, v0.xyzx
    mad r3.x, r1.w, l(0.100000), v3.w
    mul r1.w, cb4[7].x, cb4[15].x
    mad r3.y, r1.w, l(0.100000), v3.w
    add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r3.xy, r3.xyxx
    mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r4.xy, |r3.xyxx|, |r3.xyxx|
    mad r3.xy, -|r3.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r3.xy, r4.xyxx, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r3.xy, r3.xyxx, r3.xyxx
    mul r3.xy, r3.xyxx, r3.xyxx
    mul r1.w, r3.x, r3.y
    mad r1.w, -r1.w, cb4[7].x, l(1.000000)
    mul r2.w, r3.w, cb4[0].w
    mad r1.w, r2.w, cb4[4].x, r1.w
    mad r1.xyz, r1.xyzx, cb4[5].wwww, -r2.xyzx
    mul r1.xyz, r1.xyzx, cb4[6].yyyy
    mul r1.xyz, r1.wwww, r1.xyzx
    mad r1.xyz, r1.xyzx, v3.zzzz, r2.xyzx
  else 
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.x, r0.x, cb4[2].x
    add r3.x, r0.x, v3.w
    mad r3.y, r0.x, cb4[3].y, v3.w
    mul r0.x, r3.x, cb4[3].y
    mul r3.z, r0.x, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.x, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.xxxx, r4.xyxx, r4.zwzz
    mad r0.x, -r3.y, r3.z, r4.x
    mad r0.x, r4.y, r0.x, r4.w
    add r1.w, -r0.x, r4.x
    mad r0.x, r4.y, r1.w, r0.x
    mul r0.x, r0.x, cb4[3].x
    add r1.w, -cb4[0].w, l(1.000000)
    add r2.w, -cb4[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.x, r0.x, r1.w, r2.w
    mul r2.xyz, r0.xxxx, r2.xyzx
    mad r1.xyz, r2.xyzx, cb4[2].yyyy, v0.xyzx
  endif 
else 
  mov r1.xyz, v0.xyzx
endif 
lt r0.x, l(0.000000), r0.y
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[1].z
mad r1.w, -r1.w, l(0.250000), r1.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb4[1].z
ne r2.x, r1.w, l(0.000000)
log r2.y, r1.w
mul r2.y, r2.y, cb4[1].w
exp r2.y, r2.y
movc r1.w, r2.x, r2.y, r1.w
add r2.x, cb3[15].x, cb4[1].x
mad r2.y, cb4[1].x, l(0.800000), cb3[15].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb4[6].x, cb4[1].z
mad r2.x, cb4[1].y, r2.x, r2.y
mul r1.w, r1.w, r2.x
mad r2.xz, r0.zzwz, r1.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r0.yzw, r0.yyyy, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mul r2.xyz, r0.yyyy, cb3[13].xyzx
mad r0.xyw, cb3[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r0.xywx
mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
mov r2.x, cb3[16].x
mov r2.y, cb3[17].x
mov r2.zw, cb3[18].xxxx
mov r3.x, cb3[16].y
mov r3.y, cb3[17].y
mov r3.zw, cb3[18].yyyy
mul r3.xyzw, r3.xyzw, v2.yyyy
mad r2.xyzw, r2.xyzw, v2.xxxx, r3.xyzw
mov r3.x, cb3[16].z
mov r3.y, cb3[17].z
mov r3.zw, cb3[18].zzzz
mad r2.xyzw, r3.xyzw, v2.zzzz, r2.xyzw
dp3 r0.w, r2.xywx, r2.xywx
rsq r0.w, r0.w
mul r2.xyzw, r0.wwww, r2.xyzw
mul r3.xyz, v1.yyyy, cb3[13].yzxy
mad r3.xyz, cb3[12].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb3[14].yzxy, v1.zzzz, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r0.w, v1.w, cb3[21].w
mul r4.xyz, r2.wxyw, r3.xyzx
mad r4.xyz, r2.ywxy, r3.yzxy, -r4.xyzx
mul r4.xyz, r0.wwww, r4.xyzx
add r5.xyzw, -r0.xxxx, cb2[2].xyzw
add r6.xyzw, -r0.yyyy, cb2[3].xyzw
add r7.xyzw, -r0.zzzz, cb2[4].xyzw
mul r8.xyzw, r6.xyzw, r6.xyzw
mad r8.xyzw, r5.xyzw, r5.xyzw, r8.xyzw
mad r8.xyzw, r7.xyzw, r7.xyzw, r8.xyzw
mul r6.xyzw, r2.yyyy, r6.xyzw
mad r5.xyzw, r5.xyzw, r2.xxxx, r6.xyzw
mad r5.xyzw, r7.xyzw, r2.wwzw, r5.xyzw
rsq r6.xyzw, r8.xyzw
mul r5.xyzw, r5.xyzw, r6.xyzw
max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r6.xyzw, r8.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r6.xyzw
mul r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyz, r5.yyyy, cb2[7].xyzx
mad r6.xyz, cb2[6].xyzx, r5.xxxx, r6.xyzx
mad r5.xyz, cb2[8].xyzx, r5.zzzz, r6.xyzx
mad r5.xyz, cb2[9].xyzx, r5.wwww, r5.xyzx
eq r0.w, cb0[3].w, l(0.000000)
mad r6.xyz, r5.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r6.xyz, r5.xyzx, r6.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r6.xyz, r5.xyzx, r6.xyzx
movc r5.xyz, r0.wwww, r6.xyzx, r5.xyzx
mul r6.xyzw, r2.ywzx, r2.xyzw
dp4 r7.x, cb2[41].xyzw, r6.xyzw
dp4 r7.y, cb2[42].xyzw, r6.xyzw
dp4 r7.z, cb2[43].xyzw, r6.xyzw
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
mad r6.xyz, cb2[44].xyzx, r0.wwww, r7.xyzx
add o6.xyz, r5.xyzx, r6.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4906ab409e6bfc1d-vs.txt
ne r9.w, r1.w, l(1.0)
if_nz r9.w
  add r9.w, r1.w, -r9.y
  mad r1.x, r9.w, r9.x, r1.x
endif

mul r5.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r1.y, cb1[5].x
mul r5.w, r0.w, l(0.500000)
add o7.xy, r5.zzzz, r5.xwxx

// mov o0.xyzw, r1.xyzw // Relocated from here with asmtool.py

mov o1.x, r3.z
mov o1.y, r4.x
mov o1.z, r2.x
mov o1.w, r0.x
mov o2.x, r3.x
mov o2.y, r4.y
mov o2.z, r2.y
mov o2.w, r0.y
mov o3.x, r3.y
mov o3.y, r4.z
mov o3.z, r2.w
mov o3.w, r0.z
mov o4.w, cb0[10].w
mov o5.xy, v3.xyxx
mov o5.w, r1.z
mov o7.zw, r1.zzzw
ret 
// Approximately 0 instruction slots used