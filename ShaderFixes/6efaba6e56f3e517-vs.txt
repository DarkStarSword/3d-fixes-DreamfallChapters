// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6efaba6e56f3e517-vs.txt
// 3DMigoto: 6efaba6e56f3e517 | Matched 2 variants of 2 shaders: Legacy Shaders/Bumped Specular, Legacy Shaders/Parallax Diffuse
//
// 2:    Unity headers extracted from Normal-BumpSpec.shader
// 1:    Unity headers extracted from Normal-Parallax.shader
// 2:    Shader "Legacy Shaders/Bumped Specular" {
// 1:    Shader "Legacy Shaders/Parallax Diffuse" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 1:       _Parallax ("Height", Range(0.005000,0.080000)) = 0.020000
// 2:       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
// 1:       _MainTex ("Base (RGB)", 2D) = "white" { }
// 2:       _Shininess ("Shininess", Range(0.030000,1.000000)) = 0.078125
// 2:       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
// 1:       _ParallaxMap ("Heightmap (A)", 2D) = "black" { }
//         }
// 1:      Fallback "Legacy Shaders/Bumped Diffuse"
// 2:      Fallback "Legacy Shaders/Specular"
//         SubShader 2/2 {
// 2:        LOD 400
// 1:        LOD 500
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
// 1:          GpuProgramID 434064
// 2:          GpuProgramID 452276
//             Program "vp" {
//               SubProgram "d3d11_9x " {
//                 GpuProgramIndex 413
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from Normal-BumpSpec.shader.decompressed:
// 1: Unity 5.3 headers extracted from Normal-Parallax.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 39 0 0
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 155 5 0 0 1 2 3 4 4 5 7 8
//      ConstBuffer "$Globals" 192
//      Vector 160 [_MainTex_ST]
//      Vector 176 [_BumpMap_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityLightmaps" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:31:05 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   x           7     NONE   float   x   
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c8         cb2            12         7  ( FLT, FLT, FLT, FLT)
// c15        cb2            21         1  ( FLT, FLT, FLT, FLT)
// c16        cb3             1         1  ( FLT, FLT, FLT, FLT)
// c17        cb4             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c18, 0.5, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mad oT0.xy, v3, c1, c1.zwzw
    mad oT0.zw, v3.xyxy, c2.xyxy, c2
    mad oT4.xy, v4, c17, c17.zwzw
    mul r0, v0.y, c5
    mad r0, c4, v0.x, r0
    mad r0, c6, v0.z, r0
    add r0, r0, c7
    mul r1.x, r0.y, c3.x
    mul r1.w, r1.x, c18.x
    mul r1.xz, r0.xyww, c18.x
    add oT5.xy, r1.z, r1.xwzw
    mad oT6.x, r0.z, c16.z, c16.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT5.zw, r0
    mul r0.xyz, v1.y, c9.yzxw
    mad r0.xyz, c8.yzxw, v1.x, r0
    mad r0.xyz, c10.yzxw, v1.z, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov oT1.x, r0.z
    mul r1.y, v2.x, c12.x
    mul r1.z, v2.x, c13.x
    mul r1.x, v2.x, c14.x
    mul r2.y, v2.y, c12.y
    mul r2.z, v2.y, c13.y
    mul r2.x, v2.y, c14.y
    add r1.xyz, r1, r2
    mul r2.y, v2.z, c12.z
    mul r2.z, v2.z, c13.z
    mul r2.x, v2.z, c14.z
    add r1.xyz, r1, r2
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, v1.w, c15.w
    mul r2.xyz, r0.z, r2
    mov oT1.y, r2.x
    mov oT1.z, r1.y
    mul r3.xyz, v0.y, c9
    mad r3.xyz, c8, v0.x, r3
    mad r3.xyz, c10, v0.z, r3
    mad r3.xyz, c11, v0.w, r3
    mov oT1.w, r3.x
    mov oT2.x, r0.x
    mov oT3.x, r0.y
    mov oT2.y, r2.y
    mov oT3.y, r2.z
    mov oT2.z, r1.z
    mov oT3.z, r1.x
    mov oT2.w, r3.y
    mov oT3.w, r3.z
    mov oT4.zw, c18.y

// approximately 56 instruction slots used
vs_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.x
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6efaba6e56f3e517-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
mul r1.y, v2.x, cb2[16].x
mul r1.z, v2.x, cb2[17].x
mul r1.x, v2.x, cb2[18].x
mul r2.y, v2.y, cb2[16].y
mul r2.z, v2.y, cb2[17].y
mul r2.x, v2.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.y, v2.z, cb2[16].z
mul r2.z, v2.z, cb2[17].z
mul r2.x, v2.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o2.z, r1.y
mul r2.xyz, v1.yyyy, cb2[13].yzxy
mad r2.xyz, cb2[12].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb2[14].yzxy, v1.zzzz, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r1.xyzx, r2.xyzx
mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
mul r1.y, v1.w, cb2[21].w
mul r3.xyz, r1.yyyy, r3.xyzx
mov o2.y, r3.x
mul r4.xyz, v0.yyyy, cb2[13].xyzx
mad r4.xyz, cb2[12].xyzx, v0.xxxx, r4.xyzx
mad r4.xyz, cb2[14].xyzx, v0.zzzz, r4.xyzx
mad r4.xyz, cb2[15].xyzx, v0.wwww, r4.xyzx
mov o2.w, r4.x
mov o2.x, r2.z
mov o3.z, r1.z
mov o4.z, r1.x
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.w, r4.y
mov o4.w, r4.z
mov o3.y, r3.y
mov o4.y, r3.z
mad o5.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
mov o5.zw, l(0,0,0,0)
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
add o6.xy, r1.zzzz, r1.xwxx
mov o6.zw, r0.zzzw
mad o7.x, r0.z, cb3[1].z, cb3[1].w
ret 
// Approximately 0 instruction slots used