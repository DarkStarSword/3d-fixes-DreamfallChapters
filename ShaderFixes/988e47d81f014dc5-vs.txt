// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 988e47d81f014dc5-vs.txt
// 3DMigoto: 988e47d81f014dc5 |    Unity headers extracted from Standard_WetMask_Terrain.shader
//    Shader "Dreamfall/Unity5/Terrain/Standard_WetMask_Terrain" {
//      Properties {
//       _GlossValues ("Gloss Values for each layer Min Value 0 Max Value 1", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _GlossFactor ("Gloss Grayscale Factor", Range(0.000000,1.000000)) = 0.000000
//       _GlossTerrainMin ("Gloss Terrain min", Range(0.000000,1.000000)) = 0.000000
//       _GlossTerrainMax ("Gloss Terrain Max", Range(0.000000,1.000000)) = 1.000000
//       _GlossWet ("Gloss Wet Mask", Range(0.000000,1.000000)) = 1.000000
//       _RefMask ("Reflection Mask (R)", 2D) = "black" { }
//       _RefMaskOffsetTile ("RefMask Offset(RB), Tile(G), WetDarkening(A) ", Vector) = (0.000000,0.000000,10.000000,0.000000)
//       _RefMaskLayerControll ("Reflection Mask layer controll", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _Control ("Control (RGBA)", 2D) = "red" { }
//      [HideInInspector]  _Splat3 ("Layer 3 (A)", 2D) = "white" { }
//      [HideInInspector]  _Splat2 ("Layer 2 (B)", 2D) = "white" { }
//      [HideInInspector]  _Splat1 ("Layer 1 (G)", 2D) = "white" { }
//      [HideInInspector]  _Splat0 ("Layer 0 (R)", 2D) = "white" { }
//      [HideInInspector]  _Normal3 ("Normal 3 (A)", 2D) = "bump" { }
//      [HideInInspector]  _Normal2 ("Normal 2 (B)", 2D) = "bump" { }
//      [HideInInspector]  _Normal1 ("Normal 1 (G)", 2D) = "bump" { }
//      [HideInInspector]  _Normal0 ("Normal 0 (R)", 2D) = "bump" { }
//      }
//      Fallback "Nature/Terrain/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" "SplatCount"="4" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "SplatCount"="4" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 122833
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 159
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_WetMask_Terrain.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 37 0 0
//   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 11 3 0 0 1 2 3 4
//   ConstBuffer "$Globals" 304
//   Vector 272 [_Control_ST]
//   Vector 288 [_Splat0_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:41:56 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 988e47d81f014dc5-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[17].xyxx, cb0[17].zwzz
mad o1.zw, v3.xxxy, cb0[18].xxxy, cb0[18].zzzw
mul r1.y, v2.x, cb2[16].x
mul r1.z, v2.x, cb2[17].x
mul r1.x, v2.x, cb2[18].x
mul r2.y, v2.y, cb2[16].y
mul r2.z, v2.y, cb2[17].y
mul r2.x, v2.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.y, v2.z, cb2[16].z
mul r2.z, v2.z, cb2[17].z
mul r2.x, v2.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o2.z, r1.y
mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
mul r2.yzw, r2.yyyy, cb2[13].yyzx
mad r2.xyz, cb2[12].yzxy, r2.xxxx, r2.yzwy
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r1.xyzx, r2.xyzx
mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
mul r3.xyz, r3.xyzx, -cb2[21].wwww
mov o2.y, r3.x
mov o2.x, r2.z
mov o3.z, r1.z
mov o4.z, r1.x
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.y, r3.y
mov o4.y, r3.z
mul r1.xyz, v0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
mad o5.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o6.zw, r0.zzzw
add o6.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used