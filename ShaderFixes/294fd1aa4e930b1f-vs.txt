// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 294fd1aa4e930b1f-vs.txt
// 3DMigoto: 294fd1aa4e930b1f |    Unity headers extracted from FX-Water.shader
//    Shader "FX/Water" {
//      Properties {
//       _WaveScale ("Wave scale", Range(0.020000,0.150000)) = 0.063000
//       _ReflDistort ("Reflection distort", Range(0.000000,1.500000)) = 0.440000
//       _RefrDistort ("Refraction distort", Range(0.000000,1.500000)) = 0.400000
//       _RefrColor ("Refraction color", Color) = (0.340000,0.850000,0.920000,1.000000)
//       _Fresnel ("Fresnel (A) ", 2D) = "gray" { }
//       _BumpMap ("Normalmap ", 2D) = "bump" { }
//       WaveSpeed ("Wave speed (map1 x,y; map2 x,y)", Vector) = (19.000000,9.000000,-16.000000,-7.000000)
//       _ReflectiveColor ("Reflective color (RGB) fresnel (A) ", 2D) = "" { }
//       _ReflectiveColorCube ("Reflective color cube (RGB) fresnel (A)", CUBE) = "" { }
//       _HorizonColor ("Simple water horizon color", Color) = (0.172000,0.463000,0.435000,1.000000)
//       _MainTex ("Fallback texture", 2D) = "" { }
//       _ReflectionTex ("Internal Reflection", 2D) = "" { }
//       _RefractionTex ("Internal Refraction", 2D) = "" { }
//      }
//      SubShader 1/4 {
//        Tags { "RenderType"="Opaque" "WaterMode"="Refractive" }
//        Pass 1/1 {
//          Tags { "RenderType"="Opaque" "WaterMode"="Refractive" }
//          GpuProgramID 13869
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 8
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FX-Water.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 10 0 0
//   Keywords { "WATER_SIMPLE" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 1 1 0 0
//   ConstBuffer "$Globals" 144
//   Vector 96 [_WaveScale4]
//   Vector 112 [_WaveOffset]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 256 [unity_WorldToObject]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:11:48 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c8         cb2            16         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    dcl_texcoord v0
    mov r0, c1
    mad oT0, v0.xzxz, r0, c2
    mov r0.xyz, c3
    mul r1.xyz, r0.y, c9.xzyw
    mad r0.xyw, c8.xzzy, r0.x, r1.xyzz
    mad r0.xyz, c10.xzyw, r0.z, r0.xyww
    add r0.xyz, r0, c11.xzyw
    add oT1.xyz, r0, -v0.xzyw
    mul r0, v0.y, c5
    mad r0, c4, v0.x, r0
    mad r0, c6, v0.z, r0
    mad r0, c7, v0.w, r0
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0

// approximately 14 instruction slots used
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyz
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 294fd1aa4e930b1f-vs.txt
mov r2.xyzw, cb1[4].xyzw
mov r3.xyzw, l(0)
mul r3.x, -r1.x, r1.y
mul r5.xyzw, cb10[0].xyzw, r3.xxxx
mad r5.xyzw, cb10[1].xyzw, r3.yyyy, r5.xyzw
mad r5.xyzw, cb10[2].xyzw, r3.zzzz, r5.xyzw
mad r5.xyzw, cb10[3].xyzw, r3.wwww, r5.xyzw
mul r4.xyzw, cb11[12].xyzw, r5.xxxx
mad r4.xyzw, cb11[13].xyzw, r5.yyyy, r4.xyzw
mad r4.xyzw, cb11[14].xyzw, r5.zzzz, r4.xyzw
mad r4.xyzw, cb11[15].xyzw, r5.wwww, r4.xyzw
add r2.xyz, r2.xyz, -r4.xyz

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad o0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mad o1.xyzw, v0.xzzx, cb0[6].xywz, cb0[7].xywz
mul r0.xyz, r2.yyyy, cb2[17].xzyx
mad r0.xyz, cb2[16].xzyx, r2.xxxx, r0.xyzx
mad r0.xyz, cb2[18].xzyx, r2.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb2[19].xzyx
add o2.xyz, r0.xyzx, -v0.xzyx
ret 
// Approximately 0 instruction slots used