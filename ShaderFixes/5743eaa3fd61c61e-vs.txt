// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5743eaa3fd61c61e-vs.txt
// 3DMigoto: 5743eaa3fd61c61e |    Unity headers extracted from TreeSoftOcclusionBark.shader
//    Shader "Nature/Tree Soft Occlusion Bark" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,0.000000)
//       _MainTex ("Main Texture", 2D) = "white" { }
//       _BaseLight ("Base Light", Range(0.000000,1.000000)) = 0.350000
//       _AO ("Amb. Occlusion", Range(0.000000,10.000000)) = 2.400000
//      [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//      }
//      Dependency "BillboardShader" = "Hidden/Nature/Tree Soft Occlusion Bark Rendertex"
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TreeOpaque" }
//        Pass 1/2 {
//          Tags { "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TreeOpaque" }
//          Lighting On
//          GpuProgramID 37633
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 8
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TreeSoftOcclusionBark.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 42 0 1
//   Keywords { "FOG_EXP" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8
//   ConstBuffer "$Globals" 160
//   Float 116 [_AO]
//   Float 120 [_BaseLight]
//   Vector 128 [_Color]
//   ConstBuffer "UnityLighting" 720
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityTerrain" 272
//   Vector 80 [_TreeInstanceColor]
//   Vector 96 [_TreeInstanceScale]
//   Vector 176 [_SquashPlaneNormal]
//   Float 192 [_SquashAmount]
//   Matrix 112 [_TerrainEngineBendTree]
//   ConstBuffer "UnityPerCamera2" 64
//   Matrix 0 [_CameraToWorld]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityTerrain" 5
//   BindCB "UnityPerCamera2" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:24:33 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float      w
// NORMAL                   0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float      w
// TEXCOORD                 0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   x           3     NONE   float   x   
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             6         4  ( FLT, FLT, FLT, FLT)
// c7         cb1            14         4  ( FLT, FLT, FLT, FLT)
// c11        cb1            22         4  ( FLT, FLT, FLT, FLT)
// c15        cb2             0         8  ( FLT, FLT, FLT, FLT)
// c23        cb3             0         1  ( FLT, FLT, FLT, FLT)
// c24        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c25        cb5             5         5  ( FLT, FLT, FLT, FLT)
// c30        cb5            11         2  ( FLT, FLT, FLT, FLT)
// c32        cb6             0         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c35, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mul r0.xyz, v0, c26
    mul r1.xyz, r0.y, c28
    mad r1.xyz, c27, r0.x, r1
    mad r1.xyz, c29, r0.z, r1
    mad r1.xyz, v0, -c26, r1
    mad r0.xyz, v3.w, r1, r0
    dp3 r0.w, c30, r0
    add r0.w, r0.w, c30.w
    mad r1.xyz, r0.w, -c30, r0
    lrp r2.xyz, c31.x, r0, r1
    mul r0.xyz, r2.y, c20
    mad r0.xyz, c19, r2.x, r0
    mad r0.xyz, c21, r2.z, r0
    add r0.xyz, r0, c22
    mad r1.xyz, r0, -c7.w, c7
    mov r1.w, -r1.z
    dp3 r0.w, r1.xyww, r1.xyww
    rsq r1.z, r0.w
    mov r3.x, c35.x
    mad r0.w, r0.w, c11.z, r3.x
    rcp r0.w, r0.w
    mul r1.xyz, r1.z, r1.xyww
    mul r3.yzw, r1.y, c33.xxyz
    mad r1.xyw, c32.xyzz, r1.x, r3.yzzw
    mad r1.xyz, c34, r1.z, r1.xyww
    dp3 r1.x, v2, r1
    max r1.x, r1.x, c35.y
    mad r1.y, c1.y, v1.w, c1.z
    mul r1.x, r1.y, r1.x
    mul r0.w, r0.w, r1.x
    add r1.xzw, c23.xyyz, c23.xyyz
    mad r1.xzw, c3.xyyz, r0.w, r1
    mad r4.xyz, r0, -c8.w, c8
    mov r4.w, -r4.z
    dp3 r0.w, r4.xyww, r4.xyww
    rsq r2.w, r0.w
    mad r0.w, r0.w, c12.z, r3.x
    rcp r0.w, r0.w
    mul r3.yzw, r2.w, r4.xxyw
    mul r4.xyz, r3.z, c33
    mad r4.xyz, c32, r3.y, r4
    mad r3.yzw, c34.xxyz, r3.w, r4.xxyz
    dp3 r2.w, v2, r3.yzww
    max r2.w, r2.w, c35.y
    mul r2.w, r1.y, r2.w
    mul r0.w, r0.w, r2.w
    mad r1.xzw, c4.xyyz, r0.w, r1
    mad r4.xyz, r0, -c9.w, c9
    mad r0.xyz, r0, -c10.w, c10
    mov r4.w, -r4.z
    dp3 r2.w, r4.xyww, r4.xyww
    rsq r3.y, r2.w
    mad r2.w, r2.w, c13.z, r3.x
    rcp r2.w, r2.w
    mul r3.yzw, r3.y, r4.xxyw
    mul r4.xyz, r3.z, c33
    mad r4.xyz, c32, r3.y, r4
    mad r3.yzw, c34.xxyz, r3.w, r4.xxyz
    dp3 r3.y, v2, r3.yzww
    max r3.y, r3.y, c35.y
    mul r3.y, r1.y, r3.y
    mul r2.w, r2.w, r3.y
    mad r1.xzw, c5.xyyz, r2.w, r1
    mov r0.w, -r0.z
    dp3 r0.z, r0.xyww, r0.xyww
    rsq r2.w, r0.z
    mad r0.z, r0.z, c14.z, r3.x
    rcp r0.z, r0.z
    mul r0.xyw, r0, r2.w
    mul r3.xyz, r0.y, c33
    mad r3.xyz, c32, r0.x, r3
    mad r0.xyw, c34.xyzz, r0.w, r3.xyzz
    dp3 r0.x, v2, r0.xyww
    max r0.x, r0.x, c35.y
    mul r0.x, r1.y, r0.x
    mul r0.x, r0.z, r0.x
    mad r0.xyz, c6, r0.x, r1.xzww
    mov r0.w, c35.x
    mul r0, r0, c2
    mul oT1, r0, c25
    mul r0, r2.y, c16
    mad r0, c15, r2.x, r0
    mad r0, c17, r2.z, r0
    add r0, r0, c18
    mul r1.x, r0.z, c24.y
    exp oT2.x, -r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT0, v4

// approximately 89 instruction slots used
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[27], dynamicIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[13], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_input v0.xyz
dcl_input v1.w
dcl_input v2.xyz
dcl_input v3.w
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v0.xyzx, cb5[6].xyzx
mul r1.xyz, r0.yyyy, cb5[8].xyzx
mad r1.xyz, cb5[7].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb5[9].xyzx, r0.zzzz, r1.xyzx
mad r1.xyz, -v0.xyzx, cb5[6].xyzx, r1.xyzx
mad r0.xyz, v3.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, cb5[11].xyzx, r0.xyzx
add r0.w, r0.w, cb5[11].w
mad r1.xyz, -r0.wwww, cb5[11].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -r1.xyzx
mad r0.xyz, cb5[12].xxxx, r0.xyzx, r1.xyzx
mul r1.xyz, r0.yyyy, cb2[5].xyzx
mad r1.xyz, cb2[4].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb2[6].xyzx, r0.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[7].xyzx
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
add r2.xyz, cb3[0].xyzx, cb3[0].xyzx
mad r1.w, cb0[7].y, v1.w, cb0[7].z
mov r3.xyz, r2.xyzx
mov r2.w, l(0)
loop 
  ige r4.x, r2.w, l(4)
  breakc_nz r4.x
  mad r4.xyz, -r1.xyzx, cb1[r2.w + 14].wwww, cb1[r2.w + 14].xyzx
  mov r4.w, -r4.z
  dp3 r4.z, r4.xywx, r4.xywx
  rsq r5.x, r4.z
  mul r4.xyw, r4.xyxw, r5.xxxx
  mul r5.xyz, r4.yyyy, cb6[1].xyzx
  mad r5.xyz, cb6[0].xyzx, r4.xxxx, r5.xyzx
  mad r4.xyw, cb6[2].xyxz, r4.wwww, r5.xyxz
  mad r4.z, r4.z, cb1[r2.w + 22].z, l(1.000000)
  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
  dp3 r4.x, v2.xyzx, r4.xywx
  max r4.x, r4.x, l(0.000000)
  mul r4.x, r1.w, r4.x
  mul r4.x, r4.z, r4.x
  mad r3.xyz, cb1[r2.w + 6].xyzx, r4.xxxx, r3.xyzx
  iadd r2.w, r2.w, l(1)
endloop 
mov r3.w, l(1.000000)
mul r1.xyzw, r3.xyzw, cb0[8].xyzw
mul o2.xyzw, r1.xyzw, cb5[5].xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5743eaa3fd61c61e-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mul r1.x, r0.z, cb4[1].y
exp o3.x, -r1.x

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o1.xyzw, v4.xyzw
ret 
// Approximately 0 instruction slots used