// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b5840813b8b04fde-vs.txt
// 3DMigoto: b5840813b8b04fde | Matched 2 variants of 1 shaders: Dreamfall/Unity5/Standard_River_Depth
//
//       Unity headers extracted from Standard_River_DepthTest.shader
//       Shader "Dreamfall/Unity5/Standard_River_Depth" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Maintex (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _FoamColor ("Foam Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _FoamTex ("Foam Texture", 2D) = "white" { }
//          _FoamBump ("Foam Normal Map", 2D) = "bump" { }
//          _FoamMask ("Foam Mask", 2D) = "white" { }
//          _MaskScale ("Mask Scale", Float) = 1.000000
//          _MaskMin ("Foam Min", Float) = 0.000000
//          _MaskMax ("Foam Max", Float) = 1.000000
//          _ParallaxMap ("Height Map", 2D) = "white" { }
//          _BumpAmt ("BumpAmount", Range(0.000000,1.000000)) = 1.000000
//          _Gloss ("Water Gloss", Range(0.000000,1.000000)) = 1.000000
//          _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//          _Parallax ("Height", Range(-10.000000,10.000000)) = 0.000000
//          _MapTrength ("Parallax Map Strength", Range(-1.000000,1.000000)) = 1.000000
//          _WaterSpeed ("Water Speed1", Float) = 1.000000
//          _WaterSpeed2 ("Water Speed1", Float) = 1.000000
//          _InvFade ("Water Edge", Range(0.010000,3.000000)) = 1.000000
//          _FoamSpeed ("Foam Speed", Float) = 1.000000
//          _FoamBoost ("Foam Boost", Float) = 1.000000
//          _FoamScale ("Foam Scale", Float) = 1.000000
//          _Caustics ("Caustic Amount", Float) = 1.000000
//         }
//         Fallback "Legacy Shaders/Diffuse"
//         SubShader 1/1 {
//           LOD 400
//           Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//           Pass 3/3 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry" "RenderType"="Opaque" }
//             ZWrite Off
//             GpuProgramID 134951
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 227
// 2:              GpuProgramIndex 235
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Standard_River_DepthTest.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 49 0 0
// 2:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
// 1:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 155 5 0 0 1 2 3 4 4 5 7 8
//      ConstBuffer "$Globals" 304
//      Vector 256 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityShadows" 416
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityShadows" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityLightmaps" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:49:27 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b5840813b8b04fde-vs.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b5840813b8b04fde-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
mul r1.x, v2.x, cb3[16].x
mul r1.y, v2.x, cb3[17].x
mul r1.z, v2.x, cb3[18].x
mul r2.x, v2.y, cb3[16].y
mul r2.y, v2.y, cb3[17].y
mul r2.z, v2.y, cb3[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb3[16].z
mul r2.y, v2.z, cb3[17].z
mul r2.z, v2.z, cb3[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o2.z, r1.x
mul r2.xyz, v1.yyyy, cb3[13].xyzx
mad r2.xyz, cb3[12].xyzx, v1.xxxx, r2.xyzx
mad r2.xyz, cb3[14].xyzx, v1.zzzz, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r1.zxyz, r2.yzxy
mad r3.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
mul r1.w, v1.w, cb3[21].w
mul r3.xyz, r1.wwww, r3.xyzx
mov o2.y, r3.x
mov o2.x, r2.x
mul r4.xyz, v0.yyyy, cb3[13].xyzx
mad r4.xyz, cb3[12].xyzx, v0.xxxx, r4.xyzx
mad r4.xyz, cb3[14].xyzx, v0.zzzz, r4.xyzx
mad r4.xyz, cb3[15].xyzx, v0.wwww, r4.xyzx
mov o2.w, r4.x
mov o3.z, r1.y
mov o3.x, r2.y
mov o3.y, r3.y
mov o3.w, r4.y
mov o4.z, r1.z
mov o4.x, r2.z
mov o4.y, r3.z
mov o4.w, r4.z
mul r0.y, r0.y, cb1[5].x
mul r5.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o5.zw, r0.zzzw
add o5.xy, r5.zzzz, r5.xwxx
add r0.xyz, -r4.xyzx, r7.xyzx
add r4.xyz, r4.xyzx, -cb2[25].xyzx
mul o8.xyz, r4.xyzx, cb2[25].wwww
dp3 o6.z, r0.xyzx, r1.xyzx
dp3 o6.y, r0.xyzx, r3.xyzx
dp3 o6.x, r0.xyzx, r2.xyzx
mad o7.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
mov o7.zw, l(0,0,0,0)
mul r0.x, v0.y, cb3[5].z
mad r0.x, cb3[4].z, v0.x, r0.x
mad r0.x, cb3[6].z, v0.z, r0.x
add r0.x, r0.x, cb3[7].z
add r0.y, -cb2[25].w, l(1.000000)
mul o8.w, r0.y, -r0.x
ret 
// Approximately 0 instruction slots used