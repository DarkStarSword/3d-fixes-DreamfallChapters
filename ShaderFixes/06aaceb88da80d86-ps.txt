// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 06aaceb88da80d86-ps.txt
// 3DMigoto: 06aaceb88da80d86 |    Unity headers extracted from ShadowSoftener-PrePassLighting.shader
//    Shader "Hidden/ShadowSoftener-PrePassLighting" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//      }
//      Fallback "Hidden/Internal-PrePassLighting"
//      SubShader 1/1 {
//        Pass 1/3 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend DstColor Zero
//          GpuProgramID 6109
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 37
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ShadowSoftener-PrePassLighting.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 95 3 2
//   Keywords { "SPOT" "SHADOWS_DEPTH" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 0 [_ShadowMapTexture_TexelSize]
//   Vector 64 [unity_ColorSpaceLuminance]
//   Vector 144 [_LightPos]
//   Vector 160 [_LightColor]
//   Vector 176 [unity_LightmapFade]
//   Vector 256 [_CameraNormalsTexture_ST]
//   Matrix 192 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [_LightTexture0] 2D 3
//   SetTexture 2 [_LightTextureB0] 2D 2
//   SetTexture 3 [_CameraNormalsTexture] 2D 4
//   SetTexture 4 [_ShadowMapTexture] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:55:33 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 06aaceb88da80d86-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r11.xyzw, cb10[0].xyzw, r9.xxxx
mul r10.xyzw, cb11[12].xyzw, r11.xxxx
mad r10.xyzw, cb11[13].xyzw, r11.yyyy, r10.xyzw
mad r10.xyzw, cb11[14].xyzw, r11.zzzz, r10.xyzw
mad r10.xyzw, cb11[15].xyzw, r11.wwww, r10.xyzw
add r8.xyz, r8.xyz, -r10.xyz

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s1
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx

// copy depth from r2.z to r12.x:
mov r12.x, r2.z

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 06aaceb88da80d86-ps.txt

add r13.x, r12.x, -r7.y
mul r13.x, r7.x, r13.x
mul r15.xyzw, cb10[0].xyzw, r13.xxxx
mul r14.xyzw, cb11[12].xyzw, r15.xxxx
mad r14.xyzw, cb11[13].xyzw, r15.yyyy, r14.xyzw
mad r14.xyzw, cb11[14].xyzw, r15.zzzz, r14.xyzw
mad r14.xyzw, cb11[15].xyzw, r15.wwww, r14.xyzw
add r2.xyw, r2.xyzw, -r14.xyxz

add r3.xyz, r2.xywx, -cb3[25].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb3[25].w, r0.x, r2.z
add r0.yzw, -r2.xxyw, cb0[9].xxyz
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.w, r1.z
mul r0.yzw, r0.yyzw, r1.wwww
mul r3.xyz, r2.yyyy, cb0[13].xywx
mad r3.xyz, cb0[12].xywx, r2.xxxx, r3.xyzx
mad r3.xyz, cb0[14].xywx, r2.wwww, r3.xyzx
add r3.xyz, r3.xyzx, cb0[15].xywx
div r3.xy, r3.xyxx, r3.zzzz
sample_b r4.xyzw, r3.xyxx, t1.xyzw, s3, l(-8.000000)
lt r1.w, r3.z, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r1.w, r1.w, r4.w
mul r1.z, r1.z, cb0[9].w
sample r3.xyzw, r1.zzzz, t2.xyzw, s2
mul r1.z, r1.w, r3.x
mad_sat r1.w, r0.x, cb3[24].z, cb3[24].w
mul r3.xyzw, r2.yyyy, cb3[9].xyzw
mad r3.xyzw, cb3[8].xyzw, r2.xxxx, r3.xyzw
mad r3.xyzw, cb3[10].xyzw, r2.wwww, r3.xyzw
add r3.xyzw, r3.xyzw, cb3[11].xyzw
div r3.xyz, r3.xyzx, r3.wwww
mul r4.xy, cb0[0].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, -cb0[0].xyxx, l(3.500000, 3.500000, 0.000000, 0.000000), r3.xyxx
mul r3.xy, r3.xyxx, cb0[0].zwzz
frc r4.zw, r3.xxxy
add r5.xy, -r4.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
round_ni r3.xy, r3.xyxx
mad r3.xy, r3.xyxx, cb0[0].xyxx, r4.xyxx
mov r2.z, l(0)
mov r3.w, l(0)
loop 
  ige r4.x, r3.w, l(8)
  breakc_nz r4.x
  ieq r4.x, r3.w, l(7)
  movc r4.x, r4.x, r4.w, l(1.000000)
  movc r4.x, r3.w, r4.x, r5.y
  itof r6.y, r3.w
  mov r4.y, r2.z
  mov r5.z, l(0)
  loop 
    ige r5.w, r5.z, l(8)
    breakc_nz r5.w
    itof r6.x, r5.z
    add r6.zw, r6.xxxy, l(0.000000, 0.000000, -4.000000, -4.000000)
    dp2 r5.w, r6.zwzz, r6.zwzz
    sqrt r5.w, r5.w
    mad r6.xz, r6.xxyx, cb0[0].xxyx, r3.xxyx
    mul r5.w, r5.w, cb3[5].x
    mad r5.w, -r5.w, l(0.010000), r3.z
    sample_c_lz r5.w, r6.xzxx, t4.xxxx, s0, r5.w
    ge r5.w, r5.w, l(0.500000)
    and r5.w, r5.w, l(0x3f800000)
    ieq r6.x, r5.z, l(7)
    movc r6.x, r6.x, r4.z, l(1.000000)
    movc r6.x, r5.z, r6.x, r5.x
    mul r5.w, r5.w, r6.x
    mad r4.y, r5.w, r4.x, r4.y
    iadd r5.z, r5.z, l(1)
  endloop 
  mov r2.z, r4.y
  iadd r3.w, r3.w, l(1)
endloop 
mad_sat r1.w, r2.z, l(0.0204081628), r1.w
mul r1.z, r1.w, r1.z
mad r1.xy, r1.xyxx, cb0[16].xyxx, cb0[16].zwzz
sample r3.xyzw, r1.xyxx, t3.xyzw, s4
mad r1.xyw, r3.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
dp3 r2.z, r1.xywx, r1.xywx
rsq r2.z, r2.z
mul r1.xyw, r1.xyxw, r2.zzzz
dp3 r2.z, r0.yzwy, r1.xywx
max r2.z, r2.z, l(0.000000)
add r2.xyw, r2.xyxw, -r8.xyxz
dp3 r3.x, r2.xywx, r2.xywx
rsq r3.x, r3.x
mad r0.yzw, -r2.xxyw, r3.xxxx, r0.yyzw
dp3 r2.x, r0.yzwy, r0.yzwy
rsq r2.x, r2.x
mul r0.yzw, r0.yyzw, r2.xxxx
dp3 r0.y, r0.yzwy, r1.xywx
max r0.y, r0.y, l(0.000000)
mul r0.z, r3.w, l(128.000000)
log r0.y, r0.y
mul r0.y, r0.y, r0.z
exp r0.y, r0.y
mov_sat r0.z, r1.z
mul r0.y, r0.z, r0.y
mul r0.z, r1.z, r2.z
mul r1.xyz, r0.zzzz, cb0[10].xyzx
mul r2.xyz, cb0[4].xyzx, cb0[10].xyzx
add r0.zw, r2.yyyz, r2.xxxx
mad r0.z, cb0[10].z, cb0[4].z, r0.z
mul r0.w, r0.w, r2.y
sqrt r0.w, r0.w
dp2 r0.w, cb0[4].wwww, r0.wwww
add r0.z, r0.w, r0.z
mul r1.w, r0.z, r0.y
mad r0.x, r0.x, cb0[11].z, cb0[11].w
add_sat r0.x, -r0.x, l(1.000000)
mul r0.xyzw, r0.xxxx, r1.xyzw
exp o0.xyzw, -r0.xyzw
ret 
// Approximately 0 instruction slots used