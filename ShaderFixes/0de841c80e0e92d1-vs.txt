// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 0de841c80e0e92d1-vs.txt
// 3DMigoto: 0de841c80e0e92d1 |    Unity headers extracted from HighPrecisionDepthMap.shader
//    Shader "Hidden/SSAO Pro - High Precision Depth Map" {
//      Properties {
//       _MainTex ("", 2D) = "white" { }
//       _Cutoff ("", Float) = 0.500000
//       _Color ("", Color) = (1.000000,1.000000,1.000000,1.000000)
//      }
//      Fallback Off
//      SubShader 7/9 {
//        Tags { "RenderType"="TreeBillboard" }
//        Pass 1/1 {
//          Tags { "RenderType"="TreeBillboard" }
//          Cull Off
//          GpuProgramID 470839
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 21
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from HighPrecisionDepthMap.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 15 0 0
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   ConstBuffer "UnityTerrain" 272
//   Vector 196 [_TreeBillboardCameraRight] 3
//   Vector 208 [_TreeBillboardCameraUp]
//   Vector 224 [_TreeBillboardCameraFront]
//   Vector 240 [_TreeBillboardCameraPos]
//   Vector 256 [_TreeBillboardDistances]
//   BindCB "UnityPerDraw" 0
//   BindCB "UnityTerrain" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:04:11 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         4  ( FLT, FLT, FLT, FLT)
// c5         cb1            12         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c10, 0, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    slt oT0.y, c10.x, v2.y
    add r0.xyz, v0, -c8
    dp3 r0.x, r0, r0
    slt r0.x, c9.x, r0.x
    mov r1.xy, v3
    mov r1.z, v2.y
    mad r0.xyz, r0.x, -r1, r1
    mad r1.xyz, c5.yzww, r0.x, v0
    lrp r1.w, c8.w, r0.z, r0.y
    abs r0.x, r0.x
    mul r0.xyz, r0.x, c7
    mad r1.xyz, c6, r1.w, r1
    mad r0.xyz, r0, c6.w, r1
    mul r1, r0.y, c2
    mad r1, c1, r0.x, r1
    mad r0, c3, r0.z, r1
    mad r0, c4.xywz, v0.w, r0.xywz
    mad oPos.xy, r0.z, c0, r0
    mov oPos.zw, r0.xywz
    mov oT0.zw, r0
    mov oT0.x, v2.x

// approximately 21 instruction slots used
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[17], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, -cb1[15].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
lt r0.x, cb1[16].x, r0.x
mov r1.xy, v3.xyxx
mov r1.z, v2.y
movc r0.xyz, r0.xxxx, l(0,0,0,0), r1.xyzx
add r0.z, -r0.y, r0.z
mad r0.y, cb1[15].w, r0.z, r0.y
mad r1.xyz, cb1[12].yzwy, r0.xxxx, v0.xyzx
mul r0.xzw, |r0.xxxx|, cb1[14].xxyz
mad r1.xyz, cb1[13].xyzx, r0.yyyy, r1.xyzx
mad r0.xyz, r0.xzwx, cb1[13].wwww, r1.xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 0de841c80e0e92d1-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mov o1.zw, r0.zzzw
lt r0.x, l(0.000000), v2.y
and o1.y, r0.x, l(0x3f800000)
mov o1.x, v2.x
ret 
// Approximately 0 instruction slots used