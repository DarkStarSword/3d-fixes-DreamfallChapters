// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 252cc94d1ba6fdeb-vs.txt
// 3DMigoto: 252cc94d1ba6fdeb | Matched 2 variants of 2 shaders: Legacy Shaders/Bumped Diffuse, Legacy Shaders/Transparent/Cutout/Bumped Diffuse
//
// 2:    Unity headers extracted from AlphaTest-Bumped.shader
// 1:    Unity headers extracted from Normal-Bumped.shader
// 1:    Shader "Legacy Shaders/Bumped Diffuse" {
// 2:    Shader "Legacy Shaders/Transparent/Cutout/Bumped Diffuse" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 2:       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
// 1:       _MainTex ("Base (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
// 2:       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         }
// 1:      Fallback "Legacy Shaders/Diffuse"
// 2:      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//         SubShader 1/1 {
//           LOD 300
// 2:        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
// 1:        Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
// 2:          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
// 1:          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
// 2:          ColorMask RGB
// 1:          GpuProgramID 1415
// 2:          GpuProgramID 4395
//             Program "vp" {
//               SubProgram "d3d11 " {
//                 GpuProgramIndex 50
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from AlphaTest-Bumped.shader.decompressed:
// 1: Unity 5.3 headers extracted from Normal-Bumped.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 77 0 0
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 139 4 0 0 1 2 3 4 7 8
// 1:   ConstBuffer "$Globals" 176
// 2:   ConstBuffer "$Globals" 192
//      Vector 48 [unity_ColorSpaceLuminance]
//      Vector 144 [_MainTex_ST]
//      Vector 160 [_BumpMap_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 32 [unity_4LightPosX0]
//      Vector 48 [unity_4LightPosY0]
//      Vector 64 [unity_4LightPosZ0]
//      Vector 80 [unity_4LightAtten0]
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:10:36 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 6      w        5     NONE   float      w
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 252cc94d1ba6fdeb-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
mad o1.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
mul r1.xyz, v1.yyyy, cb3[13].yzxy
mad r1.xyz, cb3[12].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb3[14].yzxy, v1.zzzz, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o2.x, r1.z
mul r1.w, v1.w, cb3[21].w
mul r2.x, v2.x, cb3[16].x
mul r2.y, v2.x, cb3[17].x
mul r2.z, v2.x, cb3[18].x
mul r3.x, v2.y, cb3[16].y
mul r3.y, v2.y, cb3[17].y
mul r3.z, v2.y, cb3[18].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, v2.z, cb3[16].z
mul r3.y, v2.z, cb3[17].z
mul r3.z, v2.z, cb3[18].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, r1.xyzx, r2.zxyz
mad r3.xyz, r2.yzxy, r1.yzxy, -r3.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
mov o2.y, r3.x
mov o2.z, r2.x
mul r4.xyz, v0.yyyy, cb3[13].xyzx
mad r4.xyz, cb3[12].xyzx, v0.xxxx, r4.xyzx
mad r4.xyz, cb3[14].xyzx, v0.zzzz, r4.xyzx
mad r4.xyz, cb3[15].xyzx, v0.wwww, r4.xyzx
mov o2.w, r4.x
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.y, r3.y
mov o4.y, r3.z
mov o3.z, r2.y
mov o3.w, r4.y
mov o4.w, r4.z
mov o4.z, r2.z
mul r1.x, r2.y, r2.y
mad r1.x, r2.x, r2.x, -r1.x
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r5.x, cb2[41].xyzw, r3.xyzw
dp4 r5.y, cb2[42].xyzw, r3.xyzw
dp4 r5.z, cb2[43].xyzw, r3.xyzw
mad r1.xyz, cb2[44].xyzx, r1.xxxx, r5.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r2.xyzw
dp4 r3.y, cb2[39].xyzw, r2.xyzw
dp4 r3.z, cb2[40].xyzw, r2.xyzw
add r1.xyz, r1.xyzx, r3.xyzx
max r3.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r3.xyzw, -r4.yyyy, cb2[3].xyzw
mul r5.xyzw, r2.yyyy, r3.xyzw
mul r3.xyzw, r3.xyzw, r3.xyzw
add r6.xyzw, -r4.xxxx, cb2[2].xyzw
add r4.xyzw, -r4.zzzz, cb2[4].xyzw
mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
mad r2.xyzw, r4.xyzw, r2.zzzz, r5.xyzw
mad r3.xyzw, r6.xyzw, r6.xyzw, r3.xyzw
mad r3.xyzw, r4.xyzw, r4.xyzw, r3.xyzw
rsq r4.xyzw, r3.xyzw
mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyzw, r3.xyzw, r2.xyzw
mul r3.xyz, r2.yyyy, cb2[7].xyzx
mad r3.xyz, cb2[6].xyzx, r2.xxxx, r3.xyzx
mad r2.xyz, cb2[8].xyzx, r2.zzzz, r3.xyzx
mad r2.xyz, cb2[9].xyzx, r2.wwww, r2.xyzx
add o5.xyz, r1.xyzx, r2.xyzx
mad o5.w, r0.z, cb4[1].z, cb4[1].w
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o6.zw, r0.zzzw
add o6.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used