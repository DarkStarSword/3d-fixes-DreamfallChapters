// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8c19f4aa88693aad-vs.txt
// 3DMigoto: 8c19f4aa88693aad | Matched 3 variants of 1 shaders: Nature/SpeedTree
//
//       Unity headers extracted from SpeedTree.shader
//       Shader "Nature/SpeedTree" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//          _DetailTex ("Detail", 2D) = "black" { }
//          _BumpMap ("Normal Map", 2D) = "bump" { }
//          _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//         [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//         [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//         }
//         CustomEditor "SpeedTreeMaterialInspector"
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//           Pass 7/7 {
//             Tags { "LIGHTMODE"="Vertex" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//             Cull [_Cull]
//             GpuProgramID 444375
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 8403
// 2:              GpuProgramIndex 8405
// 4:              GpuProgramIndex 8407
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 289 0 8
// 2:   Keywords { "FOG_EXP" "GEOM_TYPE_LEAF" }
// 4:   Keywords { "FOG_EXP2" "GEOM_TYPE_LEAF" }
// 1:   Keywords { "FOG_LINEAR" "GEOM_TYPE_LEAF" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 63 6 0 0 2 1 1 2 3 4 4 5 5 6
//      ConstBuffer "$Globals" 128
//      Float 96 [_WindQuality]
//      Float 100 [_WindEnabled]
//      Vector 112 [_Color]
//      ConstBuffer "UnityLighting" 720
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 224 [unity_LightPosition0]
//      Vector 240 [unity_LightPosition1]
//      Vector 256 [unity_LightPosition2]
//      Vector 272 [unity_LightPosition3]
//      Vector 288 [unity_LightPosition4]
//      Vector 304 [unity_LightPosition5]
//      Vector 320 [unity_LightPosition6]
//      Vector 336 [unity_LightPosition7]
//      Vector 352 [unity_LightAtten0]
//      Vector 368 [unity_LightAtten1]
//      Vector 384 [unity_LightAtten2]
//      Vector 400 [unity_LightAtten3]
//      Vector 416 [unity_LightAtten4]
//      Vector 432 [unity_LightAtten5]
//      Vector 448 [unity_LightAtten6]
//      Vector 464 [unity_LightAtten7]
//      Vector 480 [unity_SpotDirection0]
//      Vector 496 [unity_SpotDirection1]
//      Vector 512 [unity_SpotDirection2]
//      Vector 528 [unity_SpotDirection3]
//      Vector 544 [unity_SpotDirection4]
//      Vector 560 [unity_SpotDirection5]
//      Vector 576 [unity_SpotDirection6]
//      Vector 592 [unity_SpotDirection7]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 128 [glstate_matrix_invtrans_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Vector 0 [glstate_lightmodel_ambient]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 32 [_ST_WindBranch]
//      Vector 48 [_ST_WindBranchTwitch]
//      Vector 64 [_ST_WindBranchWhip]
//      Vector 80 [_ST_WindBranchAnchor]
//      Vector 96 [_ST_WindBranchAdherences]
//      Vector 112 [_ST_WindTurbulences]
//      Vector 128 [_ST_WindLeaf1Ripple]
//      Vector 144 [_ST_WindLeaf1Tumble]
//      Vector 160 [_ST_WindLeaf1Twitch]
//      Vector 176 [_ST_WindLeaf2Ripple]
//      Vector 192 [_ST_WindLeaf2Tumble]
//      Vector 208 [_ST_WindLeaf2Twitch]
//      Vector 240 [_ST_WindAnimation]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "SpeedTreeWind" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:38:45 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyz 
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x  w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[35], dynamicIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[16], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyz
dcl_input v5.xyzw
dcl_input v7.xw
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v7.xxxx, cb0[7].xyzx
mul r0.w, cb0[6].y, cb0[6].x
ge r1.x, l(0.000000), r0.w
mul r1.yzw, cb2[17].xxyz, cb4[0].yyyy
mad r1.yzw, cb2[16].xxyz, cb4[0].xxxx, r1.yyzw
mad r1.yzw, cb2[18].xxyz, cb4[0].zzzz, r1.yyzw
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mul r1.yzw, r1.yyzw, r2.xxxx
movc r1.xyz, r1.xxxx, l(0,0,0,0), r1.yzwy
add r2.xyz, v0.xyzx, -v4.xyzx
eq r1.w, v7.w, l(0.000000)
dp3 r2.w, r2.xyzx, r2.xyzx
sqrt r2.w, r2.w
dp3 r3.x, r2.xyzx, cb2[8].xyzx
dp3 r3.y, r2.xyzx, cb2[9].xyzx
dp3 r3.z, r2.xyzx, cb2[10].xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mul r3.xyz, r2.wwww, r3.xyzx
movc r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
lt r3.xy, l(1.000000, 0.000000, 0.000000, 0.000000), r0.wwww
lt r1.w, r0.w, l(5.000000)
and r1.w, r1.w, r3.x
if_nz r1.w
  add r1.w, v4.y, v4.x
  eq r2.w, r0.w, l(4.000000)
  lt r3.x, l(0.000000), v5.w
  movc r3.zw, r3.xxxx, cb4[11].xxxy, cb4[8].xxxy
  add r1.w, r1.w, r3.z
  add r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  mad r1.w, r1.w, l(2.000000), l(-1.000000)
  mul r3.z, |r1.w|, |r1.w|
  mad r1.w, -|r1.w|, l(2.000000), l(3.000000)
  mad r1.w, r3.z, r1.w, l(-0.500000)
  dp2 r1.w, r1.wwww, r3.wwww
  mul r4.xyz, v5.zzzz, l(0.062500, 1.000000, 16.000000, 0.000000)
  frc r4.xyz, r4.xyzx
  mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r4.xyz, r1.wwww, r4.xyzx
  mad r2.xyz, r4.xyzx, v5.xxxx, r2.xyzx
  if_nz r2.w
    mul r4.xyzw, v5.yyyy, l(0.062500, 1.000000, 16.000000, 30.299999)
    frc r4.xyzw, r4.xyzw
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    movc r5.xyzw, r3.xxxx, cb4[12].xyzw, cb4[9].xyzw
    movc r3.xzw, r3.xxxx, cb4[13].xxyz, cb4[10].xxyz
    mul r1.w, r4.w, l(3.000000)
    mad r6.y, r4.w, l(3.000000), r5.x
    mad r6.x, r5.x, l(0.750000), -r1.w
    add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r6.xy, r6.xyxx
    mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r6.zw, |r6.xxxy|, |r6.xxxy|
    mad r6.xy, -|r6.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r6.xy, r6.zwzz, r6.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r6.xy, r6.xyxx, r6.xyxx
    dp3 r1.w, r2.xyzx, r2.xyzx
    sqrt r1.w, r1.w
    mad r2.w, r6.x, r6.x, r6.y
    mul r5.x, r5.z, v5.x
    mul r2.w, r2.w, r5.x
    sincos r5.x, r7.x, r2.w
    add r2.w, -r7.x, l(1.000000)
    mul r8.xyzw, r4.xxxy, r2.wwww
    mul r7.yzw, r4.zzxy, r5.xxxx
    mad r9.xy, r8.zyzz, r4.zyzz, r7.wyww
    mad r10.xy, r8.xwxx, r4.xyxx, r7.xxxx
    mad r9.z, r8.w, r4.z, -r7.z
    mad r11.xy, r8.yzyy, r4.yzyy, -r7.ywyy
    mad r11.z, r8.w, r4.z, r7.z
    mul r5.x, r4.z, r4.z
    mad r11.w, r5.x, r2.w, r7.x
    mul r7.xyz, r1.yzxy, r4.zxyz
    mad r7.xyz, r4.yzxy, r1.zxyz, -r7.xyzx
    dp3 r1.y, r1.xyzx, r4.xyzx
    max r1.y, r1.y, l(-1.000000)
    min r1.y, r1.y, l(1.000000)
    add r7.w, r1.y, r7.y
    dp3 r2.w, r7.xzwx, r7.xzwx
    rsq r2.w, r2.w
    mul r4.xyz, r2.wwww, r7.zxwz
    add r2.w, -|r1.y|, l(1.000000)
    sqrt r2.w, r2.w
    mad r5.x, |r1.y|, l(-0.0187292993), l(0.074261)
    mad r5.x, r5.x, |r1.y|, l(-0.212114394)
    mad r5.x, r5.x, |r1.y|, l(1.57072878)
    mul r5.z, r2.w, r5.x
    mad r5.z, r5.z, l(-2.000000), l(3.14159274)
    lt r1.y, r1.y, -r1.y
    and r1.y, r1.y, r5.z
    mad r1.y, r5.x, r2.w, r1.y
    mad r2.w, -r6.y, r6.y, r6.x
    mad r6.x, r4.w, l(3.000000), r3.w
    mul r6.y, r6.x, l(0.870000)
    add r5.xz, r6.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
    frc r5.xz, r5.xxzx
    mad r5.xz, r5.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
    mul r6.xy, |r5.xzxx|, |r5.xzxx|
    mad r5.xz, -|r5.xxzx|, l(2.000000, 0.000000, 2.000000, 0.000000), l(3.000000, 0.000000, 3.000000, 0.000000)
    mad r5.xz, r6.xxyx, r5.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
    add r5.xz, r5.xxzx, r5.xxzx
    mul r3.w, r5.z, r5.z
    mad r3.w, r3.w, r5.x, l(1.000000)
    mul_sat r3.w, r3.w, l(0.500000)
    log r3.w, r3.w
    mul r3.z, r3.w, r3.z
    exp r3.z, r3.z
    mul r2.w, r5.y, r2.w
    mad r1.y, r1.y, r5.w, r2.w
    mad r1.y, r3.x, r3.z, r1.y
    mul r1.y, r1.y, v5.x
    sincos r3.x, r5.x, r1.y
    add r1.y, -r5.x, l(1.000000)
    mul r6.xyzw, r4.yyyz, r1.yyyy
    mul r3.xzw, r4.xxyz, r3.xxxx
    mad r7.xy, r6.zyzz, r4.xzxx, r3.wxww
    mad r8.xy, r6.xwxx, r4.yzyy, r5.xxxx
    mad r7.z, r6.w, r4.x, -r3.z
    mad r12.xy, r6.yzyy, r4.zxzz, -r3.xwxx
    mad r12.z, r6.w, r4.x, r3.z
    mul r2.w, r4.x, r4.x
    mad r7.w, r2.w, r1.y, r5.x
    mov r10.z, r11.x
    mov r10.w, r9.x
    mov r8.z, r7.y
    mov r8.w, r12.y
    dp3 r4.x, r10.xzwx, r8.xzwx
    mov r12.w, r8.y
    dp3 r4.y, r10.xwzx, r12.xzwx
    dp3 r4.z, r10.xzwx, r7.xzwx
    mov r9.w, r10.y
    dp3 r5.x, r9.ywzy, r8.xzwx
    dp3 r5.y, r9.yzwy, r12.xzwx
    dp3 r5.z, r9.ywzy, r7.xzwx
    dp3 r6.x, r11.yzwy, r8.xzwx
    dp3 r6.y, r11.ywzy, r12.xzwx
    dp3 r6.z, r11.yzwy, r7.xzwx
    dp3 r1.y, r4.xyzx, v2.xyzx
    dp3 r2.w, r5.xyzx, v2.xyzx
    dp3 r3.x, r6.xyzx, v2.xyzx
    dp3 r4.x, r4.xyzx, r2.xyzx
    dp3 r4.y, r5.xyzx, r2.xyzx
    dp3 r4.z, r6.xyzx, r2.xyzx
    dp3 r3.z, r4.xyzx, r4.xyzx
    rsq r3.z, r3.z
    mul r4.xyz, r3.zzzz, r4.xyzx
    mul r2.xyz, r1.wwww, r4.xyzx
  else 
    mov r1.y, v2.x
    mov r2.w, v2.y
    mov r3.x, v2.z
  endif 
else 
  mov r1.y, v2.x
  mov r2.w, v2.y
  mov r3.x, v2.z
endif 
add r2.xyz, r2.xyzx, v4.xyzx
ge r1.w, r0.w, l(3.000000)
if_nz r1.w
  eq r0.w, r0.w, l(5.000000)
  if_nz r0.w
    mul r4.xyz, cb2[17].xyzx, cb4[5].yyyy
    mad r4.xyz, cb2[16].xyzx, cb4[5].xxxx, r4.xyzx
    mad r4.xyz, cb2[18].xyzx, cb4[5].zzzz, r4.xyzx
    dp3 r0.w, r4.xyzx, r4.xyzx
    rsq r0.w, r0.w
    mul r4.xyz, r0.wwww, r4.xyzx
    mul r5.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r5.xyz, r5.xyzx
    mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r5.xyz, r5.xyzx, v3.zzzz
    add r0.w, cb2[15].y, cb2[15].x
    add r0.w, r0.w, cb4[2].x
    add r6.x, r0.w, v3.w
    mad r6.y, r0.w, cb4[3].y, v3.w
    mul r1.w, r6.x, cb4[3].y
    mul r6.z, r1.w, l(0.500000)
    add r6.w, r6.x, -v3.z
    add r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r6.xyzw, r6.xyzw
    mad r6.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r7.xyzw, |r6.xyzw|, |r6.xyzw|
    mad r6.xyzw, -|r6.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r6.xyzw, r7.xyzw, r6.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r6.xyzw, r6.xyzw, r6.xyzw
    mul r7.w, r6.z, r6.y
    lt r1.w, r7.w, l(0.000000)
    mov r7.y, -r7.w
    mov r7.xz, l(-1.000000,0,1.000000,0)
    movc r3.zw, r1.wwww, r7.xxxy, r7.zzzw
    mad r1.w, -r6.y, r6.z, r3.z
    mad r1.w, r3.w, r1.w, r7.w
    add r3.z, -r1.w, r3.z
    mad r1.w, r3.w, r3.z, r1.w
    mul r1.w, r1.w, cb4[3].x
    add r3.z, -cb4[0].w, l(1.000000)
    add r3.w, -cb4[3].x, l(1.000000)
    mul r3.w, r3.w, r6.x
    mad r1.w, r1.w, r3.z, r3.w
    mad r3.z, r6.w, cb4[4].x, l(1.000000)
    mul r1.w, r1.w, r3.z
    mul r5.xyz, r1.wwww, r5.xyzx
    mad r5.xyz, r5.xyzx, cb4[2].yyyy, r2.xyzx
    mad r6.x, r0.w, l(0.100000), v3.w
    mul r0.w, cb4[7].x, cb4[15].x
    mad r6.y, r0.w, l(0.100000), v3.w
    add r3.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    frc r3.zw, r3.zzzw
    mad r3.zw, r3.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
    mul r6.xy, |r3.zwzz|, |r3.zwzz|
    mad r3.zw, -|r3.zzzw|, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    mad r3.zw, r6.xxxy, r3.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    add r3.zw, r3.zzzw, r3.zzzw
    mul r3.zw, r3.zzzw, r3.zzzw
    mul r0.w, r3.z, r3.w
    mad r0.w, -r0.w, cb4[7].x, l(1.000000)
    mul r1.w, r6.w, cb4[0].w
    mad r0.w, r1.w, cb4[4].x, r0.w
    mad r4.xyz, r4.xyzx, cb4[5].wwww, -r5.xyzx
    mul r4.xyz, r4.xyzx, cb4[6].yyyy
    mul r4.xyz, r0.wwww, r4.xyzx
    mad r2.xyz, r4.xyzx, v3.zzzz, r5.xyzx
  else 
    mul r4.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, r4.xyzx, v3.zzzz
    add r0.w, cb2[15].y, cb2[15].x
    add r0.w, r0.w, cb4[2].x
    add r5.x, r0.w, v3.w
    mad r5.y, r0.w, cb4[3].y, v3.w
    mul r0.w, r5.x, cb4[3].y
    mul r5.z, r0.w, l(0.500000)
    add r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r5.xyz, r5.xyzx
    mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r6.xyz, |r5.xyzx|, |r5.xyzx|
    mad r5.xyz, -|r5.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r5.xyz, r6.xyzx, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r5.xyz, r5.xyzx, r5.xyzx
    mul r6.w, r5.z, r5.y
    lt r0.w, r6.w, l(0.000000)
    mov r6.y, -r6.w
    mov r6.xz, l(-1.000000,0,1.000000,0)
    movc r3.zw, r0.wwww, r6.xxxy, r6.zzzw
    mad r0.w, -r5.y, r5.z, r3.z
    mad r0.w, r3.w, r0.w, r6.w
    add r1.w, -r0.w, r3.z
    mad r0.w, r3.w, r1.w, r0.w
    mul r0.w, r0.w, cb4[3].x
    add r1.w, -cb4[0].w, l(1.000000)
    add r3.z, -cb4[3].x, l(1.000000)
    mul r3.z, r3.z, r5.x
    mad r0.w, r0.w, r1.w, r3.z
    mul r4.xyz, r0.wwww, r4.xyzx
    mad r2.xyz, r4.xyzx, cb4[2].yyyy, r2.xyzx
  endif 
endif 
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[1].z
mad r1.w, -r1.w, l(0.250000), r2.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb4[1].z
ne r3.z, r1.w, l(0.000000)
log r3.w, r1.w
mul r3.w, r3.w, cb4[1].w
exp r3.w, r3.w
movc r1.w, r3.z, r3.w, r1.w
add r4.x, cb2[15].x, cb4[1].x
mad r4.y, cb4[1].x, l(0.800000), cb2[15].y
add r3.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
frc r3.zw, r3.zzzw
mad r3.zw, r3.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r4.xy, |r3.zwzz|, |r3.zwzz|
mad r3.zw, -|r3.zzzw|, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mad r3.zw, r4.xxxy, r3.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
add r3.zw, r3.zzzw, r3.zzzw
mad r3.z, r3.w, r3.w, r3.z
div r3.w, cb4[6].x, cb4[1].z
mad r3.z, cb4[1].y, r3.z, r3.w
mul r1.w, r1.w, r3.z
mad r4.xz, r1.xxzx, r1.wwww, r2.xxzx
mov r4.y, r2.y
dp3 r1.x, r4.xyzx, r4.xyzx
rsq r1.x, r1.x
mul r1.xzw, r1.xxxx, r4.xxyz
mul r1.xzw, r0.wwww, r1.xxzw
movc r1.xzw, r3.yyyy, r1.xxzw, r2.xxyz
mul r2.xyz, r1.zzzz, cb2[5].xyzx
mad r2.xyz, cb2[4].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb2[6].xyzx, r1.wwww, r2.xyzx
add r2.xyz, r2.xyzx, cb2[7].xyzx
mul r3.yzw, r2.wwww, cb2[9].xxyz
mad r3.yzw, cb2[8].xxyz, r1.yyyy, r3.yyzw
mad r3.xyz, cb2[10].xyzx, r3.xxxx, r3.yzwy
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r5.xyz, r4.xyzx
mov r0.w, l(0)
loop 
  ige r1.y, r0.w, l(4)
  breakc_nz r1.y
  mad r6.xyz, -r2.xyzx, cb1[r0.w + 14].wwww, cb1[r0.w + 14].xyzx
  dp3 r1.y, r6.xyzx, r6.xyzx
  rsq r2.w, r1.y
  mul r6.xyz, r2.wwww, r6.xyzx
  mad r1.y, r1.y, cb1[r0.w + 22].z, l(1.000000)
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  dp3 r2.w, r6.xyzx, cb1[r0.w + 30].xyzx
  max r2.w, r2.w, l(0.000000)
  add r2.w, r2.w, -cb1[r0.w + 22].x
  mul_sat r2.w, r2.w, cb1[r0.w + 22].y
  mul r1.y, r1.y, r2.w
  dp3 r2.w, r3.xyzx, r6.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r1.y, r1.y, r2.w
  mad r5.xyz, cb1[r0.w + 6].xyzx, r1.yyyy, r5.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mul o2.xyz, r0.xyzx, r5.xyzx
mul r0.xyzw, r1.zzzz, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, r1.wwww, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8c19f4aa88693aad-vs.txt
ne r13.w, r0.w, l(1.0)
if_nz r13.w
  add r13.w, r0.w, -r13.y
  mad r0.x, r13.w, r13.x, r0.x
endif

mov o1.x, r0.z
mov o1.yz, v3.xxyx
mov o1.w, l(0)
mov o2.w, cb0[7].w
ret 
// Approximately 0 instruction slots used