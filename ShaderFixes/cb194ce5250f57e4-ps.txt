// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cb194ce5250f57e4-ps.txt
// 3DMigoto: cb194ce5250f57e4 |    Unity headers extracted from Standard_DirectionBlend.shader
//    Shader "Dreamfall/Unity5/Standard_DirectionBlend" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _BlendColor ("Blend Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//       _BlendTile ("Blend Map Tile Factor", Float) = 1.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _Boost ("Fresnel Boost", Float) = 1.000000
//       _Direction ("Direction", Vector) = (0.000000,1.000000,0.000000,1.000000)
//       _Adjust ("Fresnel Adjust", Range(-1.000000,1.000000)) = 0.000000
//       _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//       _2ndAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//       _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//       _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//       _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//       _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 101156
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 251
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_DirectionBlend.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 126 6 0
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 6 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Vector 144 [_BlendColor]
//   Vector 176 [_Direction]
//   Float 192 [_Adjust]
//   Float 196 [_Boost]
//   Float 200 [_BlendTile]
//   Float 204 [_MainAlphaFactor]
//   Float 208 [_2ndAlphaFactor]
//   Float 212 [_MainGloss]
//   Float 216 [_2ndGloss]
//   Float 220 [_MainMetallness]
//   Float 224 [_2ndMetallness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BlendTex] 2D 2
//   SetTexture 2 [_Detail] 2D 3
//   SetTexture 3 [_BumpMap] 2D 1
//   SetTexture 4 [_DetailBump] 2D 4
//   SetTexture 5 [_BlendBump] 2D 5
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:54:58 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cb194ce5250f57e4-ps.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

sample r0.xyzw, v1.xyxx, t3.xyzw, s1
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
sample r1.xyzw, v1.zwzz, t4.xyzw, s4
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xy, v1.xyxx, cb0[12].zzzz
sample r2.xyzw, r1.xyxx, t5.xyzw, s5
sample r1.xyzw, r1.xyxx, t1.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
mad r2.xyz, -r0.xyzx, r0.wwww, r2.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r3.x, v2.xyzx, r0.xyzx
dp3 r3.y, v3.xyzx, r0.xyzx
dp3 r3.z, v4.xyzx, r0.xyzx
add r3.xyz, r3.xyzx, -cb0[12].xxxx
dp3_sat r0.w, r3.xyzx, cb0[11].xyzx
mul_sat r0.w, r0.w, cb0[12].y
mad r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
dp3 r2.x, v2.xyzx, r0.xyzx
dp3 r2.y, v3.xyzx, r0.xyzx
dp3 r2.z, v4.xyzx, r0.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r2.xyzx
dp3 r1.w, r2.xyzx, cb2[0].xyzx
max r1.w, r1.w, l(0.000000)
add r2.xyz, -v5.xyzx, r6.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mad r3.xyz, r2.xyzx, r2.wwww, cb2[0].xyzx
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r2.x, r0.xyzx, r2.xyzx
dp3 r2.y, r3.xyzx, r3.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.001000, 0.000000, 0.000000)
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, r3.xxyz
dp3 r0.x, r0.xyzx, r2.yzwy
dp3 r0.y, cb2[0].xyzx, r2.yzwy
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.x, r0.x
add r0.z, r1.y, r1.x
mad r0.z, r1.z, l(0.333333343), r0.z
max r0.z, r0.z, cb0[13].x
sample r3.xyzw, v1.zwzz, t2.xyzw, s3
mul r2.yzw, r3.xxyz, l(0.000000, 1.800000, 1.800000, 1.800000)
min r2.yzw, r2.yyzw, l(0.000000, 0.900000, 0.900000, 0.900000)
add r2.yzw, r2.yyzw, l(0.000000, 0.100000, 0.100000, 0.100000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s0
mul r2.yzw, r2.yyzw, r3.xxyz
add r3.x, r2.z, r2.y
mad r3.x, r2.w, l(0.333333343), r3.x
mul r2.yzw, r2.yyzw, cb0[8].xxyz
max r3.x, r3.x, cb0[12].w
mul r3.x, r3.x, cb0[13].y
mad r0.z, cb0[13].z, r0.z, -r3.x
mad r0.z, r0.w, r0.z, r3.x
add r0.z, -r0.z, l(1.000000)
add r3.x, -r0.z, l(1.000000)
mad r3.x, r3.x, l(0.968000), l(0.030000)
log r3.x, r3.x
div r3.x, l(10.000000), r3.x
mul r3.y, r3.x, r3.x
mad r3.x, r3.x, r3.x, l(2.000000)
mul r3.x, r3.x, l(0.159154937)
mul r0.x, r0.x, r3.y
exp r0.x, r0.x
mul r0.x, r3.x, r0.x
mul r3.x, r0.z, r0.z
mul r3.y, r3.x, l(0.797884583)
mad r3.x, -r3.x, l(0.797884583), l(1.000000)
mad r3.z, r2.x, r3.x, r3.y
add r2.x, -r2.x, l(1.000000)
mad r3.x, r1.w, r3.x, r3.y
mad r3.x, r3.x, r3.z, l(0.000010)
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mul r0.x, r0.x, r3.x
mul r0.x, r0.x, l(0.785398185)
max r3.x, r0.x, l(0.000100)
sqrt r3.x, r3.x
eq r3.y, cb0[3].w, l(0.000000)
movc r0.x, r3.y, r3.x, r0.x
mul r0.x, r1.w, r0.x
max r0.x, r0.x, l(0.000000)
mad r1.xyz, r1.xyzx, cb0[9].xyzx, -r2.yzwy
mad r1.xyz, r0.wwww, r1.xyzx, r2.yzwy
add r2.yzw, r1.xxyz, -cb0[2].xxyz
add r3.x, -cb0[13].w, cb0[14].x
mad r0.w, r0.w, r3.x, cb0[13].w
mad r2.yzw, r0.wwww, r2.yyzw, cb0[2].xxyz
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r2.yzwy, r2.yzwy
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.x, r0.w, r0.x
mul r3.xyz, r0.xxxx, cb0[6].xyzx
add r4.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.x, -r0.y, l(1.000000)
mul r0.y, r0.y, r0.y
dp2 r0.y, r0.yyyy, r0.zzzz
add r0.y, r0.y, l(-0.500000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
mad r0.xzw, r4.xxyz, r0.xxxx, r2.yyzw
mul r0.xzw, r0.xxzw, r3.xxyz
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.x, r2.y
mad r2.x, r0.y, r2.x, l(1.000000)
add r2.y, -r1.w, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
mad r0.y, r0.y, r2.y, l(1.000000)
mul r0.y, r2.x, r0.y
mul r0.y, r1.w, r0.y
mul r2.xyz, r0.yyyy, cb0[6].xyzx
mad o0.xyz, r1.xyzx, r2.xyzx, r0.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used