// DO NOT AUTOFIX - causes artefacts! Volumetric light shafts final interpolation
// 3DMigoto: fd5ce6ff932e7623 | Matched 4 variants of 1 shaders: Hidden/Final Interpolation
//
//       Unity headers extracted from FinalInterpolation.shader
//       Shader "Hidden/Final Interpolation" {
//         Properties {
//          _ZTest ("", Float) = 8.000000
//         }
//         Fallback Off
//         SubShader 1/1 {
//           Pass 1/1 {
//             ZTest [_ZTest]
//             ZWrite Off
//             Blend One SrcAlpha
//             GpuProgramID 38947
//             Program "vp" {
//               SubProgram "d3d11 " {
// 4:              GpuProgramIndex 13
// 8:              GpuProgramIndex 15
// 1:              GpuProgramIndex 5
// 2:              GpuProgramIndex 7
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from FinalInterpolation.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 5 0 0
// 4:   Keywords { "DIRECTIONAL_SHAFTS" "LIGHT_OFF_SCREEN" "FRUSTUM_SHAFTS" }
// 1:   Keywords { "LIGHT_ON_SCREEN" "DIRECTIONAL_SHAFTS" "FRUSTUM_SHAFTS" }
// 2:   Keywords { "LIGHT_ON_SCREEN" "SPOT_SHAFTS" "FRUSTUM_SHAFTS" }
// 8:   Keywords { "SPOT_SHAFTS" "LIGHT_OFF_SCREEN" "FRUSTUM_SHAFTS" }
//      undeciphered2: 1 0 2 0 0 0
//      undeciphered3: 1 1 0 0
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerDraw" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:04:35 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_temps 1
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw
mul o1.y, r0.y, cb0[5].x
mov o1.xz, r0.xxwx
ret 
// Approximately 0 instruction slots used