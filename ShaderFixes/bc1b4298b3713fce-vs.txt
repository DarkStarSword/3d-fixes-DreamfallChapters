// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bc1b4298b3713fce-vs.txt
// 3DMigoto: bc1b4298b3713fce | Matched 4 variants of 1 shaders: Hidden/Internal-ScreenSpaceShadows
//
//       Unity headers extracted from Internal-ScreenSpaceShadows.shader
//       Shader "Hidden/Internal-ScreenSpaceShadows" {
//         Properties {
//          _ShadowMapTexture ("", any) = "" { }
//         }
//         Fallback Off
//         SubShader 1/2 {
//           Pass 1/1 {
//             ZTest Always
//             ZWrite Off
//             Cull Off
//             GpuProgramID 1194
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 8:              GpuProgramIndex 11
// 1:              GpuProgramIndex 2
// 2:              GpuProgramIndex 5
// 4:              GpuProgramIndex 8
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Internal-ScreenSpaceShadows.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 13 0 0
// 4:   Keywords { "SHADOWS_SINGLE_CASCADE" }
// 8:   Keywords { "SHADOWS_SPLIT_SPHERES" "SHADOWS_SINGLE_CASCADE" }
// 2:   Keywords { "SHADOWS_SPLIT_SPHERES" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 11 3 0 0 1 2 3 4
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 160 [unity_CameraInvProjection]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerCameraRare" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:49:37 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// SV_POSITION              0   xyzw        4      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             5         1  ( FLT, FLT, FLT, FLT)
// c2         cb1            10         4  ( FLT, FLT, FLT, FLT)
// c6         cb2             0         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mul r0, v0.y, c7
    mad r0, c6, v0.x, r0
    mad r0, c8, v0.z, r0
    add r0, r0, c9
    mad oPos.xy, r0.w, c0, r0
    mov oT0.xy, v1
    mov oT1.xyz, v2
    mul r0.y, r0.y, c1.x
    mul r1.xyz, r0.y, c3
    mad r1.xyz, c2, r0.x, r1
    mov oPos.zw, r0
    add r0.xyz, r1, -c4
    add r1.xyz, r1, c4
    add r1.xyz, r1, c5
    add r0.xyz, r0, c5
    mov r0.w, -r0.z
    mov oT2.xyz, r0.xyww
    mov r1.w, -r1.z
    mov oT3.xyz, r1.xyww

// approximately 19 instruction slots used
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[14], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_output o0.xy
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output_siv o4.xyzw, position
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mov o0.xy, v1.xyxx
mov o1.xyz, v2.xyzx
mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw

// Relocated to here with asmtool.py
mov o4.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bc1b4298b3713fce-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r1.x, r0.y, cb0[5].x
mul r1.xyz, r1.xxxx, cb1[11].xyzx
mad r1.xyz, cb1[10].xyzx, r0.xxxx, r1.xyzx

// mov o4.xyzw, r0.xyzw // Relocated from here with asmtool.py

add r0.xyz, r1.xyzx, -cb1[12].xyzx
add r1.xyz, r1.xyzx, cb1[12].xyzx
add r1.xyz, r1.xyzx, cb1[13].xyzx
add r0.xyz, r0.xyzx, cb1[13].xyzx
mov r0.w, -r0.z
mov o2.xyz, r0.xywx
mov r1.w, -r1.z
mov o3.xyz, r1.xywx
ret 
// Approximately 0 instruction slots used