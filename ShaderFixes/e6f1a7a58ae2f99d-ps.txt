// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed e6f1a7a58ae2f99d-ps.txt
// 3DMigoto: e6f1a7a58ae2f99d |    Unity headers extracted from Internal-ScreenSpaceShadows.shader
//    Shader "Hidden/Internal-ScreenSpaceShadows" {
//      Properties {
//       _ShadowMapTexture ("", any) = "" { }
//      }
//      Fallback Off
//      SubShader 1/2 {
//        Pass 1/1 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 1194
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 16
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Internal-ScreenSpaceShadows.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 52 1 0
//   Keywords { "SHADOWS_SPLIT_SPHERES" }
//   undeciphered2: 1 2 3 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "UnityPerCamera" 144
//   Vector 112 [_ZBufferParams]
//   Vector 128 [unity_OrthoParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 0 [unity_ShadowSplitSpheres0]
//   Vector 16 [unity_ShadowSplitSpheres1]
//   Vector 32 [unity_ShadowSplitSpheres2]
//   Vector 48 [unity_ShadowSplitSpheres3]
//   Vector 64 [unity_ShadowSplitSqRadii]
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   BindCB "UnityPerCamera" 0
//   BindCB "UnityPerCameraRare" 1
//   BindCB "UnityShadows" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:58:36 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// SV_POSITION              0   xyzw        4      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[22], immediateIndexed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

sample r0.xyzw, v0.xyxx, t0.xyzw, s0
mad r0.y, cb0[7].x, r0.x, cb0[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.y, r0.x
mad r0.y, cb0[8].w, r0.z, r0.y
add r1.xyz, -v2.xyzx, v3.xyzx
mad r0.xzw, r0.xxxx, r1.xxyz, v2.xxyz
mad r0.xzw, -v1.xxyz, r0.yyyy, r0.xxzw
mul r1.xyz, r0.yyyy, v1.xyzx
mad r0.xyz, cb0[8].wwww, r0.xzwx, r1.xyzx

// copy depth from r0.z to r5.x:
mov r5.x, r0.z

mul r1.xyzw, r0.yyyy, cb1[19].xyzw
mad r1.xyzw, cb1[18].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb1[20].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb1[21].xyzw

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed e6f1a7a58ae2f99d-ps.txt

add r6.x, r5.x, -r4.y
mul r6.x, r4.x, r6.x
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r0.xyz, r0.xyzw, -r7.xyzx

add r1.xyz, r0.xyzx, -cb2[0].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
add r2.xyz, r0.xyzx, -cb2[1].xyzx
dp3 r1.y, r2.xyzx, r2.xyzx
add r2.xyz, r0.xyzx, -cb2[2].xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
add r2.xyz, r0.xyzx, -cb2[3].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
lt r1.xyzw, r1.xyzw, cb2[4].xyzw
movc r2.xyz, r1.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.yzw, r2.xxyz, r1.yyzw
max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb2[14].xyzx, r0.zzzz, r2.xyzx
mad r2.xyz, cb2[15].xyzx, r0.wwww, r2.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
mul r3.xyz, r0.yyyy, cb2[9].xyzx
mad r3.xyz, cb2[8].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb2[10].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb2[11].xyzx, r0.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r1.xxxx, r2.xyzx
mul r3.xyz, r0.yyyy, cb2[17].xyzx
mad r3.xyz, cb2[16].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb2[18].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb2[19].xyzx, r0.wwww, r3.xyzx
mad r1.xyz, r3.xyzx, r1.zzzz, r2.xyzx
mul r2.xyz, r0.yyyy, cb2[21].xyzx
mad r2.xyz, cb2[20].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb2[22].xyzx, r0.zzzz, r2.xyzx
mad r2.xyz, cb2[23].xyzx, r0.wwww, r2.xyzx
add r0.xyz, r0.xyzx, -cb2[25].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mad_sat r0.x, r0.x, cb2[24].z, cb2[24].w
mad r0.yzw, r2.xxyz, r1.wwww, r1.xxyz
sample_c_lz r0.y, r0.yzyy, t1.xxxx, s1, r0.w
add r0.z, -cb2[24].x, l(1.000000)
mad r0.y, r0.y, r0.z, cb2[24].x
add o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 0 instruction slots used