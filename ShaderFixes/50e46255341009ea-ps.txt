// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 50e46255341009ea-ps.txt
// 3DMigoto: 50e46255341009ea |    Unity headers extracted from Standard_BillboardGrass.shader
//    Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff ("Cutoff", Float) = 0.500000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Cull Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 99583
//          Program "fp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 246
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model ps_4_0_level_9_1
//   undeciphered1: 201510240 35 3 0
//   Keywords { "POINT" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 96 [_LightColor0]
//   Float 224 [_Cutoff]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 1
//   SetTexture 2 [unity_NHxRoughness] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:22:46 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         4  ( FLT, FLT, FLT, FLT)
// c6         cb0            14         1  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c8         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t1               
// s2             s2              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, -0.5, 1, 16, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl t2.xyz
    dcl_pp t3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s2
    mad_pp r1, r0.w, t3.w, c9.x
    mul_pp r0, r0, t3
    mad_pp r2, r0.w, t3.w, -c6.x
    texkill r1
    texkill r2
    add r1.xyz, -t2, c7
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, t1
    dp3_pp r1.w, r2, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r1.xyz, r1, -r1.w, r2
    add r2.xyz, -t2, c8
    nrm_pp r3.xyz, r2
    dp3_pp r3.w, r1, r3
    dp3_sat_pp r1.x, t1, r3
    mul_pp r1.y, r3.w, r3.w
    mul_pp r2.x, r1.y, r1.y
    mov r2.y, c9.y
    mul r1.yzw, t2.y, c3.xxyz
    mad r1.yzw, c2.xxyz, t2.x, r1
    mad r1.yzw, c4.xxyz, t2.z, r1
    add r1.yzw, r1, c5.xxyz
    dp3 r3.xy, r1.yzww, r1.yzww
    texld r2, r2, s0
    texld_pp r3, r3, s1
    mul_pp r1.y, r2.x, c9.z
    mul_pp r1.yzw, r1.y, c0.xxyz
    mad_pp r0.xyz, r0, c0.w, r1.yzww
    mul_pp r2.w, r0.w, t3.w
    mul_pp r1.yzw, r3.x, c1.xxyz
    mul_pp r1.xyz, r1.x, r1.yzww
    mul_pp r2.xyz, r0, r1
    mov_pp oC0, r2

// approximately 40 instruction slots used (3 texture, 37 arithmetic)
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 50e46255341009ea-ps.txt
mov r4.xyzw, cb1[4].xyzw
mov r5.xyzw, l(0)
mul r5.x, -r3.x, r3.y
mul r7.xyzw, cb10[0].xyzw, r5.xxxx
mad r7.xyzw, cb10[1].xyzw, r5.yyyy, r7.xyzw
mad r7.xyzw, cb10[2].xyzw, r5.zzzz, r7.xyzw
mad r7.xyzw, cb10[3].xyzw, r5.wwww, r7.xyzw
mul r6.xyzw, cb11[12].xyzw, r7.xxxx
mad r6.xyzw, cb11[13].xyzw, r7.yyyy, r6.xyzw
mad r6.xyzw, cb11[14].xyzw, r7.zzzz, r6.xyzw
mad r6.xyzw, cb11[15].xyzw, r7.wwww, r6.xyzw
add r4.xyz, r4.xyz, -r6.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mad r1.x, r0.w, v4.w, l(-0.500000)
mul r0.xyzw, r0.xyzw, v4.xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mad r1.x, r0.w, v4.w, -cb0[14].x
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
add r1.xyz, -v3.xyzx, r4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v2.xyzx
dp3 r1.w, r1.xyzx, r2.xyzx
add r1.w, r1.w, r1.w
mad r1.xyz, r2.xyzx, -r1.wwww, r1.xyzx
add r2.xyz, -v3.xyzx, cb2[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
dp3_sat r1.y, v2.xyzx, r2.xyzx
mul r1.x, r1.x, r1.x
mul r2.x, r1.x, r1.x
mov r2.y, l(1.000000)
sample r2.xyzw, r2.xyxx, t2.xyzw, s0
mul r1.x, r2.x, l(16.000000)
mul r1.xzw, r1.xxxx, cb0[2].xxyz
mad r0.xyz, r0.xyzx, cb0[2].wwww, r1.xzwx
mul r0.w, r0.w, v4.w
mov o0.w, r0.w
mul r1.xzw, v3.yyyy, cb0[9].xxyz
mad r1.xzw, cb0[8].xxyz, v3.xxxx, r1.xxzw
mad r1.xzw, cb0[10].xxyz, v3.zzzz, r1.xxzw
add r1.xzw, r1.xxzw, cb0[11].xxyz
dp3 r0.w, r1.xzwx, r1.xzwx
sample r2.xyzw, r0.wwww, t1.xyzw, s1
mul r1.xzw, r2.xxxx, cb0[6].xxyz
mul r1.xyz, r1.yyyy, r1.xzwx
mul o0.xyz, r0.xyzx, r1.xyzx
ret 
// Approximately 0 instruction slots used