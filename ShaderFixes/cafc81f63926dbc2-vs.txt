// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed cafc81f63926dbc2-vs.txt
// 3DMigoto: cafc81f63926dbc2 |    Unity headers extracted from Reflect-VertexLit.shader
//    Shader "Legacy Shaders/Reflective/VertexLit" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//      }
//      Fallback "Legacy Shaders/VertexLit"
//      SubShader 1/1 {
//        LOD 150
//        Tags { "RenderType"="Opaque" }
//        Pass 3/4 {
//          Tags { "LIGHTMODE"="VertexLM" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 184536
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 41
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-VertexLit.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 9 0 0
//   Keywords { "FOG_LINEAR" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 192
//   Vector 96 [_MainTex_ST]
//   Matrix 112 [unity_LightmapMatrix]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:52:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1     zw        0     NONE   float     zw
// TEXCOORD                 2   x           1     NONE   float   x   
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         3  ( FLT, FLT, FLT, FLT)
// c4         cb0            10         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c9         cb2             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mad oT0.xy, v1, c1, c1.zwzw
    mul r0.xy, v2.y, c3.yxzw
    mad r0.xy, c2.yxzw, v2.x, r0
    add oT0.zw, r0.xyxy, c4.xyyx
    mul r0, v0.y, c6
    mad r0, c5, v0.x, r0
    mad r0, c7, v0.z, r0
    add r0, r0, c8
    mad oT1.x, r0.z, c9.z, c9.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0

// approximately 11 instruction slots used
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xy
dcl_output o0.xy
dcl_output o0.zw
dcl_output o1.x
dcl_output_siv o2.xyzw, position
dcl_temps 2

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xy, v2.yyyy, cb0[8].xyxx
mad r0.xy, cb0[7].xyxx, v2.xxxx, r0.xyxx
add o0.zw, r0.xxxy, cb0[10].xxxy
mad o0.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw

// Relocated to here with asmtool.py
mov o2.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed cafc81f63926dbc2-vs.txt
ne r1.w, r0.w, l(1.0)
if_nz r1.w
  add r1.w, r0.w, -r1.y
  mad r0.x, r1.w, r1.x, r0.x
endif

mad o1.x, r0.z, cb2[1].z, cb2[1].w

// mov o2.xyzw, r0.xyzw // Relocated from here with asmtool.py

ret 
// Approximately 0 instruction slots used