// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e345c5f4b3e92408-ps.txt
// 3DMigoto: e345c5f4b3e92408 | Matched 2 variants of 1 shaders: Chickenlord/Rim Lighting
//
//       Unity headers extracted from Rim_Opaque.shader
//       Shader "Chickenlord/Rim Lighting" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//          _RimColor ("Rim Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//          _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _RS ("Rim Power", Range(0.200000,6.000000)) = 2.500000
//         }
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//             GpuProgramID 43803
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 68
// 2:              GpuProgramIndex 80
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Rim_Opaque.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 45 2 0
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//      undeciphered2: 1 2 4 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 208
//      Vector 96 [_LightColor0]
//      Vector 112 [_SpecColor]
//      Vector 128 [_Color]
//      Vector 144 [_RimColor]
//      Float 160 [_Shininess]
//      Float 164 [_RS]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      SetTexture 0 [_MainTex] 2D 0
//      SetTexture 1 [_BumpMap] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:57:37 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 6      w        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         5  ( FLT, FLT, FLT, FLT)
// c5         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c7         cb3             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
// s1             s1              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
    def c8, 2, -1, 0, 1
    def c9, 128, 0, 0, 0
    dcl t0
    dcl t1
    dcl t2
    dcl t3
    dcl t4
    dcl_2d s0
    dcl_2d s1
    mov r0.x, -t1.w
    mov r0.y, -t2.w
    mov r0.z, -t3.w
    add r0.xyz, r0, c5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r1.xyz, r0, r0.w, c6
    mul_pp r0.xyz, r0.w, r0
    nrm_pp r2.xyz, r1
    mov r1.x, t0.z
    mov r1.y, t0.w
    texld_pp r1, r1, s1
    texld_pp r3, t0, s0
    mad_pp r4.x, r1.w, c8.x, c8.y
    mad_pp r4.y, r1.y, c8.x, c8.y
    dp2add_sat_pp r0.w, r4, r4, c8.z
    add_pp r0.w, -r0.w, c8.w
    rsq_pp r0.w, r0.w
    rcp_pp r4.z, r0.w
    dp3_pp r1.x, t1, r4
    dp3_pp r1.y, t2, r4
    dp3_pp r1.z, t3, r4
    dp3_pp r0.w, r1, r2
    dp3_pp r4.w, r1, c6
    max_pp r1.x, r4.w, c8.z
    max r4.w, r0.w, c8.z
    mov r0.w, c4.x
    mul r0.w, r0.w, c9.x
    pow r1.y, r4.w, r0.w
    mul r0.w, r3.w, r1.y
    mul_pp r1.yzw, r3.wzyx, c2.wzyx
    mov r2.xyz, c0
    mul r2.xyz, r2, c1
    mul r2.xyz, r0.w, r2
    mul_pp r3.xyz, r1.wzyx, c0
    mad_pp r2.xyz, r3, r1.x, r2
    mad_pp r1.xyz, r1.wzyx, t4, r2
    mul r2.xyz, r0.y, t2
    mad r2.xyz, t1, r0.x, r2
    mad_pp r0.xyz, t3, r0.z, r2
    nrm r2.xyz, r0
    dp3_sat r1.w, r4, r2
    add r1.w, -r1.w, c8.w
    pow r0.x, r1.w, c4.y
    mad_pp r0.xyz, r0.x, c3, r1
    mov_sat r0.w, t4.w
    lrp_pp r1.xyz, r0.w, r0, c7
    mov_pp r1.w, c8.w
    mov_pp oC0, r1

// approximately 58 instruction slots used (2 texture, 56 arithmetic)
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e345c5f4b3e92408-ps.txt
mov r6.xyzw, cb1[4].xyzw
mul r7.x, -r5.x, r5.y
mul r8.xyzw, cb10[0].xyzw, r7.xxxx
add r6.xyz, r6.xyz, -r8.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r1.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.zwzz, t1.xyzw, s1
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.y, v3.xyzx, r2.xyzx
dp3 r3.z, v4.xyzx, r2.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3 r1.x, r3.xyzx, cb2[0].xyzx
max r1.x, r1.x, l(0.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
mul r1.y, cb0[10].x, l(128.000000)
mul r0.w, r0.w, r1.y
exp r0.w, r0.w
sample r3.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.w, r0.w, r3.w
mul r1.yzw, r3.xxyz, cb0[8].xxyz
mul r3.xyz, cb0[6].xyzx, cb0[7].xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r1.yzwy, cb0[6].xyzx
mad r3.xyz, r4.xyzx, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, v5.xyzx, r3.xyzx
mul r3.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r3.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.x, r2.xyzx, r0.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[10].y
exp r0.x, r0.x
mad r0.xyz, r0.xxxx, cb0[9].xyzx, r1.xyzx
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mov_sat r0.w, v5.w
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used