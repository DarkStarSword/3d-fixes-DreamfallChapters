// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 924a58d823fc0b61-ps.txt
// 3DMigoto: 924a58d823fc0b61 |    Unity headers extracted from Reflect-Parallax_Fresnel_Illum_Cube.shader
//    Shader "Self-Illumin/Dreamfall/Reflective/Fresnel/Parallax Diffuse Illum CubeInterior" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.010000,6.000000)) = 1.000000
//       _Parallax ("Distort", Float) = 0.000000
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//       _CubeInterior ("Interior Cubemap", CUBE) = "_Skybox" { }
//       _IntOffset ("Interior Offset", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _IllumMask ("IllumMask (RGB)", 2D) = "white" { }
//       _IllumDepth ("Mask Depth", Float) = 0.400000
//       _IllumColor ("Illum Color", Color) = (0.500000,0.500000,0.500000,0.500000)
//       _IllumColorScale ("IllumColor Scale", Float) = 1.000000
//       _EmissionLM ("Emission (Lightmapper)", Float) = 0.000000
//       _ReflAmount ("Reflection amount", Float) = 1.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _ReflInteriorAmount ("Interior amount", Float) = 1.000000
//       _ReflInteriorPow ("Interior pow", Float) = 1.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 56368
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 83
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Parallax_Fresnel_Illum_Cube.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 127 9 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 7 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Vector 160 [_IllumColor]
//   Float 176 [_Parallax]
//   Float 180 [_Fresnel]
//   Float 184 [_IllumColorScale]
//   Float 188 [_Shininess]
//   Float 200 [_IllumDepth]
//   Float 204 [_ReflAmount]
//   Float 208 [_ReflPow]
//   Float 212 [_ReflInteriorAmount]
//   Float 216 [_ReflInteriorPow]
//   Vector 224 [_IntOffset]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_IllumMask] 2D 5
//   SetTexture 2 [_BumpMap] 2D 2
//   SetTexture 3 [_Cube] CUBE 3
//   SetTexture 4 [_CubeInterior] CUBE 4
//   SetTexture 5 [unity_Lightmap] 2D 0
//   SetTexture 6 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:34:18 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 924a58d823fc0b61-ps.txt
mov r13.xyzw, cb1[4].xyzw
mul r14.x, -r12.x, r12.y
mul r15.xyzw, cb10[0].xyzw, r14.xxxx
add r13.xyz, r13.xyz, -r15.xyz

add r0.xy, v6.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r1.xyzw, r0.xyxx, t5.xyzw, s0
sample r0.xyzw, r0.xyxx, t6.xyzw, s0
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
log r0.w, r1.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
mul r1.xyz, r1.xyzx, r0.wwww
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
max r0.w, r0.w, l(0.001000)
mul r2.xyz, r0.wwww, r1.xyzx
add r1.w, cb0[12].z, l(-0.500000)
mov r3.x, v2.w
mov r3.y, v3.w
mov r3.z, v4.w
add r3.xyz, -r3.xyzx, r13.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r3.xyzx
mul r5.xyz, r4.yyyy, v3.xyzx
mad r5.xyz, v2.xyzx, r4.xxxx, r5.xyzx
mad r5.xyz, v4.xyzx, r4.zzzz, r5.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mad r4.w, r5.z, r3.w, l(0.420000)
mul r6.xyz, r3.wwww, r5.xyzx
div r7.xy, r6.xyxx, r4.wwww
mad r7.xy, r1.wwww, r7.xyxx, v1.xyxx
sample r7.xyzw, r7.xyxx, t1.xyzw, s5
sample r8.xyzw, v1.xyxx, t0.xyzw, s1
mad r7.xyz, -r8.xyzx, cb0[8].xyzx, r7.xyzx
add r1.w, -r7.w, l(1.000000)
mul r9.xyzw, r8.xyzw, cb0[8].xyzw
mul r1.w, r1.w, r9.w
mad r7.xyz, r1.wwww, r7.xyzx, r9.xyzx
mul r1.w, r9.w, cb0[7].x
mul r8.xyz, r2.xyzx, r7.xyzx
mul r2.xyz, r2.xyzx, cb0[7].xyzx
div r0.xyz, r0.xyzx, r0.wwww
add r0.w, -r0.w, l(1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
mad r9.xyz, r3.xyzx, r2.wwww, r0.xyzx
dp3 r0.w, r9.xyzx, r9.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, r9.xyzx
sample r10.xyzw, v1.xyxx, t2.xyzw, s2
mad r10.xy, r10.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r10.xyxx, r10.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r10.z, r0.w
dp3 r11.x, v2.xyzx, r10.xyzx
dp3 r11.y, v3.xyzx, r10.xyzx
dp3 r11.z, v4.xyzx, r10.xyzx
dp3 r0.w, r6.xyzx, r10.xyzx
mul r6.xy, r10.xyxx, cb0[11].xxxx
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
dp3 r3.w, r11.xyzx, r9.xyzx
max r3.w, r3.w, l(0.000000)
log r3.w, r3.w
mul r4.w, cb0[11].w, l(128.000000)
mul r3.w, r3.w, r4.w
exp r3.w, r3.w
mul r3.w, r1.w, r3.w
mul r2.xyz, r2.xyzx, r3.wwww
dp3 r0.x, r11.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mad r2.xyz, r8.xyzx, r0.xxxx, r2.xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
sample r9.xyzw, v6.xyxx, t6.xyzw, s0
mad r1.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r1.xyzx, r1.xyzx
sqrt r3.w, r3.w
max r3.w, r3.w, l(0.001000)
div r1.xyz, r1.xyzx, r3.wwww
mad r3.xyz, r3.xyzx, r2.wwww, r1.xyzx
dp3 r1.x, r11.xyzx, r1.xyzx
dp3 r1.y, r3.xyzx, r3.xyzx
rsq r1.y, r1.y
mul r3.xyz, r1.yyyy, r3.xyzx
dp3 r1.y, r11.xyzx, r3.xyzx
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.y, r1.y
mul r1.y, r1.y, r4.w
exp r1.y, r1.y
mul r1.y, r1.w, r1.y
sample r9.xyzw, v6.xyxx, t5.xyzw, s0
log r1.z, r9.w
mul r1.z, r1.z, cb0[4].y
exp r1.z, r1.z
mul r1.z, r1.z, cb0[4].x
mul r3.xyz, r9.xyzx, r1.zzzz
mul r8.xyz, r3.wwww, r3.xyzx
add r1.z, -r3.w, l(1.000000)
mul r3.xyz, r1.zzzz, r3.xyzx
mad r0.xyz, r3.xyzx, r1.xxxx, r0.xyzx
mul r3.xyz, r8.xyzx, cb0[7].xyzx
mul r8.xyz, r7.xyzx, r8.xyzx
mul r1.yzw, r1.yyyy, r3.xxyz
mad r1.xyz, r8.xyzx, r1.xxxx, r1.yzwy
add r1.xyz, r2.xyzx, r1.xyzx
mad r0.xyz, r7.xyzx, r0.xyzx, r1.xyzx
dp3 r1.x, -r4.xyzx, r11.xyzx
add r1.x, r1.x, r1.x
mad r1.xyz, r11.xyzx, -r1.xxxx, -r4.xyzx
sample r1.xyzw, r1.xyzx, t3.xyzw, s3
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[13].xxxx
exp r1.xyz, r1.xyzx
mul r1.xyz, r8.wwww, r1.xyzx
max r1.w, cb0[11].y, l(0.100000)
min r1.w, r1.w, l(32.000000)
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[12].w
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[9].xyzx
add r1.xyz, r1.xyzx, r1.xyzx
mov r6.z, l(0)
add r2.xyz, -r5.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, cb0[14].xyzx
sample r2.xyzw, r2.xyzx, t4.xyzw, s4
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[13].zzzz
exp r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[13].yyyy
mul r2.xyz, r8.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[10].xyzx
mul r2.xyz, r2.xyzx, v5.xyzx
mul r2.xyz, r2.xyzx, cb0[11].zzzz
mul r2.xyz, r8.wwww, r2.xyzx
mad r1.xyz, r2.xyzx, r7.wwww, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad_sat r0.w, v1.z, cb2[1].z, cb2[1].w
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used