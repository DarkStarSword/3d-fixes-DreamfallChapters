// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ead1eda46c79aa30-vs.txt
// 3DMigoto: ead1eda46c79aa30 |    Unity headers extracted from SpeedTree.shader
//    Shader "Nature/SpeedTree" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _DetailTex ("Detail", 2D) = "black" { }
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//      [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//      [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      CustomEditor "SpeedTreeMaterialInspector"
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//        Pass 1/7 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//          Cull [_Cull]
//          GpuProgramID 519218
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 9014
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 46 0 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LOD_FADE_PERCENTAGE" "GEOM_TYPE_BRANCH_DETAIL" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 63 6 0 0 2 1 1 2 3 4 4 5 5 6
//   ConstBuffer "$Globals" 144
//   Vector 128 [_Color]
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 07:03:08 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyz 
// TEXCOORD                 2   xyzw        5     NONE   float   xyz 
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x  w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 7      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c2         cb1            38         7  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c13        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c20        cb2            20         1  ( FLT, FLT, FLT, FLT)
// c21        cb3             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c22, 0.416666657, 1.05499995, -0.0549999997, 0
    def c23, -2.5, 2.5, 1, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord5 v5
    dcl_texcoord7 v7
    mul oT2.xyz, v7.x, c1
    mul r0.x, v7.w, v7.w
    sge r0.x, -r0.x, r0.x
    add r0.y, v5.z, c23.x
    mad oT4.z, r0.x, r0.y, c23.y
    mov r0.xyz, v0
    add r0.xyz, -r0, v4
    mad r0.xyz, c20.x, r0, v0
    mul r1.xyz, r0.y, c14
    mad r1.xyz, c13, r0.x, r1
    mad r1.xyz, c15, r0.z, r1
    mad oT1.xyz, c16, v0.w, r1
    mul r1.x, v2.x, c17.x
    mul r1.y, v2.x, c18.x
    mul r1.z, v2.x, c19.x
    mul r2.x, v2.y, c17.y
    mul r2.y, v2.y, c18.y
    mul r2.z, v2.y, c19.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c17.z
    mul r2.y, v2.z, c18.z
    mul r2.z, v2.z, c19.z
    add r1.xyz, r1, r2
    nrm r2.xyz, r1
    mul r0.w, r2.y, r2.y
    mad r0.w, r2.x, r2.x, -r0.w
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c5, r1
    dp4 r3.y, c6, r1
    dp4 r3.z, c7, r1
    mad r1.xyz, c8, r0.w, r3
    mov r2.w, c23.z
    dp4 r3.x, c2, r2
    dp4 r3.y, c3, r2
    dp4 r3.z, c4, r2
    mov oT0.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c23.w
    mov r1.w, c22.x
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c22.y, c22.z
    max oT5.xyz, r1, c23.w
    mul r1, r0.y, c10
    mad r1, c9, r0.x, r1
    mad r0, c11, r0.z, r1
    add r0, r0, c12
    mul r1.x, r0.z, c21.x
    mul r1.x, r1.x, -r1.x
    exp oT0.w, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT2.w, c1.w
    mul oT3.xyz, v3.xyxw, c23.zzww
    mov oT4.xy, v5

// approximately 61 instruction slots used
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyz
dcl_input v5.xyz
dcl_input v7.xw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, -v0.xyzx, v4.xyzx
mad r0.xyz, cb2[20].xxxx, r0.xyzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ead1eda46c79aa30-vs.txt
ne r4.w, r1.w, l(1.0)
if_nz r4.w
  add r4.w, r1.w, -r4.y
  mad r1.x, r4.w, r4.x, r1.x
endif

mul r0.w, r1.z, cb3[1].x
mul r0.w, r0.w, -r0.w
exp o1.w, r0.w
mul r1.x, v2.x, cb2[16].x
mul r1.y, v2.x, cb2[17].x
mul r1.z, v2.x, cb2[18].x
mul r2.x, v2.y, cb2[16].y
mul r2.y, v2.y, cb2[17].y
mul r2.z, v2.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb2[16].z
mul r2.y, v2.z, cb2[17].z
mul r2.z, v2.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o1.xyz, r1.xyzx
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r0.xyw, cb2[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[14].xyzx, r0.zzzz, r0.xywx
mad o2.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
mul o3.xyz, v7.xxxx, cb0[8].xyzx
mov o3.w, cb0[8].w
mov o4.xy, v3.xyxx
mov o4.z, l(0)
eq r0.x, v7.w, l(0.000000)
movc o5.z, r0.x, v5.z, l(2.500000)
mov o5.xy, v5.xyxx
mul r0.x, r1.y, r1.y
mad r0.x, r1.x, r1.x, -r0.x
mul r2.xyzw, r1.yzzx, r1.xyzz
dp4 r3.x, cb1[41].xyzw, r2.xyzw
dp4 r3.y, cb1[42].xyzw, r2.xyzw
dp4 r3.z, cb1[43].xyzw, r2.xyzw
mad r0.xyz, cb1[44].xyzx, r0.xxxx, r3.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, cb1[38].xyzw, r1.xyzw
dp4 r2.y, cb1[39].xyzw, r1.xyzw
dp4 r2.z, cb1[40].xyzw, r1.xyzw
add r0.xyz, r0.xyzx, r2.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
ret 
// Approximately 0 instruction slots used