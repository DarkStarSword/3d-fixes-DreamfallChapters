// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5517aa98e89ca741-vs.txt
// 3DMigoto: 5517aa98e89ca741 |    Unity headers extracted from atsV2WavingGrass.shader
//    Shader "Hidden/TerrainEngine/Details/WavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//       _Cutoff2 ("Cutoff", Float) = 0.500000
//      }
//      Fallback Off
//      SubShader 1/2 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest+200" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest+200" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 29941
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 64
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from atsV2WavingGrass.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 74 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 0 5 0 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 224
//   Vector 160 [_WaveAndDistance]
//   Vector 176 [_WavingTint]
//   Vector 192 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:23:55 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         3  ( FLT, FLT, FLT, FLT)
// c4         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c23        cb4             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c24, 0.0480000004, 0.0599999987, 0.239999995, 0.0960000008
    def c25, 0.0240000002, 0.0799999982, 0.200000003, -0.161616161
    def c26, 1.20000005, 2, 1.60000002, 4.80000019
    def c27, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c28, 0.215387449, 0.358979076, 0.287183255, 0.861549795
    def c29, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c30, -0.5, 0.5, 1, 0
    def c31, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c32, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c33, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mul r0, v0.z, c25.xyyz
    mad r0, v0.x, c24, r0
    mov r1.x, c1.x
    mad r0, r1.x, c26, r0
    frc r0, r0
    mad r0, r0, c27.x, c27.y
    mul r1, r0, r0
    mul r2, r0, r1
    mad r0, r2, c25.w, r0
    mul r2, r1, r2
    mul r1, r1, r2
    mad r0, r2, c27.z, r0
    mad r0, r1, c27.w, r0
    mul r0, r0, c28
    mul r0, r0, r0
    dp4 r1.x, r0, c29.xxyz
    mul r1.x, r1.x, c29.w
    mov r2.xw, c30.xyzz
    add r1.yzw, r2.x, c2.xxyz
    mad r1.xyz, r1.x, r1.yzww, c30.y
    mul r1.xyz, r1, v7
    add oT3.xyz, r1, r1
    mad oT0.xy, v3, c3, c3.zwzw
    mov r1.w, v7.w
    mul r1.x, r1.w, v3.y
    mul r1.x, r1.x, c1.z
    mul r0, r0, r1.x
    dp4 r1.x, r0, c32
    dp4 r0.x, r0, c31
    mul r0.yz, r1.x, c22.xxzw
    mad r0.xy, c20.xzzw, r0.x, r0.yzzw
    add r0.xy, -r0, v0.xzzw
    mul r1.xyz, v0.y, c17
    mad r1.xyz, c16, r0.x, r1
    mad r1.xyz, c18, r0.y, r1
    mad oT2.xyz, c19, v0.w, r1
    mul r1.x, v2.x, c20.x
    mul r1.y, v2.x, c21.x
    mul r1.z, v2.x, c22.x
    mul r2.x, v2.y, c20.y
    mul r2.y, v2.y, c21.y
    mul r2.z, v2.y, c22.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c20.z
    mul r2.y, v2.z, c21.z
    mul r2.z, v2.z, c22.z
    add r1.xyz, r1, r2
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c8, r1
    dp4 r3.y, c9, r1
    dp4 r3.z, c10, r1
    mad r1.xyz, c11, r0.z, r3
    dp4 r3.x, c5, r2
    dp4 r3.y, c6, r2
    dp4 r3.z, c7, r2
    mov oT1.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c30.w
    mov r1.w, c33.x
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c33.y, c33.z
    max oT4.xyz, r1, c30.w
    mul r1, v0.y, c13
    mad r1, c12, r0.x, r1
    mad r0, c14, r0.y, r1
    add r0, r0, c15
    mul r1.x, r0.y, c4.x
    mul r1.w, r1.x, c30.y
    mul r1.xz, r0.xyww, c30.y
    add oT5.xy, r1.z, r1.xwzw
    mul r1.x, r0.z, c23.y
    exp oT0.z, -r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT5.zw, r0
    mov oT3.w, v7.w

// approximately 86 instruction slots used
vs_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.zzzz, l(0.024000, 0.080000, 0.080000, 0.200000)
mad r0.xyzw, v0.xxxx, l(0.048000, 0.060000, 0.240000, 0.096000), r0.xyzw
mad r0.xyzw, cb0[10].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r1.xyzw, r0.xyzw, r0.xyzw
mul r2.xyzw, r0.xyzw, r1.xyzw
mad r0.xyzw, r2.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r0.xyzw
mul r2.xyzw, r1.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
mad r0.xyzw, r2.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r0.xyzw
mad r0.xyzw, r1.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r0.xyzw
mul r0.xyzw, r0.xyzw, l(0.215387449, 0.358979076, 0.287183255, 0.861549795)
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r1.x, v3.y, v7.w
mul r1.x, r1.x, cb0[10].z
mul r1.xyzw, r0.xyzw, r1.xxxx
dp4 r0.x, r0.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.x, r0.x, l(0.700000)
dp4 r0.y, r1.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
dp4 r0.z, r1.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
mul r0.yw, r0.yyyy, cb3[18].xxxz
mad r0.yz, cb3[16].xxzx, r0.zzzz, r0.yywy
add r0.yz, -r0.yyzy, v0.xxzx
mul r1.xyzw, v0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.yyyy, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5517aa98e89ca741-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mul r0.w, r1.z, cb4[1].y
exp o1.z, -r0.w
mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r2.x, v2.x, cb3[16].x
mul r2.y, v2.x, cb3[17].x
mul r2.z, v2.x, cb3[18].x
mul r3.x, v2.y, cb3[16].y
mul r3.y, v2.y, cb3[17].y
mul r3.z, v2.y, cb3[18].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, v2.z, cb3[16].z
mul r3.y, v2.z, cb3[17].z
mul r3.z, v2.z, cb3[18].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mov o2.xyz, r2.xyzx
mul r3.xyz, v0.yyyy, cb3[13].xyzx
mad r3.xyz, cb3[12].xyzx, r0.yyyy, r3.xyzx
mad r0.yzw, cb3[14].xxyz, r0.zzzz, r3.xxyz
mad o3.xyz, cb3[15].xyzx, v0.wwww, r0.yzwy
add r0.yzw, cb0[11].xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
mad r0.xyz, r0.xxxx, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.xyzx, v7.xyzx
add o4.xyz, r0.xyzx, r0.xyzx
mov o4.w, v7.w
mul r0.x, r2.y, r2.y
mad r0.x, r2.x, r2.x, -r0.x
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r0.xyz, cb2[44].xyzx, r0.xxxx, r4.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r2.xyzw
dp4 r3.y, cb2[39].xyzw, r2.xyzw
dp4 r3.z, cb2[40].xyzw, r2.xyzw
add r0.xyz, r0.xyzx, r3.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used