// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 82a55367ae031c5e-ps.txt
// 3DMigoto: 82a55367ae031c5e |    Unity headers extracted from Standard_VertexColor_Illum.shader
//    Shader "Dreamfall/Unity5/Standard_VertexColor_Illum" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//       _NormalTex ("Normal (RGB)", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNesAlphaFactor ("Metal Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _Illum ("IllumMap (RGB)", 2D) = "black" { }
//       _EmissionLM ("Emission (Lightmapper)", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 34055
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 93
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_VertexColor_Illum.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 123 6 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 8 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Float 128 [_MetalNess]
//   Float 132 [_NormalMul]
//   Float 136 [_AlphaFactor]
//   Float 140 [_EmissionLM]
//   Float 144 [_MetalNesAlphaFactor]
//   Float 148 [_glossHigh]
//   Float 152 [_glossLow]
//   Vector 160 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_Illum] 2D 5
//   SetTexture 2 [_NormalTex] 2D 4
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_LightmapInd] 2D -1
//   SetTexture 6 [unity_SpecCube0] CUBE 1
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:36:16 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float   xy  
// TEXCOORD                 5   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xy
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 82a55367ae031c5e-ps.txt
mov r15.xyzw, cb1[4].xyzw
mov r16.xyzw, l(0)
mul r16.x, -r14.x, r14.y
mul r18.xyzw, cb10[0].xyzw, r16.xxxx
mad r18.xyzw, cb10[1].xyzw, r16.yyyy, r18.xyzw
mad r18.xyzw, cb10[2].xyzw, r16.zzzz, r18.xyzw
mad r18.xyzw, cb10[3].xyzw, r16.wwww, r18.xyzw
mul r17.xyzw, cb11[12].xyzw, r18.xxxx
mad r17.xyzw, cb11[13].xyzw, r18.yyyy, r17.xyzw
mad r17.xyzw, cb11[14].xyzw, r18.zzzz, r17.xyzw
mad r17.xyzw, cb11[15].xyzw, r18.wwww, r17.xyzw
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s3
mul r2.xyzw, r2.xyzw, cb0[10].xyzw
mul r3.xyzw, r2.xyzw, v5.xyzw
sample r4.xyzw, v1.xyxx, t1.xyzw, s5
sample r5.xyzw, v1.zwzz, t2.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[8].yyyy
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
add r6.xy, r3.wyww, r3.wxww
max r0.w, r6.x, cb0[9].x
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[8].x
mad r1.w, r2.z, v5.z, r6.y
mul r2.w, r1.w, l(0.333333343)
mad r1.w, -r1.w, l(0.333333343), cb0[9].y
mad r1.w, cb0[9].z, r1.w, r2.w
max r2.w, r6.x, cb0[8].z
min r2.w, r2.w, l(1.000000)
mul r4.xyz, r3.xyzx, r4.xyzx
div r6.xy, v7.xyxx, v7.wwww
sample r6.xyzw, r6.xyxx, t3.xyzw, s2
dp3 r7.x, v2.xyzx, r5.xyzx
dp3 r7.y, v3.xyzx, r5.xyzx
dp3 r7.z, v4.xyzx, r5.xyzx
mad r3.w, -r1.w, r2.w, l(1.000000)
dp3 r4.w, -r1.xyzx, r7.xyzx
add r4.w, r4.w, r4.w
mad r5.xyz, r7.xyzx, -r4.wwww, -r1.xyzx
sample r8.xyzw, v6.xyxx, t4.xyzw, s0
log r4.w, r8.w
mul r4.w, r4.w, cb0[4].y
exp r4.w, r4.w
mul r4.w, r4.w, cb0[4].x
mul r6.yzw, r8.xxyz, r4.wwww
sample r9.xyzw, v6.xyxx, t5.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r4.w, r7.xyzx, r9.xyzx
add r4.w, r4.w, l(0.500000)
mul r6.yzw, r4.wwww, r6.yyzw
max r4.w, r9.w, l(0.000100)
div r6.yzw, r6.yyzw, r4.wwww
dp3_sat r4.w, r7.xyzx, cb2[0].xyzx
add r5.w, -r6.x, l(1.000000)
mul r4.w, r4.w, r5.w
mad r9.xyz, -r4.wwww, cb0[6].xyzx, r6.yzwy
mul r8.xyz, r6.xxxx, r8.xyzx
max r8.xyz, r9.xyzx, r8.xyzx
add r9.xyz, r6.yzwy, -r8.xyzx
mad r8.xyz, cb3[24].xxxx, r9.xyzx, r8.xyzx
min r6.xyz, r6.yzwy, r8.xyzx
lt r4.w, l(0.000000), cb4[2].w
if_nz r4.w
  dp3 r4.w, r5.xyzx, r5.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r5.xyzx
  add r9.xyz, -r0.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.w, r9.y, r9.x
  min r4.w, r9.z, r4.w
  add r9.xyz, r0.xyzx, -cb4[2].xyzx
  mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
else 
  mov r8.xyz, r5.xyzx
endif 
log r4.w, r3.w
mul r4.w, r4.w, l(0.750000)
exp r4.w, r4.w
mad r5.w, -r4.w, l(0.700000), l(1.700000)
mul r4.w, r4.w, r5.w
mul r4.w, r4.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t6.xyzw, s1, r4.w
log r5.w, r8.w
mul r5.w, r5.w, cb4[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb4[3].x
mul r9.xyz, r8.xyzx, r5.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r5.xyzx, r5.xyzx
    rsq r6.w, r6.w
    mul r10.xyz, r5.xyzx, r6.wwww
    add r11.xyz, -r0.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r5.xyz, r10.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r10.xyzw, r5.xyzx, t7.xyzw, s1, r4.w
  log r0.x, r10.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb4[1].wwww, r5.xyzx, r0.xyzx
endif 
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r7.xyzx
mad r2.xyz, r2.xyzx, v5.xyzx, -cb0[2].xyzx
mad r2.xyz, r0.wwww, r2.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r3.w, r3.w
eq r0.z, cb0[3].w, l(0.000000)
mul r1.x, r0.y, r3.w
mad r1.x, -r1.x, l(0.280000), l(1.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
movc r0.y, r0.z, r1.x, r0.y
mad r0.z, r1.w, r2.w, -r0.w
add_sat r0.z, r0.z, l(1.000000)
mul r1.xyz, r9.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r2.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r3.xyzx, r6.xyzx, r0.xyzx
mad o0.xyz, r4.xyzx, cb0[8].wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used