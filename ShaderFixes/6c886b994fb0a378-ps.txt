// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6c886b994fb0a378-ps.txt
// 3DMigoto: 6c886b994fb0a378 |    Unity headers extracted from Rim_Transparent_2side.shader
//    Shader "Chickenlord/Transparent Rim Lighting 2Side" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RS ("Pre Power", Range(1.000000,10.000000)) = 2.500000
//       _RM ("Post Multiplier", Range(0.000000,5.000000)) = 2.000000
//       _RPS ("Post Power", Range(1.000000,5.000000)) = 2.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 10148
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 53
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rim_Transparent_2side.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 123 6 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 4 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Float 144 [_Shininess]
//   Float 148 [_RS]
//   Float 152 [_RM]
//   Float 156 [_RPS]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [unity_Lightmap] 2D 0
//   SetTexture 3 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerFrame" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:22:47 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   x           6     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.x
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6c886b994fb0a378-ps.txt
mov r11.xyzw, cb1[4].xyzw
mul r12.x, -r10.x, r10.y
mul r13.xyzw, cb10[0].xyzw, r12.xxxx
add r11.xyz, r11.xyz, -r13.xyz

mul r0.xyz, cb0[3].xyzx, cb2[0].xyzx
add r0.xyw, r0.xyxz, r0.xyxz
add r0.xw, r0.yyyw, r0.xxxx
mul r0.y, r0.w, r0.y
mad r0.x, r0.z, l(2.000000), r0.x
sqrt r0.y, r0.y
dp2 r0.y, cb0[3].wwww, r0.yyyy
add r0.x, r0.y, r0.x
add r0.y, cb0[9].y, cb0[9].y
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r1.xyz, -r1.xyzx, r11.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r2.xyw, v2.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, v4.xyzx, r2.zzzz, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample r3.xyzw, v1.zwzz, t1.xyzw, s2
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
dp3 r0.w, r3.xyzx, r2.xyzx
min r0.w, |r0.w|, l(1.000000)
log r0.w, r0.w
mul r0.y, r0.w, r0.y
exp r0.y, r0.y
mul r0.y, r0.y, cb0[9].z
mul r0.y, r0.y, l(0.500000)
min r0.y, r0.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[9].w
exp r0.y, r0.y
mul r2.xyz, cb0[3].xyzx, cb0[7].xyzx
add r2.xz, r2.yyzy, r2.xxxx
mul r1.w, r2.z, r2.y
mad r2.x, cb0[7].z, cb0[3].z, r2.x
sqrt r1.w, r1.w
dp2 r1.w, cb0[3].wwww, r1.wwww
add r1.w, r1.w, r2.x
mul r2.x, cb0[9].x, l(128.000000)
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
sample r4.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.w, r0.w, r4.w
max r0.w, r0.w, l(0.000000)
mul r0.w, r1.w, r0.w
mul r5.xyzw, r4.xyzw, cb0[8].xyzw
mad r0.y, r5.w, r0.y, r0.w
add r6.w, -r0.x, r0.y
mov r7.w, r6.w
add r0.xy, v5.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r8.xyzw, r0.xyxx, t3.xyzw, s0
sample r9.xyzw, r0.xyxx, t2.xyzw, s0
mad r0.xyw, r8.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
dp3 r1.w, r0.xywx, r0.xywx
sqrt r1.w, r1.w
max r1.w, r1.w, l(0.001000)
div r0.xyw, r0.xyxw, r1.wwww
mad r2.yzw, r1.xxyz, r0.zzzz, r0.xxyw
dp3 r3.w, r2.yzwy, r2.yzwy
rsq r3.w, r3.w
mul r2.yzw, r2.yyzw, r3.wwww
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r2.y, r4.xyzx, r2.yzwy
max r2.y, r2.y, l(0.000000)
log r2.y, r2.y
mul r2.y, r2.y, r2.x
exp r2.y, r2.y
mul r2.y, r4.w, r2.y
log r2.z, r9.w
mul r2.z, r2.z, cb0[4].y
exp r2.z, r2.z
mul r2.z, r2.z, cb0[4].x
mul r3.xyz, r9.xyzx, r2.zzzz
mul r8.xyz, r1.wwww, r3.xyzx
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
mul r9.xyz, r8.xyzx, cb0[7].xyzx
mul r8.xyz, r5.xyzx, r8.xyzx
mul r2.yzw, r2.yyyy, r9.xxyz
dp3 r0.x, r4.xyzx, r0.xywx
max r0.x, r0.x, l(0.000000)
mad r7.xyz, r8.xyzx, r0.xxxx, r2.yzwy
mul r0.xyw, r0.xxxx, r3.xyxz
sample r3.xyzw, v5.xyxx, t3.xyzw, s0
mad r2.yzw, r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r1.w, r2.yzwy, r2.yzwy
sqrt r1.w, r1.w
max r1.w, r1.w, l(0.001000)
div r2.yzw, r2.yyzw, r1.wwww
mad r1.xyz, r1.xyzx, r0.zzzz, r2.yzwy
dp3 r0.z, r4.xyzx, r2.yzwy
max r0.z, r0.z, l(0.000000)
dp3 r2.y, r1.xyzx, r1.xyzx
rsq r2.y, r2.y
mul r1.xyz, r1.xyzx, r2.yyyy
dp3 r1.x, r4.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r1.x, r1.x, r2.x
exp r1.x, r1.x
mul r1.x, r4.w, r1.x
sample r2.xyzw, v5.xyxx, t2.xyzw, s0
log r1.y, r2.w
mul r1.y, r1.y, cb0[4].y
exp r1.y, r1.y
mul r1.y, r1.y, cb0[4].x
mul r2.xyz, r2.xyzx, r1.yyyy
mul r3.xyz, r1.wwww, r2.xyzx
add r1.y, -r1.w, l(1.000000)
mul r1.yzw, r1.yyyy, r2.xxyz
mad r0.xyw, r1.yzyw, r0.zzzz, r0.xyxw
mul r1.yzw, r3.xxyz, cb0[7].xxyz
mul r2.xyz, r3.xyzx, r5.xyzx
mul r1.xyz, r1.xxxx, r1.yzwy
mad r6.xyz, r2.xyzx, r0.zzzz, r1.xyzx
add r1.xyzw, r6.xyzw, r7.xyzw
mad r0.xyz, r5.xyzx, r0.xywx, r1.xyzx
mov o0.w, r1.w
mad r0.xyz, r5.wwww, cb0[8].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mul r0.w, v6.x, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
ret 
// Approximately 0 instruction slots used