// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9e6e41a4c958953f-ps.txt
// 3DMigoto: 9e6e41a4c958953f |    Unity headers extracted from Reflect-Bump_SpecFresnel_MaskedTint.shader
//    Shader "Dreamfall/Reflective/Fresnel/Bumped Specular Masked Tint" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _ReflectColor ("Reflect Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _Fresnel ("Specular Fresnel Exponent", Range(0.010000,16.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _RefMul ("Reflection Boost", Float) = 1.000000
//       _AlbedoBlend ("0 = lighting modifies reflection", Range(0.000000,1.000000)) = 1.000000
//       _TintMask ("Tint Mask (RGB)", 2D) = "Black" { }
//       _TintColorR ("Tint Color - R", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _TintColorB ("Tint Color - G", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _TintColorG ("Tint Color - B", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Color_Mul ("Tint Color Multiply", Float) = 2.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 38907
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 69
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Bump_SpecFresnel_MaskedTint.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 94 8 2
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 6 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Vector 160 [_TintColorR]
//   Vector 176 [_TintColorG]
//   Vector 192 [_TintColorB]
//   Float 208 [_Shininess]
//   Float 212 [_Fresnel]
//   Float 216 [_RefMul]
//   Float 220 [_AlbedoBlend]
//   Float 224 [_Color_Mul]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_TintMask] 2D 4
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_Cube] CUBE 5
//   SetTexture 4 [_ShadowMapTexture] 2D 1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:38:10 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9e6e41a4c958953f-ps.txt
mov r11.xyzw, cb1[4].xyzw
mul r12.x, -r10.x, r10.y
mul r13.xyzw, cb10[0].xyzw, r12.xxxx
add r11.xyz, r11.xyz, -r13.xyz

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r11.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
max r1.w, cb0[13].y, l(0.100000)
min r1.w, r1.w, l(32.000000)
sample r4.xyzw, v1.xyxx, t0.xyzw, s2
sample r5.xyzw, v1.xyxx, t1.xyzw, s4
mul r6.xyzw, r4.xyzw, cb0[8].xyzw
mul r7.xyzw, r6.xyzw, cb0[10].xyzw
mad r7.xyzw, r7.xyzw, cb0[14].xxxx, -r6.xyzw
mad r6.xyzw, r5.xxxx, r7.xyzw, r6.xyzw
mul r7.xyzw, r6.xyzw, cb0[12].xyzw
mad r7.xyzw, r7.xyzw, cb0[14].xxxx, -r6.xyzw
mad r6.xyzw, r5.zzzz, r7.xyzw, r6.xyzw
mul r7.xyzw, r6.xyzw, cb0[11].xyzw
mad r7.xyzw, r7.xyzw, cb0[14].xxxx, -r6.xyzw
mad r5.xyzw, r5.yyyy, r7.xyzw, r6.xyzw
sample r6.xyzw, v1.zwzz, t2.xyzw, s3
mad r4.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
dp3 r2.w, -r2.xyzx, r6.xyzx
add r2.w, r2.w, r2.w
mad r2.xyz, r6.xyzx, -r2.wwww, -r2.xyzx
sample r2.xyzw, r2.xyzx, t3.xyzw, s5
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
dp3 r2.w, r3.xyzx, r4.xyzx
add r2.w, -r2.w, l(1.000000)
log r2.w, r2.w
mul r1.w, r1.w, r2.w
exp r1.w, r1.w
mul r2.xyz, r4.wwww, r2.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[9].xyzx
mul r2.xyz, r2.xyzx, cb0[13].zzzz
add r3.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, cb0[13].wwww, r3.xyzx, r5.xyzx
div r4.xy, v6.xyxx, v6.wwww
sample r4.xyzw, r4.xyxx, t4.xyzw, s1
mul r4.xyz, r4.xxxx, cb0[6].xyzx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb3[2].xyzx
  mad r7.xyz, cb3[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb3[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r7.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r7.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r7.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r7.x, r0.w, r0.y
  sample r8.xyzw, r7.xzwx, t5.xyzw, s0
  add r0.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r0.yzwy, t5.xyzw, s0
  add r0.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r7.xyzw, r0.yzwy, t5.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r6.xyzw
  dp4 r8.y, r9.xyzw, r6.xyzw
  dp4 r8.z, r7.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r8.x, cb2[38].xyzw, r6.xyzw
  dp4 r8.y, cb2[39].xyzw, r6.xyzw
  dp4 r8.z, cb2[40].xyzw, r6.xyzw
endif 
add r0.yzw, r8.xxyz, v5.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
log r7.xyz, r0.yzwy
mul r7.xyz, r7.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r7.xyz, r7.xyzx
mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.yzw, r1.wwww, r7.xxyz, r0.yyzw
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r6.xyzx, cb2[0].xyzx
max r0.x, r0.x, l(0.000000)
dp3 r1.x, r6.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, cb0[13].x, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r5.w, r1.x
mul r1.yzw, r4.xxyz, r5.xxyz
mul r4.xyz, r4.xyzx, cb0[7].xyzx
mul r4.xyz, r1.xxxx, r4.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r4.xyzx
mad r0.xyz, r5.xyzx, r0.yzwy, r1.xyzx
mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used