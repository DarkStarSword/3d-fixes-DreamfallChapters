// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 849caf9d87063e8f-ps.txt
// 3DMigoto: 849caf9d87063e8f |    Unity headers extracted from Standard_BumpedDetail.shader
//    Shader "Dreamfall/Unity5/Standard_BumpedDetail" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _NormalMul ("Normal Multiplier", Float) = 1.000000
//       _DetailBumpFactor ("Detail Bump Ammount", Range(0.000000,1.000000)) = 1.000000
//       _AlphaFactor ("Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _GlossHigh ("Glossy High", Range(0.000000,1.000000)) = 0.800000
//       _GlossLow ("Glossy Low", Range(0.000000,1.000000)) = 0.200000
//       _Metallness ("Metallness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNesAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _VColorMult ("Vertex Color Strength", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 114170
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 317
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BumpedDetail.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 133 6 0
//   Keywords { "POINT" "SHADOWS_CUBE" "FOG_EXP" }
//   undeciphered2: 1 6 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 304
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 192 [_NormalMul]
//   Vector 208 [_Color]
//   Float 224 [_DetailBumpFactor]
//   Float 228 [_AlphaFactor]
//   Float 232 [_GlossHigh]
//   Float 236 [_GlossLow]
//   Float 240 [_MetalNesAlphaFactor]
//   Float 244 [_Metallness]
//   Float 248 [_VColorMult]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_Detail] 2D 4
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_DetailBump] 2D 5
//   SetTexture 4 [_LightTexture0] 2D 1
//   SetTexture 5 [_ShadowMapTexture] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:36:48 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 7     z         2     NONE   float     z 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// COLOR                    0   xyzw        7     NONE   float   xyz 
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 849caf9d87063e8f-ps.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

dp3 r0.x, v8.xyzx, v8.xyzx
sqrt r0.x, r0.x
mul r0.x, r0.x, cb2[1].w
mul r0.x, r0.x, l(0.970000)
sample r1.xyzw, v8.xyzx, t5.xyzw, s0
lt r0.x, r1.x, r0.x
movc r0.x, r0.x, cb3[24].x, l(1.000000)
mul r0.yzw, v6.yyyy, cb0[9].xxyz
mad r0.yzw, cb0[8].xxyz, v6.xxxx, r0.yyzw
mad r0.yzw, cb0[10].xxyz, v6.zzzz, r0.yyzw
add r0.yzw, r0.yyzw, cb0[11].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sample r1.xyzw, r0.yyyy, t4.xyzw, s1
mul r0.x, r0.x, r1.x
mul r0.xyz, r0.xxxx, cb0[6].xyzx
sample r1.xyzw, v1.zwzz, t2.xyzw, s3
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[12].xxxx
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
sample r2.xyzw, v2.xyxx, t3.xyzw, s5
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[12].xxxx
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
mad r1.xyz, r2.xyzx, cb0[14].xxxx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r2.x, v3.xyzx, r1.xyzx
dp3 r2.y, v4.xyzx, r1.xyzx
dp3 r2.z, v5.xyzx, r1.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xyzx
add r3.xyz, -v6.xyzx, r7.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, -v6.xyzx, cb2[0].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mad r5.xyz, r4.xyzx, r0.wwww, r3.xyzx
dp3 r1.w, r1.xyzx, r3.xyzx
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r5.xyzx
dp3 r0.w, r1.xyzx, r4.xyzx
dp3 r1.x, r3.xyzx, r4.xyzx
dp3 r1.y, r2.xyzx, r3.xyzx
max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
sample r2.xyzw, v2.xyxx, t1.xyzw, s4
mul r2.xyzw, r2.xyzw, l(1.800000, 1.800000, 1.800000, 1.800000)
min r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
add r2.xyzw, r2.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r2.xyzw, r2.xyzw, r3.xyzw
add r3.xy, r2.ywyy, r2.xwxx
mad r1.z, r2.z, l(0.333333343), r3.x
max r3.x, r3.y, cb0[15].x
min r3.x, r3.x, l(1.000000)
mul r3.x, r3.x, cb0[15].y
add r3.y, -r1.z, cb0[14].z
mad r1.z, cb0[14].w, r3.y, r1.z
max r2.w, r2.w, cb0[14].y
mul r2.xyz, r2.xyzx, cb0[13].xyzx
mad r1.z, -r1.z, r2.w, l(1.000000)
add r2.w, -r1.z, l(1.000000)
mad r2.w, r2.w, l(0.968000), l(0.030000)
log r2.w, r2.w
div r2.w, l(10.000000), r2.w
mul r3.y, r2.w, r2.w
mad r2.w, r2.w, r2.w, l(2.000000)
mul r2.w, r2.w, l(0.159154937)
mul r0.w, r0.w, r3.y
exp r0.w, r0.w
mul r0.w, r2.w, r0.w
mul r2.w, r1.z, r1.z
mul r3.y, r2.w, l(0.797884583)
mad r2.w, -r2.w, l(0.797884583), l(1.000000)
mad r3.z, r1.w, r2.w, r3.y
add r1.w, -r1.w, l(1.000000)
mad r2.w, r1.y, r2.w, r3.y
mad r2.w, r2.w, r3.z, l(0.000010)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul r0.w, r0.w, r2.w
mul r0.w, r0.w, l(0.785398185)
max r2.w, r0.w, l(0.000100)
sqrt r2.w, r2.w
eq r3.y, cb0[3].w, l(0.000000)
movc r0.w, r3.y, r2.w, r0.w
mul r0.w, r1.y, r0.w
max r0.w, r0.w, l(0.000000)
add r2.w, -cb0[15].z, l(1.000000)
add r3.yzw, -v7.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r3.yzw, r2.wwww, r3.yyzw, v7.xxyz
mad r4.xyz, r2.xyzx, r3.yzwy, -cb0[2].xyzx
mul r2.xyz, r2.xyzx, r3.yzwy
mad r3.yzw, r3.xxxx, r4.xxyz, cb0[2].xxyz
mad r2.w, -r3.x, cb0[2].w, cb0[2].w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r2.w, r3.yzwy, r3.yzwy
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r0.w, r0.w, r2.w
mul r4.xyz, r0.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
dp2 r1.x, r1.xxxx, r1.zzzz
add r1.x, r1.x, l(-0.500000)
mul r1.z, r0.w, r0.w
mul r1.z, r1.z, r1.z
mul r0.w, r0.w, r1.z
add r5.xyz, -r3.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r5.xyzx, r0.wwww, r3.yzwy
mul r3.xyz, r3.xyzx, r4.xyzx
mul r0.w, r1.w, r1.w
mul r0.w, r0.w, r0.w
mul r0.w, r1.w, r0.w
mad r0.w, r1.x, r0.w, l(1.000000)
add r1.z, -r1.y, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r1.x, r1.x, r1.z, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r1.y, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r3.xyzx
mul r0.w, v2.z, cb4[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used