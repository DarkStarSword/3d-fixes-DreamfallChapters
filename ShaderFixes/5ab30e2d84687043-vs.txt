// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5ab30e2d84687043-vs.txt
// 3DMigoto: 5ab30e2d84687043 |    Unity headers extracted from TreeSoftOcclusionLeaves.shader
//    Shader "Nature/Tree Soft Occlusion Leaves" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Main Texture", 2D) = "white" { }
//       _Cutoff ("Alpha cutoff", Range(0.250000,0.900000)) = 0.500000
//       _BaseLight ("Base Light", Range(0.000000,1.000000)) = 0.350000
//       _AO ("Amb. Occlusion", Range(0.000000,10.000000)) = 2.400000
//       _Occlusion ("Dir Occlusion", Range(0.000000,20.000000)) = 7.500000
//      [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//      }
//      Dependency "BillboardShader" = "Hidden/Nature/Tree Soft Occlusion Leaves Rendertex"
//      Fallback Off
//      SubShader 1/2 {
//        Tags { "QUEUE"="Transparent-99" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TreeTransparentCutout" }
//        Pass 1/2 {
//          Tags { "QUEUE"="Transparent-99" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TreeTransparentCutout" }
//          Lighting On
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 58747
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 7
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TreeSoftOcclusionLeaves.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 43 0 1
//   Keywords { "FOG_EXP" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 141 4 0 0 2 1 3 4 7 8
//   ConstBuffer "$Globals" 160
//   Float 112 [_Occlusion]
//   Float 116 [_AO]
//   Float 120 [_BaseLight]
//   Vector 128 [_Color]
//   Float 144 [_HalfOverCutoff]
//   ConstBuffer "UnityLighting" 720
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityTerrain" 272
//   Vector 80 [_TreeInstanceColor]
//   Vector 96 [_TreeInstanceScale]
//   Vector 176 [_SquashPlaneNormal]
//   Float 192 [_SquashAmount]
//   Matrix 112 [_TerrainEngineBendTree]
//   ConstBuffer "UnityPerCamera2" 64
//   Matrix 0 [_CameraToWorld]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityTerrain" 5
//   BindCB "UnityPerCamera2" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:25:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float      w
// TEXCOORD                 0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   x           3     NONE   float   x   
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[27], dynamicIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[13], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v3.w
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v0.xyzx, cb5[6].xyzx
mul r1.xyz, r0.yyyy, cb5[8].xyzx
mad r1.xyz, cb5[7].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb5[9].xyzx, r0.zzzz, r1.xyzx
mad r1.xyz, -v0.xyzx, cb5[6].xyzx, r1.xyzx
mad r0.xyz, v3.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, cb5[11].xyzx, r0.xyzx
add r0.w, r0.w, cb5[11].w
mad r1.xyz, -r0.wwww, cb5[11].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -r1.xyzx
mad r0.xyz, cb5[12].xxxx, r0.xyzx, r1.xyzx
mul r1.xyz, r0.yyyy, cb2[5].xyzx
mad r1.xyz, cb2[4].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb2[6].xyzx, r0.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[7].xyzx
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
add r2.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r3.w, cb0[7].y
mov r4.xyz, r2.xyzx
mov r1.w, l(0)
loop 
  ige r2.w, r1.w, l(4)
  breakc_nz r2.w
  mad r5.xyz, -r1.xyzx, cb1[r1.w + 14].wwww, cb1[r1.w + 14].xyzx
  mov r5.w, -r5.z
  dp3 r2.w, r5.xywx, r5.xywx
  rsq r4.w, r2.w
  mul r5.xyz, r4.wwww, r5.xywx
  mul r6.xyz, r5.yyyy, cb6[1].xyzx
  mad r5.xyw, cb6[0].xyxz, r5.xxxx, r6.xyxz
  mad r5.xyz, cb6[2].xyzx, r5.zzzz, r5.xywx
  mad r2.w, r2.w, cb1[r1.w + 22].z, l(1.000000)
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r3.xyz, r5.xyzx, cb0[7].xxxx
  dp4 r3.x, v1.xyzw, r3.xyzw
  max r3.x, r3.x, l(0.000000)
  add r3.x, r3.x, cb0[7].z
  mul r2.w, r2.w, r3.x
  mad r4.xyz, cb1[r1.w + 6].xyzx, r2.wwww, r4.xyzx
  iadd r1.w, r1.w, l(1)
endloop 
mul r1.xyz, r4.xyzx, cb0[8].xyzx
mul o2.xyz, r1.xyzx, cb5[5].xyzx
mul o2.w, cb0[9].x, l(0.500000)

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5ab30e2d84687043-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

mul r1.x, r0.z, cb4[1].y
exp o3.x, -r1.x

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o1.xyzw, v4.xyzw
ret 
// Approximately 0 instruction slots used