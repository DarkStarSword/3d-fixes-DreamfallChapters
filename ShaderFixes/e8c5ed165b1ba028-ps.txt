// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e8c5ed165b1ba028-ps.txt
// 3DMigoto: e8c5ed165b1ba028 |    Unity headers extracted from Reflect-Bump_SpecFresnel.shader
//    Shader "Dreamfall/Reflective/Fresnel/Bumped Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _ReflectColor ("Reflect Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _Fresnel ("Specular Fresnel Exponent", Range(0.010000,16.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _RefMul ("Reflection Boost", Float) = 1.000000
//       _AlbedoBlend ("0 = lighting modifies reflection", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 63214
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 139
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Bump_SpecFresnel.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 45 4 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 164 [_Fresnel]
//   Float 168 [_RefMul]
//   Float 172 [_AlbedoBlend]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_Cube] CUBE 3
//   SetTexture 3 [unity_Lightmap] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:59:10 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   x           6     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.x
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e8c5ed165b1ba028-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

max r0.x, cb0[10].y, l(0.100000)
min r0.x, r0.x, l(32.000000)
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r0.yzw, -r1.xxyz, r4.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mul r1.xyz, r0.zzzz, v3.xyzx
mad r1.xyz, v2.xyzx, r0.yyyy, r1.xyzx
mad r1.xyz, v4.xyzx, r0.wwww, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
sample r2.xyzw, v1.zwzz, t1.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
dp3 r1.x, r1.xyzx, r2.xyzx
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
dp3 r1.x, v2.xyzx, r2.xyzx
dp3 r1.y, v3.xyzx, r2.xyzx
dp3 r1.z, v4.xyzx, r2.xyzx
dp3 r1.w, -r0.yzwy, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.yzw, r1.xxyz, -r1.wwww, -r0.yyzw
sample r1.xyzw, r0.yzwy, t2.xyzw, s3
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.yzw, r1.xxyz, r2.wwww
mul r0.xyz, r0.xxxx, r0.yzwy
mul r0.xyz, r0.xyzx, cb0[9].xyzx
mul r0.xyz, r0.xyzx, cb0[10].zzzz
mad r1.xyz, -r2.xyzx, cb0[8].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, cb0[8].xyzx
mad r1.xyz, cb0[10].wwww, r1.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
sample r1.xyzw, v5.xyxx, t3.xyzw, s0
log r0.w, r1.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
mul r1.xyz, r1.xyzx, r0.wwww
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad_sat r0.w, v6.x, cb2[1].z, cb2[1].w
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used