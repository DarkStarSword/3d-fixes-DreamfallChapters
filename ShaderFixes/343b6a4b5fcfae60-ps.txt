// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 343b6a4b5fcfae60-ps.txt
// 3DMigoto: 343b6a4b5fcfae60 |    Unity headers extracted from Reflect-Glossy_Fresnel.shader
//    Shader "Chickenlord/Reflective/Fresnel/Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.000000,6.000000)) = 1.000000
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//      }
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 27926
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 117
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Glossy_Fresnel.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 100 7 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 5 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Shininess]
//   Float 164 [_Fresnel]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_Cube] CUBE 3
//   SetTexture 2 [_ShadowMapTexture] 2D 1
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:07:39 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 343b6a4b5fcfae60-ps.txt
mov r11.xyzw, cb1[4].xyzw
mul r12.x, -r10.x, r10.y
mul r13.xyzw, cb10[0].xyzw, r12.xxxx
add r11.xyz, r11.xyz, -r13.xyz

dp3_sat r0.x, v3.xyzx, cb2[0].xyzx
div r0.yz, v6.xxyx, v6.wwww
sample r1.xyzw, r0.yzyy, t2.xyzw, s1
add r0.y, -r1.x, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.yzw, r0.xxxx, cb0[6].xxyz
sample r2.xyzw, v5.xyxx, t3.xyzw, s0
log r1.y, r2.w
mul r1.y, r1.y, cb0[4].y
exp r1.y, r1.y
mul r1.y, r1.y, cb0[4].x
mul r1.yzw, r2.xxyz, r1.yyyy
mul r2.xyz, r1.xxxx, r2.xyzx
sample r3.xyzw, v5.xyxx, t4.xyzw, s0
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r3.xyzx, r3.xyzx
sqrt r1.x, r1.x
max r1.x, r1.x, l(0.001000)
mad r4.xyz, r1.yzwy, r1.xxxx, -r0.yzwy
max r4.xyz, r2.xyzx, r4.xyzx
mad r5.xyz, r1.yzwy, r1.xxxx, -r4.xyzx
mad r4.xyz, cb3[24].xxxx, r5.xyzx, r4.xyzx
mul r5.xyz, r1.xxxx, r1.yzwy
min r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, r4.xyzx, cb0[7].xyzx
div r3.xyz, r3.xyzx, r1.xxxx
add r1.x, -r1.x, l(1.000000)
mul r1.xyz, r1.xxxx, r1.yzwy
add r6.xyz, -v4.xyzx, r11.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mad r7.xyz, r6.xyzx, r1.wwww, r3.xyzx
dp3 r2.w, v3.xyzx, r3.xyzx
max r2.w, r2.w, l(0.000000)
dp3 r3.x, r7.xyzx, r7.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r7.xyzx
dp3 r3.x, v3.xyzx, r3.xyzx
max r3.x, r3.x, l(0.000000)
log r3.x, r3.x
mul r3.y, cb0[10].x, l(128.000000)
mul r3.x, r3.x, r3.y
exp r3.x, r3.x
sample r7.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.x, r3.x, r7.w
mul r3.xzw, r3.xxxx, r5.xxyz
mul r5.xyz, r7.xyzx, cb0[8].xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r3.xzw, r4.xxyz, r2.wwww, r3.xxzw
add r4.xy, v5.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r8.xyzw, r4.xyxx, t3.xyzw, s0
sample r4.xyzw, r4.xyxx, t4.xyzw, s0
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
log r4.w, r8.w
mul r4.w, r4.w, cb0[4].y
exp r4.w, r4.w
mul r4.w, r4.w, cb0[4].x
mul r7.xyz, r8.xyzx, r4.wwww
dp3 r4.w, r4.xyzx, r4.xyzx
sqrt r4.w, r4.w
max r4.w, r4.w, l(0.001000)
mad r0.yzw, r7.xxyz, r4.wwww, -r0.yyzw
max r0.yzw, r0.yyzw, r2.xxyz
mad r8.xyz, r7.xyzx, r4.wwww, -r0.yzwy
mad r0.yzw, cb3[24].xxxx, r8.xxyz, r0.yyzw
mul r8.xyz, r4.wwww, r7.xyzx
min r0.yzw, r0.yyzw, r8.xxyz
mul r8.xyz, r0.yzwy, cb0[7].xyzx
mul r0.yzw, r0.yyzw, r5.xxyz
div r4.xyz, r4.xyzx, r4.wwww
add r4.w, -r4.w, l(1.000000)
mul r7.xyz, r4.wwww, r7.xyzx
mad r9.xyz, r6.xyzx, r1.wwww, r4.xyzx
dp3 r4.x, v3.xyzx, r4.xyzx
mul r4.yzw, r1.wwww, r6.xxyz
dp3 r1.w, r4.yzwy, v3.xyzx
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[10].y
exp r1.w, r1.w
dp3 r4.y, r9.xyzx, r9.xyzx
rsq r4.y, r4.y
mul r4.yzw, r4.yyyy, r9.xxyz
dp3 r4.y, v3.xyzx, r4.yzwy
max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r4.y, r4.y
mul r3.y, r3.y, r4.y
exp r3.y, r3.y
mul r3.y, r7.w, r3.y
mul r4.yzw, r3.yyyy, r8.xxyz
mad r0.yzw, r0.yyzw, r4.xxxx, r4.yyzw
mul r4.xyz, r4.xxxx, r7.xyzx
mad r1.xyz, r1.xyzx, r2.wwww, r4.xyzx
add r0.yzw, r0.yyzw, r3.xxzw
mad r3.xyz, -r0.xxxx, cb0[6].xyzx, r1.xyzx
max r2.xyz, r2.xyzx, r3.xyzx
add r3.xyz, r1.xyzx, -r2.xyzx
mad r2.xyz, cb3[24].xxxx, r3.xyzx, r2.xyzx
min r1.xyz, r1.xyzx, r2.xyzx
mad r0.xyz, r5.xyzx, r1.xyzx, r0.yzwy
sample r2.xyzw, v2.xyzx, t1.xyzw, s3
mul r1.xyz, r7.wwww, r2.xyzx
mul r1.xyz, r1.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -cb4[0].xyzx
mad_sat r0.w, v1.z, cb4[1].z, cb4[1].w
mad o0.xyz, r0.wwww, r0.xyzx, cb4[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used