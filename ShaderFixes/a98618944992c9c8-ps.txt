// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed a98618944992c9c8-ps.txt
// 3DMigoto: a98618944992c9c8 |    Unity headers extracted from Internal-PrePassLighting.shader
//    Shader "Hidden/Internal-PrePassLighting" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/3 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend DstColor Zero
//          GpuProgramID 35985
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 49
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Internal-PrePassLighting.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 65 7 0
//   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 128 [_LightPos]
//   Vector 144 [_LightColor]
//   Vector 160 [unity_LightmapFade]
//   Vector 240 [_CameraNormalsTexture_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 720
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_LightTextureB0] 2D 1
//   SetTexture 2 [_ShadowMapTexture] CUBE 2
//   SetTexture 3 [_CameraNormalsTexture] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityShadows" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:41:40 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed a98618944992c9c8-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

mul r0.xyz, cb0[3].xyzx, cb0[9].xyzx
add r0.xz, r0.yyzy, r0.xxxx
mul r0.y, r0.z, r0.y
mad r0.x, cb0[9].z, cb0[3].z, r0.x
sqrt r0.y, r0.y
dp2 r0.y, cb0[3].wwww, r0.yyyy
add r0.x, r0.y, r0.x
div r0.yz, v1.xxyx, v1.wwww
sample r1.xyzw, r0.yzyy, t0.xyzw, s0
mad r0.yz, r0.yyzy, cb0[15].xxyx, cb0[15].zzwz
sample r2.xyzw, r0.yzyy, t3.xyzw, s3
mad r0.y, cb1[7].x, r1.x, cb1[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
div r0.z, cb1[5].z, v2.z
mul r1.xyz, r0.zzzz, v2.xyzx
mul r1.xyw, r0.yyyy, r1.xyxz

// copy depth from r1.w to r11.x:
mov r11.x, r1.w

mul r3.xyz, r1.yyyy, cb2[19].xyzx
mad r3.xyz, cb2[18].xyzx, r1.xxxx, r3.xyzx
mad r3.xyz, cb2[20].xyzx, r1.wwww, r3.xyzx
add r3.xyz, r3.xyzx, cb2[21].xyzx

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed a98618944992c9c8-ps.txt

add r12.x, r11.x, -r7.y
mul r12.x, r7.x, r12.x
mul r13.xyzw, cb10[0].xyzw, r12.xxxx
add r3.xyz, r3.xyzw, -r13.xyzx

add r4.xyz, r3.xyzx, -cb0[8].xyzx
add r5.xyz, r4.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
sample r5.xyzw, r5.xyzx, t2.xyzw, s2
add r6.xyz, r4.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
sample r6.xyzw, r6.xyzx, t2.xyzw, s2
mov r5.y, r6.x
add r6.xyz, r4.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
sample r6.xyzw, r6.xyzx, t2.xyzw, s2
mov r5.z, r6.x
add r6.xyz, r4.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
sample r6.xyzw, r6.xyzx, t2.xyzw, s2
mov r5.w, r6.x
dp3 r0.z, r4.xyzx, r4.xyzx
sqrt r0.w, r0.z
mul r0.w, r0.w, cb3[1].w
mul r0.w, r0.w, l(0.970000)
lt r5.xyzw, r5.xyzw, r0.wwww
movc r5.xyzw, r5.xyzw, cb4[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
dp4 r0.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
mul r1.x, r0.z, cb0[8].w
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, r4.xyzx
sample r5.xyzw, r1.xxxx, t1.xyzw, s1
mul r0.z, r0.w, r5.x
mov_sat r0.w, r0.z
add r5.xyz, r3.xyzx, -r8.xyzx
add r3.xyz, r3.xyzx, -cb4[25].xyzx
dp3 r1.x, r3.xyzx, r3.xyzx
sqrt r1.x, r1.x
mad r0.y, -r1.z, r0.y, r1.x
mad r0.y, cb4[25].w, r0.y, r1.w
mad r0.y, r0.y, cb0[10].z, cb0[10].w
add_sat r0.y, -r0.y, l(1.000000)
dp3 r1.x, r5.xyzx, r5.xyzx
rsq r1.x, r1.x
mad r1.xyz, -r5.xyzx, r1.xxxx, -r4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r1.w, r2.w, l(128.000000)
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
dp3 r1.y, -r4.xyzx, r2.xyzx
max r1.y, r1.y, l(0.000000)
mul r0.z, r0.z, r1.y
mul r2.xyz, r0.zzzz, cb0[9].xyzx
max r0.z, r1.x, l(0.000000)
log r0.z, r0.z
mul r0.z, r0.z, r1.w
exp r0.z, r0.z
mul r0.z, r0.w, r0.z
mul r2.w, r0.x, r0.z
mul r0.xyzw, r0.yyyy, r2.xyzw
exp o0.xyzw, -r0.xyzw
ret 
// Approximately 0 instruction slots used