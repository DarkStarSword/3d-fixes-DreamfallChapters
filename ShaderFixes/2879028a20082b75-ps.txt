// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2879028a20082b75-ps.txt
// 3DMigoto: 2879028a20082b75 | Matched 2 variants of 1 shaders: Nature/Tree Creator Bark
//
//       Unity headers extracted from TreeCreatorBark.shader
//       Shader "Nature/Tree Creator Bark" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//          _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _GlossMap ("Gloss (A)", 2D) = "black" { }
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//         [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//         }
//         Dependency "OptimizedShader" = "Hidden/Nature/Tree Creator Bark Optimized"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeBark" }
//           Pass 2/6 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardAdd" "IGNOREPROJECTOR"="true" "RenderType"="TreeBark" }
//             ZWrite Off
//             Blend One One
//             GpuProgramID 75190
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 128
// 2:              GpuProgramIndex 143
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from TreeCreatorBark.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 35 4 0
// 2:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" }
// 1:   Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
//      undeciphered2: 1 4 3 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 272
//      Vector 96 [_LightColor0]
//      Vector 112 [_SpecColor]
//      Float 244 [_Shininess]
//      Matrix 128 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_GlossMap] 2D 3
//      SetTexture 2 [_BumpMap] 2D 2
//      SetTexture 3 [_LightTexture0] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:04:38 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         6  ( FLT, FLT, FLT, FLT)
// c6         cb0            15         1  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c8         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, 2, -1, 0, 1
    def c10, 128, 0, 0, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl_pp t2.xyz
    dcl_pp t3.xyz
    dcl t4.xyz
    dcl_pp t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -t4, c7
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r0.xyz, r0, r0.w, c8
    nrm_pp r1.xyz, r0
    texld_pp r0, t0, s3
    texld_pp r2, t0, s2
    mad_pp r0.xy, r2.wyzw, c9.x, c9.y
    dp2add_sat_pp r1.w, r0, r0, c9.z
    add_pp r1.w, -r1.w, c9.w
    rsq_pp r1.w, r1.w
    rcp_pp r0.z, r1.w
    dp3_pp r2.x, t1, r0
    dp3_pp r2.y, t2, r0
    dp3_pp r2.z, t3, r0
    dp3_pp r2.w, r2, r1
    dp3_pp r0.x, r2, c8
    max_pp r1.x, r0.x, c9.z
    max r0.x, r2.w, c9.z
    mov r0.y, c6.y
    mul r0.y, r0.y, c10.x
    pow r1.y, r0.x, r0.y
    mul r0.x, r0.w, r1.y
    mul r0.yz, t4.y, c3.xxyw
    mad r0.yz, c2.xxyw, t4.x, r0
    mad r0.yz, c4.xxyw, t4.z, r0
    add r2.xy, r0.yzzw, c5
    texld_pp r3, t0, s1
    texld_pp r2, r2, s0
    mul_pp r0.yzw, r2.w, c0.xxyz
    mul r1.yzw, r0, c1.xxyz
    mul r1.yzw, r0.x, r1
    mul_pp r2.xyz, r3, t5
    mul_pp r2.xyz, r2, t5.w
    mul_pp r0.xyz, r0.yzww, r2
    mad_pp r0.xyz, r0, r1.x, r1.yzww
    mov_sat r0.w, t0.z
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 45 instruction slots used (4 texture, 41 arithmetic)
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2879028a20082b75-ps.txt
mov r4.xyzw, cb1[4].xyzw
mul r5.x, -r3.x, r3.y
mul r6.xyzw, cb10[0].xyzw, r5.xxxx
add r4.xyz, r4.xyz, -r6.xyz

add r0.xyz, -v5.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample r1.xyzw, v1.xyxx, t2.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
dp3 r0.y, r2.xyzx, cb2[0].xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.x, r0.x
mul r0.z, cb0[15].y, l(128.000000)
mul r0.x, r0.x, r0.z
exp r0.x, r0.x
sample r1.xyzw, v1.xyxx, t1.xyzw, s3
mul r0.x, r0.x, r1.w
mul r0.zw, v5.yyyy, cb0[9].xxxy
mad r0.zw, cb0[8].xxxy, v5.xxxx, r0.zzzw
mad r0.zw, cb0[10].xxxy, v5.zzzz, r0.zzzw
add r0.zw, r0.zzzw, cb0[11].xxxy
sample r1.xyzw, r0.zwzz, t3.xyzw, s0
mul r1.xyz, r1.wwww, cb0[6].xyzx
mul r2.xyz, r1.xyzx, cb0[7].xyzx
mul r0.xzw, r0.xxxx, r2.xxyz
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r2.xyz, r2.xyzx, v6.xyzx
mul r2.xyz, r2.xyzx, v6.wwww
mul r1.xyz, r1.xyzx, r2.xyzx
mad r0.xyz, r1.xyzx, r0.yyyy, r0.xzwx
mov_sat r0.w, v1.z
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used