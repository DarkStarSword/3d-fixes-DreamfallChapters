// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3dfdd18be2453fcc-vs.txt
// 3DMigoto: 3dfdd18be2453fcc | Matched 2 variants of 1 shaders: Hidden/BlendModesOverlay_MorganTweak
//
//       Unity headers extracted from BlendModesOverlay_MorganTweak.shader
//       Shader "Hidden/BlendModesOverlay_MorganTweak" {
//         Properties {
//          _MainTex ("Screen Blended", 2D) = "" { }
//          _Overlay ("Color", 2D) = "grey" { }
//          _Distort ("Distort Texture", 2D) = "white" { }
//          _DistortAmount ("Distort Amount", Float) = 1.000000
//          _Speed ("Distort Speed", Float) = 1.000000
//          _InvFade ("Fade", Float) = 1.000000
//          _Near ("Near", Float) = 0.500000
//          _Far ("Far", Float) = 0.800000
//         }
//         Fallback Off
//         SubShader 1/1 {
//           Pass 1/6 {
//             ZTest Always
//             ZWrite Off
//             Cull Off
//             ColorMask RGB
//             GpuProgramID 36488
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 1
// 2:              GpuProgramIndex 4
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from BlendModesOverlay_MorganTweak.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 13 0 0
// 2:   Keywords { "SOFTPARTICLES_ON" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 9 2 0 0 3 4
//      ConstBuffer "$Globals" 160
//      Float 100 [_Speed]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:17:35 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3dfdd18be2453fcc-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o1.w, r0.w
add r0.xy, r1.zzzz, r1.xwxx
mad o1.xy, cb1[0].xyxx, cb0[6].yyyy, r0.xyxx
mul r0.x, v0.y, cb2[5].z
mad r0.x, cb2[4].z, v0.x, r0.x
mad r0.x, cb2[6].z, v0.z, r0.x
add r0.x, r0.x, cb2[7].z
mov o1.z, -r0.x
mov o2.xy, v1.xyxx
mov o2.zw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used