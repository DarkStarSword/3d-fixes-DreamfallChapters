// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f0aaa4ab030f497b-vs.txt
// 3DMigoto: f0aaa4ab030f497b | Matched 6 variants of 1 shaders: Dreamfall/Unity5/Terrain/Standard_WetMask_Terrain
//
//        Unity headers extracted from Standard_WetMask_Terrain.shader
//        Shader "Dreamfall/Unity5/Terrain/Standard_WetMask_Terrain" {
//          Properties {
//          [Header(Roughness Settings)]  _GlossValues ("Gloss Values for each layer Min Value 0 Max Value 1", Vector) = (0.000000,0.000000,0.000000,0.000000)
//           _GlossTerrainMin ("Gloss Terrain min", Range(0.000000,1.000000)) = 0.000000
//           _GlossTerrainMax ("Gloss Terrain Max", Range(0.000000,1.000000)) = 1.000000
//           _GlossWet ("Gloss Wet Mask", Range(0.000000,1.000000)) = 1.000000
//           _GlossBoost ("Gloss Boost", Float) = 1.000000
//          [Header(Normal Map Settings)]  _NormalBoost ("Normal Map Boost", Float) = 1.000000
//          [Header(Wetmask Settings)]  _RefMask ("Reflection Mask (R)", 2D) = "black" { }
//           _RefMaskOffsetTile ("RefMask Offset(RB), Tile(G), WetDarkening(A) ", Vector) = (0.000000,0.000000,10.000000,0.000000)
//           _RefMaskLayerControll ("Reflection Mask layer controll", Vector) = (1.000000,1.000000,1.000000,1.000000)
//           _WorldDirControl ("World Dir Control- Adjust wetmask based on surface normal", Vector) = (0.000000,0.000000,0.000000,0.000000)
//          [Header(UV Scale)]  _UvScale ("UV Scale", Float) = 0.300000
//          [HideInInspector]  _Control ("Control (RGBA)", 2D) = "red" { }
//          [HideInInspector]  _Splat3 ("Layer 3 (A)", 2D) = "white" { }
//          [HideInInspector]  _Splat2 ("Layer 2 (B)", 2D) = "white" { }
//          [HideInInspector]  _Splat1 ("Layer 1 (G)", 2D) = "white" { }
//          [HideInInspector]  _Splat0 ("Layer 0 (R)", 2D) = "white" { }
//          [HideInInspector]  _Normal3 ("Normal 3 (A)", 2D) = "bump" { }
//          [HideInInspector]  _Normal2 ("Normal 2 (B)", 2D) = "bump" { }
//          [HideInInspector]  _Normal1 ("Normal 1 (G)", 2D) = "bump" { }
//          [HideInInspector]  _Normal0 ("Normal 0 (R)", 2D) = "bump" { }
//          }
//          Fallback "Nature/Terrain/Diffuse"
//          SubShader 1/1 {
//            Tags { "QUEUE"="Geometry+100" "RenderType"="Opaque" "SplatCount"="4" }
//            Pass 1/4 {
//              Name "FORWARD"
//              Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "SplatCount"="4" }
//              GpuProgramID 9160
//              Program "vp" {
//                SubProgram "d3d11 " {
// 01:              GpuProgramIndex 23
// 02:              GpuProgramIndex 25
// 04:              GpuProgramIndex 27
// 08:              GpuProgramIndex 43
// 10:              GpuProgramIndex 45
// 20:              GpuProgramIndex 47
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Standard_WetMask_Terrain.shader.decompressed:
//       API d3d11
//       Shader model vs_4_0
//       undeciphered1: 201510240 37 0 0
// 10:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
// 02:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
// 20:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
// 04:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
// 08:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
// 01:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//       undeciphered2: 1 0 3 0 0 0
//       undeciphered3: 155 5 0 0 1 2 3 4 4 5 7 8
//       ConstBuffer "$Globals" 256
//       Vector 240 [_Control_ST]
//       ConstBuffer "UnityPerDraw" 352
//       Vector 336 [unity_WorldTransformParams]
//       Matrix 0 [glstate_matrix_mvp]
//       Matrix 192 [unity_ObjectToWorld]
//       Matrix 256 [unity_WorldToObject]
//       ConstBuffer "UnityLightmaps" 32
//       Vector 0 [unity_LightmapST]
//       BindCB "$Globals" 0
//       BindCB "UnityPerDraw" 1
//       BindCB "UnityLightmaps" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 23:00:56 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 8     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[22], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f0aaa4ab030f497b-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

mov o1.z, r0.z
mad o1.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
mul r0.y, v2.x, cb1[16].x
mul r0.z, v2.x, cb1[17].x
mul r0.x, v2.x, cb1[18].x
mul r1.y, v2.y, cb1[16].y
mul r1.z, v2.y, cb1[17].y
mul r1.x, v2.y, cb1[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.y, v2.z, cb1[16].z
mul r1.z, v2.z, cb1[17].z
mul r1.x, v2.z, cb1[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o2.z, r0.y
mul r1.xyz, v1.yyyy, cb1[13].yzxy
mad r1.xyz, cb1[12].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb1[14].yzxy, v1.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.xyzx
mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
mul r0.y, v1.w, cb1[21].w
mul r2.xyz, r0.yyyy, r2.xyzx
mov o2.y, r2.x
mov o2.x, r1.z
mul r3.xyzw, v0.yyyy, cb1[13].xyzw
mad r3.xyzw, cb1[12].xyzw, v0.xxxx, r3.xyzw
mad r3.xyzw, cb1[14].xyzw, v0.zzzz, r3.xyzw
mad r3.xyzw, cb1[15].xyzw, v0.wwww, r3.xyzw
mov o2.w, r3.x
mov o3.z, r0.z
mov o4.z, r0.x
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.y, r2.y
mov o4.y, r2.z
mov o3.w, r3.y
mov o4.w, r3.z
mov o6.xyzw, r3.xyzw
mul r0.xyz, v2.yyyy, cb1[13].xyzx
mad r0.xyz, cb1[12].xyzx, v2.xxxx, r0.xyzx
mad o5.xyz, cb1[14].xyzx, v2.zzzz, r0.xyzx
mad o7.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
mov o7.zw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used