// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 70f82c19b2b9ae82-vs.txt
// 3DMigoto: 70f82c19b2b9ae82 | Matched 8 variants of 2 shaders: Legacy Shaders/Bumped Specular, Legacy Shaders/Parallax Diffuse
//
// f0:    Unity headers extracted from Normal-BumpSpec.shader
// 0f:    Unity headers extracted from Normal-Parallax.shader
// f0:    Shader "Legacy Shaders/Bumped Specular" {
// 0f:    Shader "Legacy Shaders/Parallax Diffuse" {
//          Properties {
//           _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 0f:       _Parallax ("Height", Range(0.005000,0.080000)) = 0.020000
// f0:       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
// 0f:       _MainTex ("Base (RGB)", 2D) = "white" { }
// f0:       _Shininess ("Shininess", Range(0.030000,1.000000)) = 0.078125
// f0:       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//           _BumpMap ("Normalmap", 2D) = "bump" { }
// 0f:       _ParallaxMap ("Heightmap (A)", 2D) = "black" { }
//          }
// 0f:      Fallback "Legacy Shaders/Bumped Diffuse"
// f0:      Fallback "Legacy Shaders/Specular"
//          SubShader 2/2 {
// f0:        LOD 400
// 0f:        LOD 500
//            Tags { "RenderType"="Opaque" }
//            Pass 2/5 {
//              Name "FORWARD"
//              Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
//              ZWrite Off
//              Blend One One
// 0f:          GpuProgramID 473271
// f0:          GpuProgramID 518217
//              Program "vp" {
//                SubProgram "d3d11_9x " {
// 11:              GpuProgramIndex 507
// 22:              GpuProgramIndex 513
// 44:              GpuProgramIndex 516
// 88:              GpuProgramIndex 519
//                }
//              }
//            }
//          }
//        }
//
// f0: Unity 5.3 headers extracted from Normal-BumpSpec.shader.decompressed:
// 0f: Unity 5.3 headers extracted from Normal-Parallax.shader.decompressed:
//       API d3d11_9x
//       Shader model vs_4_0_level_9_1
//       undeciphered1: 201510240 35 0 0
// 88:   Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
// 11:   Keywords { "POINT" "FOG_LINEAR" }
// 44:   Keywords { "POINT_COOKIE" "FOG_LINEAR" }
// 22:   Keywords { "SPOT" "FOG_LINEAR" }
//       undeciphered2: 1 0 3 0 0 0
//       undeciphered3: 139 4 0 0 1 2 3 4 7 8
//       ConstBuffer "$Globals" 256
//       Vector 224 [_MainTex_ST]
//       Vector 240 [_BumpMap_ST]
//       ConstBuffer "UnityPerDraw" 352
//       Vector 336 [unity_WorldTransformParams]
//       Matrix 0 [glstate_matrix_mvp]
//       Matrix 192 [unity_ObjectToWorld]
//       Matrix 256 [unity_WorldToObject]
//       ConstBuffer "UnityFog" 32
//       Vector 16 [unity_FogParams]
//       BindCB "$Globals" 0
//       BindCB "UnityPerDraw" 1
//       BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:31:39 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 6      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            14         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c7         cb1            12         7  ( FLT, FLT, FLT, FLT)
// c14        cb1            21         1  ( FLT, FLT, FLT, FLT)
// c15        cb2             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    mad oT0.xy, v3, c1, c1.zwzw
    mad oT0.zw, v3.xyxy, c2.xyxy, c2
    mul r0.xyz, v0.y, c8
    mad r0.xyz, c7, v0.x, r0
    mad r0.xyz, c9, v0.z, r0
    mad oT4.xyz, c10, v0.w, r0
    mul r0, v0.y, c4
    mad r0, c3, v0.x, r0
    mad r0, c5, v0.z, r0
    add r0, r0, c6
    mad oT1.w, r0.z, c15.z, c15.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mul r0.xyz, v1.y, c8.yzxw
    mad r0.xyz, c7.yzxw, v1.x, r0
    mad r0.xyz, c9.yzxw, v1.z, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov oT1.x, r0.z
    mul r1.y, v2.x, c11.x
    mul r1.z, v2.x, c12.x
    mul r1.x, v2.x, c13.x
    mul r2.y, v2.y, c11.y
    mul r2.z, v2.y, c12.y
    mul r2.x, v2.y, c13.y
    add r1.xyz, r1, r2
    mul r2.y, v2.z, c11.z
    mul r2.z, v2.z, c12.z
    mul r2.x, v2.z, c13.z
    add r1.xyz, r1, r2
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, v1.w, c14.w
    mul r2.xyz, r0.z, r2
    mov oT1.y, r2.x
    mov oT1.z, r1.y
    mov oT2.x, r0.x
    mov oT3.x, r0.y
    mov oT2.y, r2.y
    mov oT3.y, r2.z
    mov oT2.z, r1.z
    mov oT3.z, r1.x

// approximately 46 instruction slots used
vs_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[22], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 70f82c19b2b9ae82-vs.txt
ne r3.w, r0.w, l(1.0)
if_nz r3.w
  add r3.w, r0.w, -r3.y
  mad r0.x, r3.w, r3.x, r0.x
endif

mad o2.w, r0.z, cb2[1].z, cb2[1].w
mad o1.xy, v3.xyxx, cb0[14].xyxx, cb0[14].zwzz
mad o1.zw, v3.xxxy, cb0[15].xxxy, cb0[15].zzzw
mul r0.y, v2.x, cb1[16].x
mul r0.z, v2.x, cb1[17].x
mul r0.x, v2.x, cb1[18].x
mul r1.y, v2.y, cb1[16].y
mul r1.z, v2.y, cb1[17].y
mul r1.x, v2.y, cb1[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.y, v2.z, cb1[16].z
mul r1.z, v2.z, cb1[17].z
mul r1.x, v2.z, cb1[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o2.z, r0.y
mul r1.xyz, v1.yyyy, cb1[13].yzxy
mad r1.xyz, cb1[12].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb1[14].yzxy, v1.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.xyzx
mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
mul r0.y, v1.w, cb1[21].w
mul r2.xyz, r0.yyyy, r2.xyzx
mov o2.y, r2.x
mov o2.x, r1.z
mov o3.z, r0.z
mov o4.z, r0.x
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.y, r2.y
mov o4.y, r2.z
mul r0.xyz, v0.yyyy, cb1[13].xyzx
mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
mad o5.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
ret 
// Approximately 0 instruction slots used