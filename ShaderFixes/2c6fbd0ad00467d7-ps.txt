// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2c6fbd0ad00467d7-ps.txt
// 3DMigoto: 2c6fbd0ad00467d7 | Matched 2 variants of 1 shaders: Hidden/Nature/Tree Creator Bark Optimized
//
//       Unity headers extracted from TreeCreatorBarkOptimized.shader
//       Shader "Hidden/Nature/Tree Creator Bark Optimized" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//          _BumpSpecMap ("Normalmap (GA) Spec (R)", 2D) = "bump" { }
//          _TranslucencyMap ("Trans (RGB) Gloss(A)", 2D) = "white" { }
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//         [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//         }
//         Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Bark Rendertex"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeBark" }
//           Pass 2/6 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardAdd" "IGNOREPROJECTOR"="true" "RenderType"="TreeBark" }
//             ZWrite Off
//             Blend One One
//             GpuProgramID 86727
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 122
// 2:              GpuProgramIndex 137
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from TreeCreatorBarkOptimized.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 48 5 0
// 2:   Keywords { "SPOT" "FOG_EXP" }
// 1:   Keywords { "SPOT" "FOG_LINEAR" }
//      undeciphered2: 1 5 3 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 272
//      Vector 96 [_LightColor0]
//      Vector 112 [_SpecColor]
//      Vector 208 [_Color]
//      Matrix 128 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_TranslucencyMap] 2D 4
//      SetTexture 2 [_BumpSpecMap] 2D 3
//      SetTexture 3 [_LightTexture0] 2D 0
//      SetTexture 4 [_LightTextureB0] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:05:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         6  ( FLT, FLT, FLT, FLT)
// c6         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c8         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t4               
// s2             s2              t0               
// s3             s3              t2               
// s4             s4              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, 2, -1, 0, 1
    def c10, 0.5, 128, 0, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl_pp t2.xyz
    dcl_pp t3.xyz
    dcl t4.xyz
    dcl_pp t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mul r0, t4.y, c3
    mad r0, c2, t4.x, r0
    mad r0, c4, t4.z, r0
    add r0, r0, c5
    rcp r0.w, r0.w
    mad r1.xy, r0, r0.w, c10.x
    dp3 r0.xy, r0, r0
    texld_pp r1, r1, s0
    texld_pp r2, r0, s1
    mul r0.x, r1.w, r2.x
    mul_pp r0.xyw, r0.x, c0.xyzz
    cmp_pp r0.xyz, -r0.z, c9.z, r0.xyww
    texld_pp r1, t0, s3
    texld_pp r2, t0, s2
    mul_pp r2.xyz, r2, t5
    mul_pp r2.xyz, r2, t5.w
    mul_pp r2.xyz, r0, r2
    mul r0.xyz, r0, c1
    add r3.xyz, -t4, c7
    dp3 r0.w, r3, r3
    rsq r0.w, r0.w
    add r4.xyz, -t4, c8
    nrm_pp r5.xyz, r4
    mad_pp r3.xyz, r3, r0.w, r5
    nrm_pp r4.xyz, r3
    mad_pp r3.xy, r1.wyzw, c9.x, c9.y
    mul r0.w, r1.x, c10.y
    dp2add_sat_pp r2.w, r3, r3, c9.z
    add_pp r2.w, -r2.w, c9.w
    rsq_pp r2.w, r2.w
    rcp_pp r3.z, r2.w
    dp3_pp r1.x, t1, r3
    dp3_pp r1.y, t2, r3
    dp3_pp r1.z, t3, r3
    dp3_pp r1.w, r1, r4
    dp3_pp r2.w, r1, r5
    max_pp r1.x, r2.w, c9.z
    max r2.w, r1.w, c9.z
    pow r1.y, r2.w, r0.w
    texld_pp r3, t0, s4
    mul_pp r0.w, r3.w, c6.x
    mul r0.w, r0.w, r1.y
    mul r0.xyz, r0.w, r0
    mad_pp r0.xyz, r2, r1.x, r0
    mov_sat r0.w, t0.z
    mul_pp r0.xyz, r0, r0.w
    mov r0.w, c9.w
    mov_pp oC0, r0

// approximately 55 instruction slots used (5 texture, 50 arithmetic)
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2c6fbd0ad00467d7-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

mul r0.xyzw, v5.yyyy, cb0[9].xyzw
mad r0.xyzw, cb0[8].xyzw, v5.xxxx, r0.xyzw
mad r0.xyzw, cb0[10].xyzw, v5.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[11].xyzw
div r1.xy, r0.xyxx, r0.wwww
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r1.xyzw, r1.xyxx, t3.xyzw, s0
lt r0.w, l(0.000000), r0.z
dp3 r0.x, r0.xyzx, r0.xyzx
sample r2.xyzw, r0.xxxx, t4.xyzw, s1
and r0.x, r0.w, l(0x3f800000)
mul r0.x, r1.w, r0.x
mul r0.x, r2.x, r0.x
mul r0.xyz, r0.xxxx, cb0[6].xyzx
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyz, r1.xyzx, v6.xyzx
mul r1.xyz, r1.xyzx, v6.wwww
mul r1.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[7].xyzx
add r2.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mad r3.xyz, r3.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
sample r4.xyzw, v1.xyxx, t2.xyzw, s3
mad r5.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.w, r4.x, l(128.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
dp3 r4.x, v2.xyzx, r5.xyzx
dp3 r4.y, v3.xyzx, r5.xyzx
dp3 r4.z, v4.xyzx, r5.xyzx
dp3 r1.w, r4.xyzx, r3.xyzx
dp3 r2.x, r4.xyzx, r2.xyzx
max r2.x, r2.x, l(0.000000)
max r1.w, r1.w, l(0.000000)
log r1.w, r1.w
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
sample r3.xyzw, v1.xyxx, t1.xyzw, s4
mul r1.w, r3.w, cb0[13].x
mul r0.w, r0.w, r1.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r1.xyzx, r2.xxxx, r0.xyzx
mov_sat r0.w, v1.z
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used