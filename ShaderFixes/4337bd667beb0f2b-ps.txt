// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4337bd667beb0f2b-ps.txt
// 3DMigoto: 4337bd667beb0f2b |    Unity headers extracted from Standard_TranspWater.shader
//    Shader "Dreamfall/Unity5/Standard_TranspWater" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _FoamColor ("Foam Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FoamTex ("Foam Texture", 2D) = "white" { }
//       _BumpAmt ("BumpAmount", Range(0.000000,1.000000)) = 1.000000
//       _Gloss ("Water Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _WaterSpeed ("Water Speed1", Float) = 1.000000
//       _WaterSpeed2 ("Water Speed1", Float) = 1.000000
//       _InvFade ("Water Edge", Range(0.010000,3.000000)) = 1.000000
//       _FoamSpeed ("Foam Speed", Float) = 1.000000
//       _FoamBoost ("Foam Boost", Float) = 1.000000
//       _FoamScale ("Foam Scale", Float) = 1.000000
//       _Caustics ("Caustic Amount", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          Blend DstColor SrcColor
//          GpuProgramID 47842
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 99
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_TranspWater.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 227 8 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 7 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Float 144 [_BumpAmt]
//   Float 148 [_Gloss]
//   Float 152 [_Metallic]
//   Float 156 [_WaterSpeed]
//   Float 160 [_WaterSpeed2]
//   Float 168 [_InvFade]
//   Vector 208 [_MainTex_TexelSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_CameraDepthTexture] 2D 4
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:11:29 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 7     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4337bd667beb0f2b-ps.txt
mov r18.xyzw, cb1[4].xyzw
mul r19.x, -r17.x, r17.y
mul r20.xyzw, cb10[0].xyzw, r19.xxxx
add r18.xyz, r18.xyz, -r20.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
lt r1.w, cb0[13].y, l(0.000000)
add r2.w, -v5.y, l(1.000000)
movc r3.y, r1.w, r2.w, v5.y
mov r3.x, v5.x
div r3.xy, r3.xyxx, v5.wwww
sample r3.xyzw, r3.xyxx, t0.xyzw, s4
mad r1.w, cb1[7].z, r3.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
add r1.w, r1.w, -v5.z
mul_sat r1.w, r1.w, cb0[10].z
mad r3.y, cb1[0].x, cb0[9].w, v1.y
mad r3.w, cb1[0].x, cb0[10].x, v1.y
mov r3.xz, v1.xxxx
sample r4.xyzw, r3.xyxx, t1.xyzw, s3
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
sample r3.xyzw, r3.zwzz, t1.xyzw, s3
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r3.z, r2.w
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r5.xyz, -r3.xyzx, l(0.500000, 0.500000, 1.000000, 0.000000)
add r2.w, -r1.w, l(1.000000)
mad r3.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
mad r3.xyz, r2.wwww, r3.xyzx, r4.xyzx
add r3.xyz, r3.xyzx, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[9].xxxx, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r4.xy, r3.xyxx, v1.xyxx
sample r4.xyzw, r4.xyxx, t2.xyzw, s2
add r5.xyz, r4.xyzx, cb0[8].xyzx
add r4.xyz, r4.xyzx, -r5.xyzx
mad r4.xyz, r1.wwww, r4.xyzx, r5.xyzx
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
add r1.w, -cb0[9].y, l(1.000000)
dp3 r2.w, -r2.xyzx, r5.xyzx
add r2.w, r2.w, r2.w
mad r3.xyz, r5.xyzx, -r2.wwww, -r2.xyzx
sample r6.xyzw, v6.xyxx, t3.xyzw, s0
log r2.w, r6.w
mul r2.w, r2.w, cb0[4].y
exp r2.w, r2.w
mul r2.w, r2.w, cb0[4].x
mul r6.xyz, r6.xyzx, r2.wwww
sample r7.xyzw, v6.xyxx, t4.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r7.xyzx, r7.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r7.xyz, r7.xyzx, r2.wwww
dp3 r3.w, r5.xyzx, r7.xyzx
max r3.w, r3.w, l(0.000000)
add r4.w, -r2.w, l(1.000000)
mul r8.xyz, r4.wwww, r6.xyzx
mul r6.xyz, r2.wwww, r6.xyzx
add r9.xy, v6.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r10.xyzw, r9.xyxx, t3.xyzw, s0
log r2.w, r10.w
mul r2.w, r2.w, cb0[4].y
exp r2.w, r2.w
mul r2.w, r2.w, cb0[4].x
mul r10.xyz, r10.xyzx, r2.wwww
sample r9.xyzw, r9.xyxx, t4.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r9.xyzx, r9.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r9.xyz, r9.xyzx, r2.wwww
dp3 r4.w, r5.xyzx, r9.xyzx
max r4.w, r4.w, l(0.000000)
add r5.w, -r2.w, l(1.000000)
mul r11.xyz, r5.wwww, r10.xyzx
mul r10.xyz, r2.wwww, r10.xyzx
mul r11.xyz, r4.wwww, r11.xyzx
mad r8.xyz, r8.xyzx, r3.wwww, r11.xyzx
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r11.xyz, r2.wwww, r3.xyzx
  add r12.xyz, -r0.xyzx, cb3[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -r0.xyzx, cb3[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r2.w, r12.y, r12.x
  min r2.w, r12.z, r2.w
  add r12.xyz, r0.xyzx, -cb3[2].xyzx
  mad r11.xyz, r11.xyzx, r2.wwww, r12.xyzx
else 
  mov r11.xyz, r3.xyzx
endif 
log r2.w, r1.w
mul r2.w, r2.w, l(0.750000)
exp r2.w, r2.w
mad r5.w, -r2.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r5.w
mul r2.w, r2.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t5.xyzw, s1, r2.w
log r5.w, r11.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb3[3].x
mul r12.xyz, r11.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r3.xyzx, r3.xyzx
    rsq r6.w, r6.w
    mul r13.xyz, r3.xyzx, r6.wwww
    add r14.xyz, -r0.xyzx, cb3[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -r0.xyzx, cb3[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r6.w, r14.y, r14.x
    min r6.w, r14.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r3.xyz, r13.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r13.xyzw, r3.xyzx, t6.xyzw, s1, r2.w
  log r0.x, r13.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r13.xyzx, r0.xxxx
  mad r3.xyz, r5.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb3[1].wwww, r3.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
add r3.xyz, r4.xyzx, -cb0[2].xyzx
mad r3.xyz, cb0[9].zzzz, r3.xyzx, cb0[2].xyzx
mad r2.w, -cb0[9].z, cb0[2].w, cb0[2].w
mul r4.xyz, r2.wwww, r4.xyzx
mad r5.xyz, r1.xyzx, r0.wwww, r7.xyzx
dp3 r5.w, r5.xyzx, r5.xyzx
max r5.w, r5.w, l(0.001000)
rsq r5.w, r5.w
mul r5.xyz, r5.wwww, r5.xyzx
dp3 r5.w, r0.xyzx, r5.xyzx
max r5.w, r5.w, l(0.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3 r2.y, r7.xyzx, r5.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.z, r1.w, r1.w
mul r5.x, r2.z, l(0.797884583)
mad r5.y, -r2.z, l(0.797884583), l(1.000000)
mad r5.z, r3.w, r5.y, r5.x
mad r5.x, r2.x, r5.y, r5.x
mad r5.x, r5.z, r5.x, l(0.000010)
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
add r5.y, -r1.w, l(1.000000)
mad r5.y, r5.y, l(0.968000), l(0.030000)
log r5.y, r5.y
div r5.y, l(10.000000), r5.y
mul r5.z, r5.y, r5.y
mad r7.xy, r5.yyyy, r5.yyyy, l(2.000000, 1.000000, 0.000000, 0.000000)
mul r5.y, r7.x, l(0.159154937)
log r5.w, r5.w
mul r5.w, r5.w, r5.z
exp r5.w, r5.w
mul r5.y, r5.y, r5.w
add r5.w, -r3.w, l(1.000000)
mul r6.w, r5.w, r5.w
mul r6.w, r6.w, r6.w
mul r5.w, r5.w, r6.w
add r2.xw, -r2.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)
mul r6.w, r2.x, r2.x
mul r6.w, r6.w, r6.w
mul r2.x, r2.x, r6.w
mul r6.w, r2.y, r2.y
dp2 r6.w, r6.wwww, r1.wwww
add r6.w, r6.w, l(-0.500000)
mad r5.w, r6.w, r5.w, l(1.000000)
mad r6.w, r6.w, r2.x, l(1.000000)
mul r5.w, r5.w, r6.w
mul r5.x, r5.y, r5.x
mul r5.x, r5.x, l(0.785398185)
eq r5.y, cb0[3].w, l(0.000000)
max r6.w, r5.x, l(0.000100)
sqrt r6.w, r6.w
movc r5.x, r5.y, r6.w, r5.x
mul r5.x, r3.w, r5.x
max r5.x, r5.x, l(0.000000)
mul r3.w, r3.w, r5.w
mul r1.w, r1.w, r2.z
mad r1.w, -r1.w, l(0.280000), l(1.000000)
mad r5.w, r2.z, r2.z, l(1.000000)
div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
movc r1.w, r5.y, r1.w, r5.w
dp3 r5.w, r3.xyzx, r3.xyzx
ne r5.w, r5.w, l(0.000000)
and r5.w, r5.w, l(0x3f800000)
mul r5.x, r5.w, r5.x
add_sat r2.w, r2.w, cb0[9].y
mad r7.xzw, r6.xxyz, r3.wwww, r8.xxyz
mul r6.xyz, r6.xyzx, r5.xxxx
add r2.y, -r2.y, l(1.000000)
mul r3.w, r2.y, r2.y
mul r3.w, r3.w, r3.w
mul r2.y, r2.y, r3.w
add r8.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r8.xyz, r8.xyzx, r2.yyyy, r3.xyzx
mul r6.xyz, r6.xyzx, r8.xyzx
mad r6.xyz, r4.xyzx, r7.xzwx, r6.xyzx
mul r7.xzw, r12.xxyz, r1.wwww
add r8.xyz, -r3.xyzx, r2.wwww
mad r2.xyw, r2.xxxx, r8.xyxz, r3.xyxz
mad r2.xyw, r7.xzxw, r2.xyxw, r6.xyxz
mad r1.xyz, r1.xyzx, r0.wwww, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, r9.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r0.y, r0.y
mad r0.z, r0.z, cb0[9].y, r2.z
log r0.x, r0.x
mul r0.x, r0.x, r5.z
exp r0.x, r0.x
mul r0.x, r0.x, r7.y
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(8.000000), l(0.000100)
div r0.x, r0.x, r0.y
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r5.y, r0.y, r0.x
mad r0.xyz, r0.xxxx, r3.xyzx, r4.xyzx
mul r0.xyz, r10.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r4.wwww, r2.xywx
mul r0.w, v1.z, cb2[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used