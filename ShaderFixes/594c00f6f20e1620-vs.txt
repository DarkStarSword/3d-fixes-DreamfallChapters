// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 594c00f6f20e1620-vs.txt
// 3DMigoto: 594c00f6f20e1620 | Matched 3 variants of 1 shaders: Nature/SpeedTree
//
//       Unity headers extracted from SpeedTree.shader
//       Shader "Nature/SpeedTree" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//          _DetailTex ("Detail", 2D) = "black" { }
//          _BumpMap ("Normal Map", 2D) = "bump" { }
//          _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//         [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//         [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//         }
//         CustomEditor "SpeedTreeMaterialInspector"
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//           Pass 7/7 {
//             Tags { "LIGHTMODE"="Vertex" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//             Cull [_Cull]
//             GpuProgramID 444375
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 8355
// 2:              GpuProgramIndex 8357
// 4:              GpuProgramIndex 8359
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 163 0 5
// 2:   Keywords { "FOG_EXP" "GEOM_TYPE_BRANCH" }
// 4:   Keywords { "FOG_EXP2" "GEOM_TYPE_BRANCH" }
// 1:   Keywords { "FOG_LINEAR" "GEOM_TYPE_BRANCH" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 15 4 0 0 2 1 1 2 3 4
//      ConstBuffer "$Globals" 128
//      Float 96 [_WindQuality]
//      Float 100 [_WindEnabled]
//      Vector 112 [_Color]
//      ConstBuffer "UnityLighting" 720
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 224 [unity_LightPosition0]
//      Vector 240 [unity_LightPosition1]
//      Vector 256 [unity_LightPosition2]
//      Vector 272 [unity_LightPosition3]
//      Vector 288 [unity_LightPosition4]
//      Vector 304 [unity_LightPosition5]
//      Vector 320 [unity_LightPosition6]
//      Vector 336 [unity_LightPosition7]
//      Vector 352 [unity_LightAtten0]
//      Vector 368 [unity_LightAtten1]
//      Vector 384 [unity_LightAtten2]
//      Vector 400 [unity_LightAtten3]
//      Vector 416 [unity_LightAtten4]
//      Vector 432 [unity_LightAtten5]
//      Vector 448 [unity_LightAtten6]
//      Vector 464 [unity_LightAtten7]
//      Vector 480 [unity_SpotDirection0]
//      Vector 496 [unity_SpotDirection1]
//      Vector 512 [unity_SpotDirection2]
//      Vector 528 [unity_SpotDirection3]
//      Vector 544 [unity_SpotDirection4]
//      Vector 560 [unity_SpotDirection5]
//      Vector 576 [unity_SpotDirection6]
//      Vector 592 [unity_SpotDirection7]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 128 [glstate_matrix_invtrans_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Vector 0 [glstate_lightmodel_ambient]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 32 [_ST_WindBranch]
//      Vector 48 [_ST_WindBranchTwitch]
//      Vector 64 [_ST_WindBranchWhip]
//      Vector 80 [_ST_WindBranchAnchor]
//      Vector 96 [_ST_WindBranchAdherences]
//      Vector 112 [_ST_WindTurbulences]
//      Vector 240 [_ST_WindAnimation]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "SpeedTreeWind" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:25:13 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[35], dynamicIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[16], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v7.x
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v7.xxxx, cb0[7].xyzx
mul r0.w, cb0[6].y, cb0[6].x
ge r1.x, l(0.000000), r0.w
mul r1.yzw, cb2[17].xxyz, cb4[0].yyyy
mad r1.yzw, cb2[16].xxyz, cb4[0].xxxx, r1.yyzw
mad r1.yzw, cb2[18].xxyz, cb4[0].zzzz, r1.yyzw
dp3 r1.z, r1.yzwy, r1.yzwy
rsq r1.z, r1.z
mul r1.yz, r1.zzzz, r1.yywy
movc r1.xy, r1.xxxx, l(0,0,0,0), r1.yzyy
ge r1.z, r0.w, l(3.000000)
if_nz r1.z
  eq r1.z, r0.w, l(5.000000)
  if_nz r1.z
    mul r2.xyz, cb2[17].xyzx, cb4[5].yyyy
    mad r2.xyz, cb2[16].xyzx, cb4[5].xxxx, r2.xyzx
    mad r2.xyz, cb2[18].xyzx, cb4[5].zzzz, r2.xyzx
    dp3 r1.z, r2.xyzx, r2.xyzx
    rsq r1.z, r1.z
    mul r2.xyz, r1.zzzz, r2.xyzx
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r1.z, cb2[15].y, cb2[15].x
    add r1.z, r1.z, cb4[2].x
    add r4.x, r1.z, v3.w
    mad r4.y, r1.z, cb4[3].y, v3.w
    mul r1.w, r4.x, cb4[3].y
    mul r4.z, r1.w, l(0.500000)
    add r4.w, r4.x, -v3.z
    add r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r4.xyzw, r4.xyzw
    mad r4.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r5.xyzw, |r4.xyzw|, |r4.xyzw|
    mad r4.xyzw, -|r4.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r4.xyzw, r5.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r4.xyzw, r4.xyzw, r4.xyzw
    mul r5.w, r4.z, r4.y
    lt r1.w, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r5.xy, r1.wwww, r5.xyxx, r5.zwzz
    mad r1.w, -r4.y, r4.z, r5.x
    mad r1.w, r5.y, r1.w, r5.w
    add r2.w, -r1.w, r5.x
    mad r1.w, r5.y, r2.w, r1.w
    mul r1.w, r1.w, cb4[3].x
    add r2.w, -cb4[0].w, l(1.000000)
    add r3.w, -cb4[3].x, l(1.000000)
    mul r3.w, r3.w, r4.x
    mad r1.w, r1.w, r2.w, r3.w
    mad r2.w, r4.w, cb4[4].x, l(1.000000)
    mul r1.w, r1.w, r2.w
    mul r3.xyz, r1.wwww, r3.xyzx
    mad r3.xyz, r3.xyzx, cb4[2].yyyy, v0.xyzx
    mad r4.x, r1.z, l(0.100000), v3.w
    mul r1.z, cb4[7].x, cb4[15].x
    mad r4.y, r1.z, l(0.100000), v3.w
    add r1.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    frc r1.zw, r1.zzzw
    mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
    mul r4.xy, |r1.zwzz|, |r1.zwzz|
    mad r1.zw, -|r1.zzzw|, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    mad r1.zw, r4.xxxy, r1.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    add r1.zw, r1.zzzw, r1.zzzw
    mul r1.zw, r1.zzzw, r1.zzzw
    mul r1.z, r1.z, r1.w
    mad r1.z, -r1.z, cb4[7].x, l(1.000000)
    mul r1.w, r4.w, cb4[0].w
    mad r1.z, r1.w, cb4[4].x, r1.z
    mad r2.xyz, r2.xyzx, cb4[5].wwww, -r3.xyzx
    mul r2.xyz, r2.xyzx, cb4[6].yyyy
    mul r2.xyz, r1.zzzz, r2.xyzx
    mad r2.xyz, r2.xyzx, v3.zzzz, r3.xyzx
  else 
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r1.z, cb2[15].y, cb2[15].x
    add r1.z, r1.z, cb4[2].x
    add r4.x, r1.z, v3.w
    mad r4.y, r1.z, cb4[3].y, v3.w
    mul r1.z, r4.x, cb4[3].y
    mul r4.z, r1.z, l(0.500000)
    add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r5.xyz, |r4.xyzx|, |r4.xyzx|
    mad r4.xyz, -|r4.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r4.xyz, r5.xyzx, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    mul r5.w, r4.z, r4.y
    lt r1.z, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r1.zw, r1.zzzz, r5.xxxy, r5.zzzw
    mad r2.w, -r4.y, r4.z, r1.z
    mad r2.w, r1.w, r2.w, r5.w
    add r1.z, r1.z, -r2.w
    mad r1.z, r1.w, r1.z, r2.w
    mul r1.z, r1.z, cb4[3].x
    add r1.w, -cb4[0].w, l(1.000000)
    add r2.w, -cb4[3].x, l(1.000000)
    mul r2.w, r2.w, r4.x
    mad r1.z, r1.z, r1.w, r2.w
    mul r3.xyz, r1.zzzz, r3.xyzx
    mad r2.xyz, r3.xyzx, cb4[2].yyyy, v0.xyzx
  endif 
else 
  mov r2.xyz, v0.xyzx
endif 
lt r0.w, l(0.000000), r0.w
dp3 r1.z, r2.xyzx, r2.xyzx
sqrt r1.z, r1.z
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[1].z
mad r1.w, -r1.w, l(0.250000), r2.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb4[1].z
ne r2.w, r1.w, l(0.000000)
log r3.x, r1.w
mul r3.x, r3.x, cb4[1].w
exp r3.x, r3.x
movc r1.w, r2.w, r3.x, r1.w
add r3.x, cb2[15].x, cb4[1].x
mad r3.y, cb4[1].x, l(0.800000), cb2[15].y
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r3.xy, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.zw, |r3.xxxy|, |r3.xxxy|
mad r3.xy, -|r3.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r3.xy, r3.zwzz, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r3.xy, r3.xyxx, r3.xyxx
mad r2.w, r3.y, r3.y, r3.x
div r3.x, cb4[6].x, cb4[1].z
mad r2.w, cb4[1].y, r2.w, r3.x
mul r1.w, r1.w, r2.w
mad r3.xz, r1.xxyx, r1.wwww, r2.xxzx
mov r3.y, r2.y
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xyw, r1.xxxx, r3.xyxz
mul r1.xyz, r1.zzzz, r1.xywx
movc r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
mul r2.xyz, r1.yyyy, cb2[5].xyzx
mad r2.xyz, cb2[4].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb2[6].xyzx, r1.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb2[7].xyzx
mul r3.xyz, v2.yyyy, cb2[9].xyzx
mad r3.xyz, cb2[8].xyzx, v2.xxxx, r3.xyzx
mad r3.xyz, cb2[10].xyzx, v2.zzzz, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r5.xyz, r4.xyzx
mov r0.w, l(0)
loop 
  ige r1.w, r0.w, l(4)
  breakc_nz r1.w
  mad r6.xyz, -r2.xyzx, cb1[r0.w + 14].wwww, cb1[r0.w + 14].xyzx
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r2.w, r1.w
  mul r6.xyz, r2.wwww, r6.xyzx
  mad r1.w, r1.w, cb1[r0.w + 22].z, l(1.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  dp3 r2.w, r6.xyzx, cb1[r0.w + 30].xyzx
  max r2.w, r2.w, l(0.000000)
  add r2.w, r2.w, -cb1[r0.w + 22].x
  mul_sat r2.w, r2.w, cb1[r0.w + 22].y
  mul r1.w, r1.w, r2.w
  dp3 r2.w, r3.xyzx, r6.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r1.w, r1.w, r2.w
  mad r5.xyz, cb1[r0.w + 6].xyzx, r1.wwww, r5.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mul o2.xyz, r0.xyzx, r5.xyzx
mul r0.xyzw, r1.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, r1.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 594c00f6f20e1620-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

mov o1.x, r0.z
mov o1.yz, v3.xxyx
mov o1.w, l(0)
mov o2.w, cb0[7].w
ret 
// Approximately 0 instruction slots used