// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 12216f4809429ac4-ps.txt
// 3DMigoto: 12216f4809429ac4 |    Unity headers extracted from Standard_Disintegrate_IlumOverlay.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Bumped Diffuse Ilum Overlay" {
//      Properties {
//       _TintColor ("Tint Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,4.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _Illum ("Overlay Texture", 2D) = "black" { }
//       _IllumBump ("Overlay Normal Map", 2D) = "bump" { }
//       _IllumAmnt ("Illum Ammount", Float) = 0.000000
//       _IllumColor ("Ilum Color", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _OverlayColor ("Overlay Color", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _OverlayAmnt ("Overlay Amount", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 35541
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 83
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_IlumOverlay.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 237 9 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 9 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_TintColor]
//   Float 144 [_MetalNess]
//   Float 148 [_AlphaFactor]
//   Float 152 [_glossHigh]
//   Float 156 [_glossLow]
//   Float 160 [_MetalNessAlphaFactor]
//   Float 164 [_DisintegrateAmount]
//   Vector 176 [_DissolveColor]
//   Float 192 [_DissolveEdge]
//   Float 196 [_TileFactor]
//   Vector 208 [_EdgeEmission]
//   Float 224 [_IllumAmnt]
//   Vector 240 [_IllumColor]
//   Vector 256 [_OverlayColor]
//   Float 272 [_OverlayAmnt]
//   Float 276 [_EmissionFloat]
//   Float 280 [_UVxSpeed]
//   Float 320 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_NoiseTex] 2D 4
//   SetTexture 1 [_MainTex] 2D 2
//   SetTexture 2 [_IllumBump] 2D 6
//   SetTexture 3 [_Illum] 2D 5
//   SetTexture 4 [_BumpMap] 2D 3
//   SetTexture 5 [unity_Lightmap] 2D 0
//   SetTexture 6 [unity_LightmapInd] 2D -1
//   SetTexture 7 [unity_SpecCube0] CUBE 1
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:58:42 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyzw        7     NONE   float   xy  
// TEXCOORD                 7   x           8     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xy
dcl_input_ps linear v8.x
dcl_output o0.xyzw
dcl_temps 20
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r18.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 12216f4809429ac4-ps.txt

mul r18.w, -r18.x, r18.y
mad r19.xyz, -r18.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r19.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.y, cb1[0].x, cb0[17].z, v1.y
mov r3.x, v1.x
mul r3.xy, r3.xyxx, cb0[12].yyyy
sample r3.xyzw, r3.xyxx, t0.xyzw, s4
add r1.w, r3.x, -cb0[10].y
sample r3.xyzw, v1.xyxx, t1.xyzw, s2
mul r3.xyzw, r3.xyzw, v5.xyzw
mul r4.xyzw, r3.xyzw, cb0[8].xyzw
sample r5.xyzw, v1.xyxx, t2.xyzw, s6
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
sample r6.xyzw, v1.xyxx, t3.xyzw, s5
sample r7.xyzw, v1.zwzz, t4.xyzw, s3
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r7.z, r2.w
lt r2.w, r1.w, cb0[12].x
lt r3.w, l(0.000000), cb0[10].y
and r2.w, r2.w, r3.w
mul r8.xyz, cb0[13].xyzx, cb0[17].yyyy
mul r9.xyz, r6.xyzx, cb0[17].xxxx
mad r3.xyw, -r3.xyxz, cb0[8].xyxz, cb0[16].xyxz
mad r3.xyw, r9.xyxz, r3.xyxw, r4.xyxz
mul r6.xyz, r6.xyzx, cb0[15].xyzx
mul r6.xyz, r6.xyzx, cb0[14].xxxx
mad r5.xyz, r5.xyzx, cb0[17].xxxx, r7.xyzx
dp3 r4.z, r5.xyzx, r5.xyzx
rsq r4.z, r4.z
mul r5.xyz, r4.zzzz, r5.xyzx
movc r3.xyw, r2.wwww, cb0[11].xyxz, r3.xyxw
movc r5.xyz, r2.wwww, r7.xyzx, r5.xyzx
movc r6.xyz, r2.wwww, r8.xyzx, r6.xyzx
add r4.xy, r4.wyww, r4.wxww
max r2.w, r4.x, cb0[10].x
min r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, cb0[9].x
mad r3.z, r3.z, cb0[8].z, r4.y
mul r4.x, r3.z, l(0.333333343)
mad r3.z, -r3.z, l(0.333333343), cb0[9].z
mad r3.z, cb0[9].w, r3.z, r4.x
max r4.x, r4.w, cb0[9].y
mul r4.y, r3.z, r4.x
mad r3.z, -r3.z, r4.x, cb0[16].w
mad r3.z, r9.x, r3.z, r4.y
add r4.x, r1.w, -cb0[20].x
lt r4.x, r4.x, l(0.000000)
discard_nz r4.x
dp3 r4.x, v2.xyzx, r5.xyzx
dp3 r4.y, v3.xyzx, r5.xyzx
dp3 r4.z, v4.xyzx, r5.xyzx
add r4.w, -r3.z, l(1.000000)
dp3 r5.x, -r2.xyzx, r4.xyzx
add r5.x, r5.x, r5.x
mad r5.xyz, r4.xyzx, -r5.xxxx, -r2.xyzx
sample r7.xyzw, v7.xyxx, t5.xyzw, s0
log r5.w, r7.w
mul r5.w, r5.w, cb0[4].y
exp r5.w, r5.w
mul r5.w, r5.w, cb0[4].x
mul r7.xyz, r7.xyzx, r5.wwww
sample r8.xyzw, v7.xyxx, t6.xyzw, s0
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.w, r8.xyzx, r8.xyzx
sqrt r5.w, r5.w
max r5.w, r5.w, l(0.001000)
div r8.xyz, r8.xyzx, r5.wwww
dp3 r6.w, r4.xyzx, r8.xyzx
max r6.w, r6.w, l(0.000000)
add r7.w, -r5.w, l(1.000000)
mul r9.xyz, r7.wwww, r7.xyzx
mul r7.xyz, r5.wwww, r7.xyzx
add r10.xy, v7.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r11.xyzw, r10.xyxx, t5.xyzw, s0
log r5.w, r11.w
mul r5.w, r5.w, cb0[4].y
exp r5.w, r5.w
mul r5.w, r5.w, cb0[4].x
mul r11.xyz, r11.xyzx, r5.wwww
sample r10.xyzw, r10.xyxx, t6.xyzw, s0
mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.w, r10.xyzx, r10.xyzx
sqrt r5.w, r5.w
max r5.w, r5.w, l(0.001000)
div r10.xyz, r10.xyzx, r5.wwww
dp3 r7.w, r4.xyzx, r10.xyzx
max r7.w, r7.w, l(0.000000)
add r8.w, -r5.w, l(1.000000)
mul r12.xyz, r8.wwww, r11.xyzx
mul r11.xyz, r5.wwww, r11.xyzx
mul r12.xyz, r7.wwww, r12.xyzx
mad r9.xyz, r9.xyzx, r6.wwww, r12.xyzx
lt r5.w, l(0.000000), cb3[2].w
if_nz r5.w
  dp3 r5.w, r5.xyzx, r5.xyzx
  rsq r5.w, r5.w
  mul r12.xyz, r5.wwww, r5.xyzx
  add r13.xyz, -r0.xyzx, cb3[0].xyzx
  div r13.xyz, r13.xyzx, r12.xyzx
  add r14.xyz, -r0.xyzx, cb3[1].xyzx
  div r14.xyz, r14.xyzx, r12.xyzx
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
  movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
  min r5.w, r13.y, r13.x
  min r5.w, r13.z, r5.w
  add r13.xyz, r0.xyzx, -cb3[2].xyzx
  mad r12.xyz, r12.xyzx, r5.wwww, r13.xyzx
else 
  mov r12.xyz, r5.xyzx
endif 
log r5.w, r4.w
mul r5.w, r5.w, l(0.750000)
exp r5.w, r5.w
mad r8.w, -r5.w, l(0.700000), l(1.700000)
mul r5.w, r5.w, r8.w
mul r5.w, r5.w, l(6.000000)
sample_l r12.xyzw, r12.xyzx, t7.xyzw, s1, r5.w
log r8.w, r12.w
mul r8.w, r8.w, cb3[3].y
exp r8.w, r8.w
mul r8.w, r8.w, cb3[3].x
mul r13.xyz, r12.xyzx, r8.wwww
lt r9.w, cb3[1].w, l(0.999990)
if_nz r9.w
  lt r9.w, l(0.000000), cb3[6].w
  if_nz r9.w
    dp3 r9.w, r5.xyzx, r5.xyzx
    rsq r9.w, r9.w
    mul r14.xyz, r5.xyzx, r9.wwww
    add r15.xyz, -r0.xyzx, cb3[4].xyzx
    div r15.xyz, r15.xyzx, r14.xyzx
    add r16.xyz, -r0.xyzx, cb3[5].xyzx
    div r16.xyz, r16.xyzx, r14.xyzx
    lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r14.xyzx
    movc r15.xyz, r17.xyzx, r15.xyzx, r16.xyzx
    min r9.w, r15.y, r15.x
    min r9.w, r15.z, r9.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r5.xyz, r14.xyzx, r9.wwww, r0.xyzx
  endif 
  sample_l r5.xyzw, r5.xyzx, t8.xyzw, s1, r5.w
  log r0.x, r5.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r8.wwww, r12.xyzx, -r0.xyzx
  mad r13.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
endif 
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
add r4.xyz, r3.xywx, -cb0[2].xyzx
mad r4.xyz, r2.wwww, r4.xyzx, cb0[2].xyzx
mad r2.w, -r2.w, cb0[2].w, cb0[2].w
mul r3.xyw, r2.wwww, r3.xyxw
mad r5.xyz, r1.xyzx, r0.wwww, r8.xyzx
dp3 r5.w, r5.xyzx, r5.xyzx
max r5.w, r5.w, l(0.001000)
rsq r5.w, r5.w
mul r5.xyz, r5.wwww, r5.xyzx
dp3 r5.w, r0.xyzx, r5.xyzx
max r5.w, r5.w, l(0.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3 r2.y, r8.xyzx, r5.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.z, r4.w, r4.w
mul r5.x, r2.z, l(0.797884583)
mad r5.y, -r2.z, l(0.797884583), l(1.000000)
mad r5.z, r6.w, r5.y, r5.x
mad r5.x, r2.x, r5.y, r5.x
mad r5.x, r5.z, r5.x, l(0.000010)
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
add r5.y, -r4.w, l(1.000000)
mad r5.y, r5.y, l(0.968000), l(0.030000)
log r5.y, r5.y
div r5.y, l(10.000000), r5.y
mul r5.z, r5.y, r5.y
mad r8.xy, r5.yyyy, r5.yyyy, l(2.000000, 1.000000, 0.000000, 0.000000)
mul r5.y, r8.x, l(0.159154937)
log r5.w, r5.w
mul r5.w, r5.w, r5.z
exp r5.w, r5.w
mul r5.y, r5.y, r5.w
add r5.w, -r6.w, l(1.000000)
mul r8.x, r5.w, r5.w
mul r8.x, r8.x, r8.x
mul r5.w, r5.w, r8.x
add r2.x, -r2.x, l(1.000000)
mul r8.x, r2.x, r2.x
mul r8.x, r8.x, r8.x
mul r2.x, r2.x, r8.x
mul r8.x, r2.y, r2.y
dp2 r8.x, r8.xxxx, r4.wwww
add r8.x, r8.x, l(-0.500000)
mad r5.w, r8.x, r5.w, l(1.000000)
mad r8.x, r8.x, r2.x, l(1.000000)
mul r5.w, r5.w, r8.x
mul r5.x, r5.y, r5.x
mul r5.x, r5.x, l(0.785398185)
eq r5.y, cb0[3].w, l(0.000000)
max r8.x, r5.x, l(0.000100)
sqrt r8.x, r8.x
movc r5.x, r5.y, r8.x, r5.x
mul r5.xw, r6.wwww, r5.xxxw
max r5.x, r5.x, l(0.000000)
mul r4.w, r2.z, r4.w
mad r4.w, -r4.w, l(0.280000), l(1.000000)
mad r6.w, r2.z, r2.z, l(1.000000)
div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
movc r4.w, r5.y, r4.w, r6.w
dp3 r6.w, r4.xyzx, r4.xyzx
ne r6.w, r6.w, l(0.000000)
and r6.w, r6.w, l(0x3f800000)
mul r5.x, r5.x, r6.w
add r2.w, -r2.w, r3.z
add_sat r2.w, r2.w, l(1.000000)
mad r8.xzw, r7.xxyz, r5.wwww, r9.xxyz
mul r7.xyz, r7.xyzx, r5.xxxx
add r2.y, -r2.y, l(1.000000)
mul r5.x, r2.y, r2.y
mul r5.x, r5.x, r5.x
mul r2.y, r2.y, r5.x
add r9.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r9.xyz, r9.xyzx, r2.yyyy, r4.xyzx
mul r7.xyz, r7.xyzx, r9.xyzx
mad r7.xyz, r3.xywx, r8.xzwx, r7.xyzx
mul r8.xzw, r13.xxyz, r4.wwww
add r9.xyz, -r4.xyzx, r2.wwww
mad r2.xyw, r2.xxxx, r9.xyxz, r4.xyxz
mad r2.xyw, r8.xzxw, r2.xyxw, r7.xyxz
mad r1.xyz, r1.xyzx, r0.wwww, r10.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, r10.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r0.y, r0.y
mad r0.z, r0.z, r3.z, r2.z
log r0.x, r0.x
mul r0.x, r0.x, r5.z
exp r0.x, r0.x
mul r0.x, r0.x, r8.y
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(8.000000), l(0.000100)
div r0.x, r0.x, r0.y
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r5.y, r0.y, r0.x
mad r0.xyz, r0.xxxx, r4.xyzx, r3.xywx
mul r0.xyz, r11.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r7.wwww, r2.xywx
add r0.xyz, r6.xyzx, r0.xyzx
mad_sat r0.w, v8.x, cb2[1].z, cb2[1].w
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, r1.w
ret 
// Approximately 0 instruction slots used