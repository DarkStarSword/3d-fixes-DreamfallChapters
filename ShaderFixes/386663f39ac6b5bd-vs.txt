// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 386663f39ac6b5bd-vs.txt
// 3DMigoto: 386663f39ac6b5bd | Matched 192 variants of 4 shaders: Hidden/FogVolume, Hidden/FogVolume_Rotation, Hidden/FogVolume_Rotation_SHADE, Hidden/FogVolume_SHADE
//
// 00000000000000000000000000000000ffffffffffffffff:    Unity headers extracted from FogVolume.shader
// 0000000000000000ffffffffffffffff0000000000000000:    Unity headers extracted from FogVolume_Rotation.shader
// 00000000ffffffff00000000000000000000000000000000:    Unity headers extracted from FogVolume_Rotation_SHADE.shader
// ffffffff0000000000000000000000000000000000000000:    Unity headers extracted from FogVolume_SHADE.shader
// 00000000000000000000000000000000ffffffffffffffff:    Shader "Hidden/FogVolume" {
// 0000000000000000ffffffffffffffff0000000000000000:    Shader "Hidden/FogVolume_Rotation" {
// 00000000ffffffff00000000000000000000000000000000:    Shader "Hidden/FogVolume_Rotation_SHADE" {
// ffffffff0000000000000000000000000000000000000000:    Shader "Hidden/FogVolume_SHADE" {
//                                                        SubShader 1/1 {
//                                                          Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//                                                          Pass 1/1 {
//                                                            Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//                                                            ZTest Always
//                                                            ZWrite Off
//                                                            Cull Front
//                                                            Blend SrcAlpha OneMinusSrcAlpha
// ffffffff0000000000000000000000000000000000000000:          GpuProgramID 16353
// 00000000000000000000000000000000ffffffffffffffff:          GpuProgramID 27624
// 00000000ffffffff00000000000000000000000000000000:          GpuProgramID 57605
// 0000000000000000ffffffffffffffff0000000000000000:          GpuProgramID 59518
//                                                            Program "vp" {
//                                                              SubProgram "d3d11 " {
// 000000010000000100000000000000010000000000000001:              GpuProgramIndex 1
// 000000000000000000040000000000000004000000000000:              GpuProgramIndex 101
// 000000000000000000080000000000000008000000000000:              GpuProgramIndex 103
// 000000000000000000100000000000000010000000000000:              GpuProgramIndex 105
// 000000000000000000200000000000000020000000000000:              GpuProgramIndex 107
// 000000000000000000400000000000000040000000000000:              GpuProgramIndex 109
// 000000200000002000000000000000200000000000000020:              GpuProgramIndex 11
// 000000000000000000800000000000000080000000000000:              GpuProgramIndex 111
// 000000000000000001000000000000000100000000000000:              GpuProgramIndex 113
// 000000000000000002000000000000000200000000000000:              GpuProgramIndex 115
// 000000000000000004000000000000000400000000000000:              GpuProgramIndex 117
// 000000000000000008000000000000000800000000000000:              GpuProgramIndex 119
// 000000000000000010000000000000001000000000000000:              GpuProgramIndex 121
// 000000000000000020000000000000002000000000000000:              GpuProgramIndex 123
// 000000000000000040000000000000004000000000000000:              GpuProgramIndex 125
// 000000000000000080000000000000008000000000000000:              GpuProgramIndex 127
// 000000400000004000000000000000400000000000000040:              GpuProgramIndex 13
// 000000800000008000000000000000800000000000000080:              GpuProgramIndex 15
// 000001000000010000000000000001000000000000000100:              GpuProgramIndex 17
// 000002000000020000000000000002000000000000000200:              GpuProgramIndex 19
// 000004000000040000000000000004000000000000000400:              GpuProgramIndex 21
// 000008000000080000000000000008000000000000000800:              GpuProgramIndex 23
// 000010000000100000000000000010000000000000001000:              GpuProgramIndex 25
// 000020000000200000000000000020000000000000002000:              GpuProgramIndex 27
// 000040000000400000000000000040000000000000004000:              GpuProgramIndex 29
// 000000020000000200000000000000020000000000000002:              GpuProgramIndex 3
// 000080000000800000000000000080000000000000008000:              GpuProgramIndex 31
// 000100000001000000000000000100000000000000010000:              GpuProgramIndex 33
// 000200000002000000000000000200000000000000020000:              GpuProgramIndex 35
// 000400000004000000000000000400000000000000040000:              GpuProgramIndex 37
// 000800000008000000000000000800000000000000080000:              GpuProgramIndex 39
// 001000000010000000000000001000000000000000100000:              GpuProgramIndex 41
// 002000000020000000000000002000000000000000200000:              GpuProgramIndex 43
// 004000000040000000000000004000000000000000400000:              GpuProgramIndex 45
// 008000000080000000000000008000000000000000800000:              GpuProgramIndex 47
// 010000000100000000000000010000000000000001000000:              GpuProgramIndex 49
// 000000040000000400000000000000040000000000000004:              GpuProgramIndex 5
// 020000000200000000000000020000000000000002000000:              GpuProgramIndex 51
// 040000000400000000000000040000000000000004000000:              GpuProgramIndex 53
// 080000000800000000000000080000000000000008000000:              GpuProgramIndex 55
// 100000001000000000000000100000000000000010000000:              GpuProgramIndex 57
// 200000002000000000000000200000000000000020000000:              GpuProgramIndex 59
// 400000004000000000000000400000000000000040000000:              GpuProgramIndex 61
// 800000008000000000000000800000000000000080000000:              GpuProgramIndex 63
// 000000000000000000000001000000000000000100000000:              GpuProgramIndex 65
// 000000000000000000000002000000000000000200000000:              GpuProgramIndex 67
// 000000000000000000000004000000000000000400000000:              GpuProgramIndex 69
// 000000080000000800000000000000080000000000000008:              GpuProgramIndex 7
// 000000000000000000000008000000000000000800000000:              GpuProgramIndex 71
// 000000000000000000000010000000000000001000000000:              GpuProgramIndex 73
// 000000000000000000000020000000000000002000000000:              GpuProgramIndex 75
// 000000000000000000000040000000000000004000000000:              GpuProgramIndex 77
// 000000000000000000000080000000000000008000000000:              GpuProgramIndex 79
// 000000000000000000000100000000000000010000000000:              GpuProgramIndex 81
// 000000000000000000000200000000000000020000000000:              GpuProgramIndex 83
// 000000000000000000000400000000000000040000000000:              GpuProgramIndex 85
// 000000000000000000000800000000000000080000000000:              GpuProgramIndex 87
// 000000000000000000001000000000000000100000000000:              GpuProgramIndex 89
// 000000100000001000000000000000100000000000000010:              GpuProgramIndex 9
// 000000000000000000002000000000000000200000000000:              GpuProgramIndex 91
// 000000000000000000004000000000000000400000000000:              GpuProgramIndex 93
// 000000000000000000008000000000000000800000000000:              GpuProgramIndex 95
// 000000000000000000010000000000000001000000000000:              GpuProgramIndex 97
// 000000000000000000020000000000000002000000000000:              GpuProgramIndex 99
//                                                              }
//                                                            }
//                                                          }
//                                                        }
//                                                      }
//
// 00000000000000000000000000000000ffffffffffffffff: Unity 5.3 headers extracted from FogVolume.shader.decompressed:
// 0000000000000000ffffffffffffffff0000000000000000: Unity 5.3 headers extracted from FogVolume_Rotation.shader.decompressed:
// 00000000ffffffff00000000000000000000000000000000: Unity 5.3 headers extracted from FogVolume_Rotation_SHADE.shader.decompressed:
// ffffffff0000000000000000000000000000000000000000: Unity 5.3 headers extracted from FogVolume_SHADE.shader.decompressed:
//                                                     API d3d11
//                                                     Shader model vs_4_0
//                                                     undeciphered1: 201510240 23 0 0
// 004000000040000000001000000000000000100000000000:   Keywords { "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 400000004000000010000000000000001000000000000000:   Keywords { "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000040000000400000000000100000000000000010000000:   Keywords { "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000400000004000000000000010000000000000001000:   Keywords { "_COLLISION" "_FOG_GRADIENT" }
// 000400000004000000000010000000000000001000000000:   Keywords { "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 040000000400000000100000000000000010000000000000:   Keywords { "_COLLISION" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000004000000040000000000001000000000000000100000:   Keywords { "_COLLISION" "_FOG_VOLUME_NOISE" }
// 000000040000000400000000000000100000000000000010:   Keywords { "_COLLISION" }
// 008000000080000000002000000000000000200000000000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 800000008000000020000000000000002000000000000000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000080000000800000000000200000000000000020000000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000800000008000000000000020000000000000002000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_GRADIENT" }
// 000800000008000000000020000000000000002000000000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 080000000800000000200000000000000020000000000000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000008000000080000000000002000000000000000200000:   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_VOLUME_NOISE" }
// 000000080000000800000000000000200000000000000020:   Keywords { "_DOUBLE_LAYER" "_COLLISION" }
// 002000000020000000000200000000000000020000000000:   Keywords { "_DOUBLE_LAYER" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 200000002000000002000000000000000200000000000000:   Keywords { "_DOUBLE_LAYER" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000020000000200000000000020000000000000002000000:   Keywords { "_DOUBLE_LAYER" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000200000002000000000000002000000000000000200:   Keywords { "_DOUBLE_LAYER" "_FOG_GRADIENT" }
// 000200000002000000000002000000000000000200000000:   Keywords { "_DOUBLE_LAYER" "_FOG_VOLUME_INSCATTERING" }
// 020000000200000000020000000000000002000000000000:   Keywords { "_DOUBLE_LAYER" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000002000000020000000000000200000000000000020000:   Keywords { "_DOUBLE_LAYER" "_FOG_VOLUME_NOISE" }
// 000000000000000000008000000000000000800000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000080000000000000008000000000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000800000000000000080000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000080000000000000008000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_GRADIENT" }
// 000000000000000000000080000000000000008000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000800000000000000080000000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000008000000000000000800000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000000800000000000000080:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_COLLISION" }
// 000000000000000000000800000000000000080000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000008000000000000000800000000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000080000000000000008000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000008000000000000000800:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_GRADIENT" }
// 000000000000000000000008000000000000000800000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000080000000000000008000000000000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000000800000000000000080000:   Keywords { "_DOUBLE_LAYER" "_SHADE" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000000080000000000000008:   Keywords { "_DOUBLE_LAYER" "_SHADE" }
// 000000020000000200000000000000020000000000000002:   Keywords { "_DOUBLE_LAYER" }
// 001000000010000000000100000000000000010000000000:   Keywords { "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 100000001000000001000000000000000100000000000000:   Keywords { "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000010000000100000000000010000000000000001000000:   Keywords { "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000100000001000000000000001000000000000000100:   Keywords { "_FOG_GRADIENT" }
// 000100000001000000000001000000000000000100000000:   Keywords { "_FOG_VOLUME_INSCATTERING" }
// 010000000100000000010000000000000001000000000000:   Keywords { "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000001000000010000000000000100000000000000010000:   Keywords { "_FOG_VOLUME_NOISE" }
// 000000000000000000004000000000000000400000000000:   Keywords { "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000040000000000000004000000000000000:   Keywords { "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000400000000000000040000000:   Keywords { "_SHADE" "_COLLISION" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000040000000000000004000:   Keywords { "_SHADE" "_COLLISION" "_FOG_GRADIENT" }
// 000000000000000000000040000000000000004000000000:   Keywords { "_SHADE" "_COLLISION" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000400000000000000040000000000000:   Keywords { "_SHADE" "_COLLISION" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000004000000000000000400000:   Keywords { "_SHADE" "_COLLISION" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000000400000000000000040:   Keywords { "_SHADE" "_COLLISION" }
// 000000000000000000000400000000000000040000000000:   Keywords { "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000004000000000000000400000000000000:   Keywords { "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000040000000000000004000000:   Keywords { "_SHADE" "_FOG_GRADIENT" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000004000000000000000400:   Keywords { "_SHADE" "_FOG_GRADIENT" }
// 000000000000000000000004000000000000000400000000:   Keywords { "_SHADE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000040000000000000004000000000000:   Keywords { "_SHADE" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
// 000000000000000000000000000400000000000000040000:   Keywords { "_SHADE" "_FOG_VOLUME_NOISE" }
// 000000000000000000000000000000040000000000000004:   Keywords { "_SHADE" }
//                                                     undeciphered2: 1 0 3 0 0 0
//                                                     undeciphered3: 1 1 0 0
// ffffffff00ff00ff3333ffff3333ffffffffffffffffffff:   ConstBuffer "$Globals" 320
// 00000000ff00ff00cccc0000cccc00000000000000000000:   ConstBuffer "$Globals" 336
//                                                     Vector 240 [L] 3
//                                                     ConstBuffer "UnityPerCamera" 144
//                                                     Vector 64 [_WorldSpaceCameraPos] 3
//                                                     Vector 80 [_ProjectionParams]
//                                                     ConstBuffer "UnityPerDraw" 352
//                                                     Matrix 0 [glstate_matrix_mvp]
//                                                     Matrix 64 [glstate_matrix_modelview0]
//                                                     Matrix 192 [unity_ObjectToWorld]
//                                                     Matrix 256 [unity_WorldToObject]
//                                                     BindCB "$Globals" 0
//                                                     BindCB "UnityPerCamera" 1
//                                                     BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:08:42 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 386663f39ac6b5bd-vs.txt

mul r2.w, -r2.x, r2.y
mad r3.xyz, -r2.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 386663f39ac6b5bd-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r1.xyz, v0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
add o1.xyz, r1.xyzx, cb2[15].xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o2.zw, r0.zzzw
add o2.xy, r1.zzzz, r1.xwxx
mov o3.xyz, v0.xyzx
mul r0.xyz, v0.yyyy, cb2[5].xyzx
mad r0.xyz, cb2[4].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[6].xyzx, v0.zzzz, r0.xyzx
add o4.xyz, r0.xyzx, cb2[7].xyzx
mul r0.xyz, r3.yyyy, cb2[17].xyzx
mad r0.xyz, cb2[16].xyzx, r3.xxxx, r0.xyzx
mad r0.xyz, cb2[18].xyzx, r3.zzzz, r0.xyzx
add o5.xyz, r0.xyzx, cb2[19].xyzx
mul r0.xyz, cb0[15].yyyy, cb2[17].xyzx
mad r0.xyz, cb2[16].xyzx, cb0[15].xxxx, r0.xyzx
mad r0.xyz, cb2[18].xyzx, cb0[15].zzzz, r0.xyzx
add o6.xyz, r0.xyzx, cb2[19].xyzx
ret 
// Approximately 0 instruction slots used