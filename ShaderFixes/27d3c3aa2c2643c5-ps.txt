// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 27d3c3aa2c2643c5-ps.txt
// 3DMigoto: 27d3c3aa2c2643c5 |    Unity headers extracted from Standard_Moss.shader
//    Shader "Dreamfall/Unity5/Standard_Moss" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FresnelColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _ParallaxMap ("Height Map", 2D) = "white" { }
//       _Gloss ("Moss Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _Fresnel ("Reflection Fresnel Exponent", Float) = 2.000000
//       _Parallax ("Height", Range(-1.000000,1.000000)) = 0.000000
//       _MapTrength ("Parallax Map Strength", Range(-1.000000,1.000000)) = 1.000000
//       _Smudge ("Water Smudge", Range(-10.000000,10.000000)) = 1.000000
//       _ReflAmount ("Reflection amount", Float) = 0.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _distortScale ("Distort Scale", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 130470
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 135
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Moss.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 109 3 0
//   Keywords { "DIRECTIONAL" "FOG_EXP" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Float 172 [_Gloss]
//   Float 176 [_Metallic]
//   Float 180 [_Parallax]
//   Float 184 [_MapTrength]
//   Float 192 [_distortScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_ParallaxMap] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_MainTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:11:22 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 5      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 27d3c3aa2c2643c5-ps.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

mul r0.xy, v1.xyxx, cb0[12].xxxx
sample r0.xyzw, r0.xyxx, t0.xyzw, s1
mul r0.x, r0.x, cb0[11].z
mul r0.x, r0.x, l(0.500000)
add r0.yzw, -v5.xxyz, r6.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
mad r0.yzw, r0.yyzw, r1.xxxx, cb2[0].xxyz
mul r2.xyz, r1.zzzz, v3.xyzx
mad r2.xyz, v2.xyzx, r1.yyyy, r2.xyzx
mad r2.xyz, v4.xyzx, r1.wwww, r2.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r2.xy, r1.xxxx, r2.xyxx
mad r1.x, r2.z, r1.x, l(0.420000)
div r2.xyzw, r2.xyxy, r1.xxxx
mul r1.x, cb0[11].y, l(0.500000)
mul r3.xyzw, r2.xyzw, r1.xxxx
mad r2.xyzw, r0.xxxx, r2.zwzw, r3.xyzw
add r2.xyzw, r2.xyzw, v1.xyzw
sample r3.xyzw, r2.zwzz, t1.xyzw, s2
sample r2.xyzw, r2.xyxx, t2.xyzw, s0
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r3.xyxx, r3.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r3.z, r0.x
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r4.xyzx
dp3 r0.x, r4.xyzx, cb2[0].xyzx
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r3.xyzx, r0.yzwy
dp3 r1.y, r3.xyzx, r1.yzwy
max r1.y, r1.y, l(0.000000)
dp3 r0.y, cb2[0].xyzx, r0.yzwy
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.z, r1.x, l(0.000000)
log r0.z, r0.z
add r0.w, r2.y, r2.x
mad r0.w, r2.z, l(0.333333343), r0.w
mad r0.w, r0.w, cb0[8].w, cb0[10].w
add r0.w, -r0.w, l(1.000000)
add r1.x, -r0.w, l(1.000000)
mad r1.x, r1.x, l(0.968000), l(0.030000)
log r1.x, r1.x
div r1.x, l(10.000000), r1.x
mul r1.z, r1.x, r1.x
mad r1.x, r1.x, r1.x, l(2.000000)
mul r1.x, r1.x, l(0.159154937)
mul r0.z, r0.z, r1.z
exp r0.z, r0.z
mul r0.z, r1.x, r0.z
mul r1.x, r0.w, r0.w
mul r1.z, r1.x, l(0.797884583)
mad r1.x, -r1.x, l(0.797884583), l(1.000000)
mad r1.w, r1.y, r1.x, r1.z
add r1.y, -r1.y, l(1.000000)
mad r1.x, r0.x, r1.x, r1.z
mad r1.x, r1.x, r1.w, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, l(0.785398185)
max r1.x, r0.z, l(0.000100)
sqrt r1.x, r1.x
eq r1.z, cb0[3].w, l(0.000000)
movc r0.z, r1.z, r1.x, r0.z
mul r0.z, r0.x, r0.z
max r0.z, r0.z, l(0.000000)
mad r1.xzw, r2.xxyz, cb0[8].xxyz, -cb0[2].xxyz
mul r2.xyz, r2.xyzx, cb0[8].xyzx
mad r1.xzw, cb0[11].xxxx, r1.xxzw, cb0[2].xxyz
dp3 r2.w, r1.xzwx, r1.xzwx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r0.z, r0.z, r2.w
mul r3.xyz, r0.zzzz, cb0[6].xyzx
add r4.xyz, -r1.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.z, -r0.y, l(1.000000)
mul r0.y, r0.y, r0.y
dp2 r0.y, r0.yyyy, r0.wwww
add r0.y, r0.y, l(-0.500000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
mad r1.xzw, r4.xxyz, r0.zzzz, r1.xxzw
mul r1.xzw, r1.xxzw, r3.xxyz
mul r0.z, r1.y, r1.y
mul r0.z, r0.z, r0.z
mul r0.z, r1.y, r0.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r0.w, -r0.x, l(1.000000)
mul r1.y, r0.w, r0.w
mul r1.y, r1.y, r1.y
mul r0.w, r0.w, r1.y
mad r0.y, r0.y, r0.w, l(1.000000)
mul r0.y, r0.z, r0.y
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, cb0[6].xyzx
mad r0.w, -cb0[11].x, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r2.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xzwx
mul r0.w, v2.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used