// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2ffecdb8fb92e1d1-ps.txt
// 3DMigoto: 2ffecdb8fb92e1d1 |    Unity headers extracted from Standard_MaskedTint_Ilum.shader
//    Shader "Dreamfall/Unity5/Standard_MaskedTint_Ilum" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _TintMask ("Tint Mask (RGB)", 2D) = "Black" { }
//       _TintColorR ("Tint Color - R", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _TintColorB ("Tint Color - G", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _TintColorG ("Tint Color - B", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Color_Mul ("Tint Color Multiply", Float) = 2.000000
//       _Illum ("IllumMap (RGB)", 2D) = "black" { }
//       _GlossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.500000
//       _GlossHigh ("Gloss High", Range(0.000000,1.000000)) = 0.800000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _Metalness ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metal Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _EmissionLM ("Emission (Lightmapper)", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 110690
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 237
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_MaskedTint_Ilum.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 130 10 0
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 7 5 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 192 [_GlossLow]
//   Float 196 [_GlossHigh]
//   Float 200 [_AlphaFactor]
//   Float 204 [_Metalness]
//   Float 208 [_MetalNessAlphaFactor]
//   Vector 224 [_Color]
//   Vector 240 [_TintColorR]
//   Vector 256 [_TintColorG]
//   Vector 272 [_TintColorB]
//   Float 292 [_Color_Mul]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_TintMask] 2D 6
//   SetTexture 2 [_BumpMap] 2D 5
//   SetTexture 3 [_DitherMaskLOD2D] 2D 0
//   SetTexture 4 [_LightTextureB0] 2D 3
//   SetTexture 5 [_LightTexture0] CUBE 2
//   SetTexture 6 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerDraw" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:06:38 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2ffecdb8fb92e1d1-ps.txt
mov r9.xyzw, cb1[4].xyzw
mul r10.x, -r8.x, r8.y
mul r11.xyzw, cb10[0].xyzw, r10.xxxx
add r9.xyz, r9.xyz, -r11.xyz

div r0.xy, v6.xyxx, v6.zzzz
frc r0.y, r0.y
mad r0.z, r0.y, l(0.062500), cb4[20].y
sample r0.xyzw, r0.xzxx, t3.xyzw, s0
add r0.x, r0.w, l(-0.500000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
dp3 r0.x, v7.xyzx, v7.xyzx
sqrt r0.x, r0.x
mul r0.x, r0.x, cb2[1].w
mul r0.x, r0.x, l(0.970000)
add r0.yzw, v7.xxyz, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
sample r1.xyzw, r0.yzwy, t6.xyzw, s1
add r0.yzw, v7.xxyz, l(0.000000, -0.00781250000, -0.00781250000, 0.00781250000)
sample r2.xyzw, r0.yzwy, t6.xyzw, s1
mov r1.y, r2.x
add r0.yzw, v7.xxyz, l(0.000000, -0.00781250000, 0.00781250000, -0.00781250000)
sample r2.xyzw, r0.yzwy, t6.xyzw, s1
mov r1.z, r2.x
add r0.yzw, v7.xxyz, l(0.000000, 0.00781250000, -0.00781250000, -0.00781250000)
sample r2.xyzw, r0.yzwy, t6.xyzw, s1
mov r1.w, r2.x
lt r0.xyzw, r1.xyzw, r0.xxxx
movc r0.xyzw, r0.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
mul r0.yzw, v5.yyyy, cb0[9].xxyz
mad r0.yzw, cb0[8].xxyz, v5.xxxx, r0.yyzw
mad r0.yzw, cb0[10].xxyz, v5.zzzz, r0.yyzw
add r0.yzw, r0.yyzw, cb0[11].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
sample r2.xyzw, r0.yzwy, t5.xyzw, s2
sample r1.xyzw, r1.xxxx, t4.xyzw, s3
mul r0.y, r2.w, r1.x
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, cb0[6].xyzx
sample r1.xyzw, v1.xyxx, t0.xyzw, s4
mul r1.xyzw, r1.xyzw, cb0[14].xyzw
mul r2.xyzw, r1.xyzw, cb0[15].xyzw
mad r2.xyzw, r2.xyzw, cb0[18].yyyy, -r1.xyzw
sample r3.xyzw, v1.xyxx, t1.xyzw, s6
mad r1.xyzw, r3.xxxx, r2.xyzw, r1.xyzw
mul r2.xyzw, r1.xyzw, cb0[17].xyzw
mad r2.xyzw, r2.xyzw, cb0[18].yyyy, -r1.xyzw
mad r1.xyzw, r3.zzzz, r2.xyzw, r1.xyzw
mul r2.xyzw, r1.xyzw, cb0[16].xyzw
mad r2.xyzw, r2.xyzw, cb0[18].yyyy, -r1.xyzw
mad r1.xyzw, r3.yyyy, r2.xyzw, r1.xyzw
add r2.xy, r1.ywyy, r1.xwxx
mad r0.w, r1.z, l(0.333333343), r2.x
max r2.x, r2.y, cb0[13].x
min r2.x, r2.x, l(1.000000)
mul r2.x, r2.x, cb0[12].w
add r2.y, -r0.w, cb0[12].y
mad r0.w, cb0[12].x, r2.y, r0.w
max r1.w, r1.w, cb0[12].z
mad r0.w, -r0.w, r1.w, l(1.000000)
add r1.w, -r0.w, l(1.000000)
mad r1.w, r1.w, l(0.968000), l(0.030000)
log r1.w, r1.w
div r1.w, l(10.000000), r1.w
mad r2.y, r1.w, r1.w, l(2.000000)
mul r1.w, r1.w, r1.w
mul r2.y, r2.y, l(0.159154937)
sample r3.xyzw, v1.zwzz, t2.xyzw, s5
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.z, r3.xyxx, r3.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r3.z, r2.z
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r2.z, r4.xyzx, r4.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, r4.xyzx
add r5.xyz, -v5.xyzx, r9.xyzx
dp3 r2.z, r5.xyzx, r5.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, r5.xyzx
add r6.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r2.z, r6.xyzx, r6.xyzx
rsq r2.z, r2.z
mad r7.xyz, r6.xyzx, r2.zzzz, r5.xyzx
dp3 r2.w, r3.xyzx, r5.xyzx
mul r5.xyz, r2.zzzz, r6.xyzx
dp3 r2.z, r7.xyzx, r7.xyzx
max r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.001000, 0.000000)
rsq r2.z, r2.z
mul r6.xyz, r2.zzzz, r7.xyzx
dp3 r2.z, r3.xyzx, r6.xyzx
dp3 r3.x, r5.xyzx, r6.xyzx
dp3 r3.y, r4.xyzx, r5.xyzx
max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r2.z, r2.z, l(0.000000)
log r2.z, r2.z
mul r1.w, r1.w, r2.z
exp r1.w, r1.w
mul r1.w, r2.y, r1.w
mul r2.y, r0.w, r0.w
mul r2.z, r2.y, l(0.797884583)
mad r2.y, -r2.y, l(0.797884583), l(1.000000)
mad r3.z, r2.w, r2.y, r2.z
add r2.w, -r2.w, l(1.000000)
mad r2.y, r3.y, r2.y, r2.z
mad r2.y, r2.y, r3.z, l(0.000010)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mul r1.w, r1.w, r2.y
mul r1.w, r1.w, l(0.785398185)
max r2.y, r1.w, l(0.000100)
sqrt r2.y, r2.y
eq r2.z, cb0[3].w, l(0.000000)
movc r1.w, r2.z, r2.y, r1.w
mul r1.w, r3.y, r1.w
max r1.w, r1.w, l(0.000000)
add r4.xyz, r1.xyzx, -cb0[2].xyzx
mad r4.xyz, r2.xxxx, r4.xyzx, cb0[2].xyzx
mad r2.x, -r2.x, cb0[2].w, cb0[2].w
mul r1.xyz, r1.xyzx, r2.xxxx
dp3 r2.x, r4.xyzx, r4.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r1.w, r1.w, r2.x
mul r2.xyz, r0.xyzx, r1.wwww
add r1.w, -r3.x, l(1.000000)
mul r3.x, r3.x, r3.x
dp2 r0.w, r3.xxxx, r0.wwww
add r0.w, r0.w, l(-0.500000)
mul r3.x, r1.w, r1.w
mul r3.x, r3.x, r3.x
mul r1.w, r1.w, r3.x
add r3.xzw, -r4.xxyz, l(1.000000, 0.000000, 1.000000, 1.000000)
mad r3.xzw, r3.xxzw, r1.wwww, r4.xxyz
mul r2.xyz, r2.xyzx, r3.xzwx
mul r1.w, r2.w, r2.w
mul r1.w, r1.w, r1.w
mul r1.w, r2.w, r1.w
mad r1.w, r0.w, r1.w, l(1.000000)
add r2.w, -r3.y, l(1.000000)
mul r3.x, r2.w, r2.w
mul r3.x, r3.x, r3.x
mul r2.w, r2.w, r3.x
mad r0.w, r0.w, r2.w, l(1.000000)
mul r0.w, r1.w, r0.w
mul r0.w, r3.y, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used