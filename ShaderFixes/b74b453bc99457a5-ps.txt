// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b74b453bc99457a5-ps.txt
// 3DMigoto: b74b453bc99457a5 |    Unity headers extracted from Standard_CubemapReflection.shader
//    Shader "Dreamfall/Unity5/Standard_CubemapReflection" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectColor ("Reflect Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Fresnel ("Specular Fresnel Exponent", Range(0.010000,16.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _RefMul ("Reflection Boost", Float) = 1.000000
//       _AlbedoBlend ("0 = lighting modifies reflection", Range(0.000000,1.000000)) = 1.000000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 3/3 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          GpuProgramID 159559
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 383
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_CubemapReflection.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 172 7 0
//   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
//   undeciphered2: 1 5 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Fresnel]
//   Float 164 [_RefMul]
//   Float 168 [_AlbedoBlend]
//   Float 172 [_AlphaFactor]
//   Float 176 [_glossHigh]
//   Float 180 [_glossLow]
//   Float 184 [_MetalNess]
//   Float 188 [_MetalNessAlphaFactor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_Cube] CUBE 3
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:49:49 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b74b453bc99457a5-ps.txt
mov r15.xyzw, cb1[4].xyzw
mov r16.xyzw, l(0)
mul r16.x, -r14.x, r14.y
mul r18.xyzw, cb10[0].xyzw, r16.xxxx
mad r18.xyzw, cb10[1].xyzw, r16.yyyy, r18.xyzw
mad r18.xyzw, cb10[2].xyzw, r16.zzzz, r18.xyzw
mad r18.xyzw, cb10[3].xyzw, r16.wwww, r18.xyzw
mul r17.xyzw, cb11[12].xyzw, r18.xxxx
mad r17.xyzw, cb11[13].xyzw, r18.yyyy, r17.xyzw
mad r17.xyzw, cb11[14].xyzw, r18.zzzz, r17.xyzw
mad r17.xyzw, cb11[15].xyzw, r18.wwww, r17.xyzw
add r15.xyz, r15.xyz, -r17.xyz

mov o0.w, l(1.000000)
sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mul r1.xyzw, r0.xyzw, cb0[8].xyzw
add r2.xy, r1.wyww, r1.wxww
max r0.w, r2.x, cb0[11].w
mad r2.x, r0.z, cb0[8].z, r2.y
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[11].z
mad r2.y, -r0.w, cb0[2].w, cb0[2].w
mul r2.yzw, r1.xxyz, r2.yyyy
mov o0.xyz, r2.yzwy
mul r3.x, r2.x, l(0.333333343)
mad r2.x, -r2.x, l(0.333333343), cb0[11].x
mad r2.x, cb0[11].y, r2.x, r3.x
max r1.w, r1.w, cb0[10].w
mul r3.w, r1.w, r2.x
mad r4.xyz, r0.xyzx, cb0[8].xyzx, -cb0[2].xyzx
mad r0.xyz, -r0.xyzx, cb0[8].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, cb0[10].zzzz, r0.xyzx, r1.xyzx
mad r3.xyz, r0.wwww, r4.xyzx, cb0[2].xyzx
mov o1.xyzw, r3.xyzw
mov o2.w, l(1.000000)
sample r1.xyzw, v1.zwzz, t1.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
max r1.xyz, r1.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
min r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r4.x, v2.xyzx, r1.xyzx
dp3 r4.y, v3.xyzx, r1.xyzx
dp3 r4.z, v4.xyzx, r1.xyzx
mad o2.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
add r5.xyzw, -r3.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
add r1.w, -r5.x, l(1.000000)
mad r1.w, r1.w, l(0.968000), l(0.030000)
log r1.w, r1.w
div r1.w, l(10.000000), r1.w
mad r6.xy, r1.wwww, r1.wwww, l(2.000000, 1.000000, 0.000000, 0.000000)
mul r1.w, r1.w, r1.w
mul r2.x, r6.x, l(0.159154937)
sample r7.xyzw, v6.xyxx, t4.xyzw, s0
mad r6.xzw, r7.xxyz, l(2.000000, 0.000000, 2.000000, 2.000000), l(-1.000000, 0.000000, -1.000000, -1.000000)
dp3 r4.w, r6.xzwx, r6.xzwx
sqrt r4.w, r4.w
max r4.w, r4.w, l(0.001000)
div r6.xzw, r6.xxzw, r4.wwww
mov r7.x, v2.w
mov r7.y, v3.w
mov r7.z, v4.w
add r7.xyz, -r7.xyzx, r15.xyzx
dp3 r7.w, r7.xyzx, r7.xyzx
rsq r7.w, r7.w
mad r8.xyz, r7.xyzx, r7.wwww, r6.xzwx
dp3 r8.w, r8.xyzx, r8.xyzx
max r8.w, r8.w, l(0.001000)
rsq r8.w, r8.w
mul r8.xyz, r8.wwww, r8.xyzx
dp3 r8.w, r4.xyzx, r8.xyzx
dp3 r8.x, r6.xzwx, r8.xyzx
dp3 r6.x, r4.xyzx, r6.xzwx
max r6.x, r6.x, l(0.000000)
max r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r6.w, r6.w
mul r6.w, r1.w, r6.w
exp r6.w, r6.w
mul r2.x, r2.x, r6.w
mul r6.w, r5.x, r5.x
mul r8.x, r6.w, l(0.797884583)
mad r8.y, -r6.w, l(0.797884583), l(1.000000)
mul r9.xyz, r7.wwww, r7.xyzx
dp3 r8.z, r4.xyzx, r9.xyzx
max r8.z, r8.z, l(0.000000)
mad r8.w, r8.z, r8.y, r8.x
mad r8.x, r6.x, r8.y, r8.x
mad r8.x, r8.x, r8.w, l(0.000010)
div r8.x, l(1.000000, 1.000000, 1.000000, 1.000000), r8.x
mul r2.x, r2.x, r8.x
mul r2.x, r2.x, l(0.785398185)
add r8.x, -r8.z, l(1.000000)
max r8.y, r2.x, l(0.000100)
sqrt r8.y, r8.y
eq r8.z, cb0[3].w, l(0.000000)
movc r2.x, r8.z, r8.y, r2.x
mul r2.x, r6.x, r2.x
max r2.x, r2.x, l(0.000000)
mul r0.w, r0.w, r2.x
sample r10.xyzw, v6.xyxx, t3.xyzw, s0
log r2.x, r10.w
mul r2.x, r2.x, cb0[4].y
exp r2.x, r2.x
mul r2.x, r2.x, cb0[4].x
mul r10.xyz, r10.xyzx, r2.xxxx
mul r11.xyz, r4.wwww, r10.xyzx
add r2.x, -r4.w, l(1.000000)
mul r10.xyz, r2.xxxx, r10.xyzx
mul r12.xyz, r0.wwww, r11.xyzx
add r0.w, -r6.z, l(1.000000)
mul r2.x, r6.z, r6.z
dp2 r2.x, r2.xxxx, r5.xxxx
add r2.x, r2.x, l(-0.500000)
mul r4.w, r0.w, r0.w
mul r4.w, r4.w, r4.w
mul r0.w, r0.w, r4.w
mad r5.xyz, r5.yzwy, r0.wwww, r3.xyzx
mul r5.xyz, r5.xyzx, r12.xyzx
mul r0.w, r8.x, r8.x
mul r0.w, r0.w, r0.w
mul r0.w, r8.x, r0.w
mad r0.w, r2.x, r0.w, l(1.000000)
add r4.w, -r6.x, l(1.000000)
mul r5.w, r4.w, r4.w
mul r5.w, r5.w, r5.w
mul r4.w, r4.w, r5.w
mad r2.x, r2.x, r4.w, l(1.000000)
mul r0.w, r0.w, r2.x
mul r0.w, r6.x, r0.w
add r8.xy, v6.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r12.xyzw, r8.xyxx, t3.xyzw, s0
sample r13.xyzw, r8.xyxx, t4.xyzw, s0
mad r8.xyw, r13.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
log r2.x, r12.w
mul r2.x, r2.x, cb0[4].y
exp r2.x, r2.x
mul r2.x, r2.x, cb0[4].x
mul r12.xyz, r12.xyzx, r2.xxxx
dp3 r2.x, r8.xywx, r8.xywx
sqrt r2.x, r2.x
max r2.x, r2.x, l(0.001000)
add r4.w, -r2.x, l(1.000000)
mul r13.xyz, r4.wwww, r12.xyzx
mul r12.xyz, r2.xxxx, r12.xyzx
div r8.xyw, r8.xyxw, r2.xxxx
dp3 r2.x, r4.xyzx, r8.xywx
max r2.x, r2.x, l(0.000000)
mul r13.xyz, r2.xxxx, r13.xyzx
mad r10.xyz, r10.xyzx, r6.xxxx, r13.xyzx
mad r10.xyz, r11.xyzx, r0.wwww, r10.xyzx
mad r5.xyz, r2.yzwy, r10.xyzx, r5.xyzx
mad r7.xyz, r7.xyzx, r7.wwww, r8.xywx
dp3 r0.w, r7.xyzx, r7.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx
dp3 r0.w, r8.xywx, r7.xyzx
dp3 r4.w, r4.xyzx, r7.xyzx
max r4.w, r4.w, l(0.000000)
log r4.w, r4.w
mul r1.w, r1.w, r4.w
exp r1.w, r1.w
mul r1.w, r1.w, r6.y
max r0.w, r0.w, l(0.000000)
mul r4.w, r0.w, r0.w
mad r3.w, r4.w, r3.w, r6.w
mul r0.w, r0.w, r3.w
mad r0.w, r0.w, l(8.000000), l(0.000100)
div r0.w, r1.w, r0.w
max r1.w, r0.w, l(0.000100)
sqrt r1.w, r1.w
movc r0.w, r8.z, r1.w, r0.w
mad r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
mul r2.yzw, r12.xxyz, r2.yyzw
mad r2.xyz, r2.yzwy, r2.xxxx, r5.xyzx
dp3 r0.w, -r9.xyzx, r4.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r4.xyzx, -r0.wwww, -r9.xyzx
sample r3.xyzw, r3.xyzx, t2.xyzw, s3
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, v5.xyzx
dp3 r0.w, r4.xyzx, r1.xyzx
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
max r1.x, cb0[10].x, l(0.100000)
min r1.x, r1.x, l(32.000000)
mul r0.w, r0.w, r1.x
exp r0.w, r0.w
mul r1.xyz, r0.wwww, r3.xyzx
mul r1.xyz, r1.xyzx, cb0[9].xyzx
mul r1.xyz, r1.xyzx, cb0[10].yyyy
mad o3.xyz, r1.xyzx, r0.xyzx, r2.xyzx
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used