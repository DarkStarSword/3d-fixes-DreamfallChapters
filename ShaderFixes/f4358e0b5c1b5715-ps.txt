// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed f4358e0b5c1b5715-ps.txt
// 3DMigoto: f4358e0b5c1b5715 |    Unity headers extracted from ShadowSoftener-DeferredShading.shader
//    Shader "Hidden/ShadowSoftener-DeferredShading" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//       _SrcBlend ("", Float) = 1.000000
//       _DstBlend ("", Float) = 1.000000
//      }
//      Fallback "Hidden/Internal-DeferredShading"
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 28233
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 91
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ShadowSoftener-DeferredShading.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 91 5 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_HDR_ON" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 112 [_LightDir]
//   Vector 144 [_LightColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   SetTexture 2 [_CameraGBufferTexture0] 2D 2
//   SetTexture 3 [_CameraGBufferTexture1] 2D 3
//   SetTexture 4 [_CameraGBufferTexture2] 2D 4
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:02:11 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 11

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed f4358e0b5c1b5715-ps.txt

mul r6.w, -r6.x, r6.y
ne r8.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r8.x
  mul r6.w, r6.w, v2.w
  mad r7.xyz, -r6.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx

// copy depth from r2.z to r9.x:
mov r9.x, r2.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed f4358e0b5c1b5715-ps.txt

add r10.x, r9.x, -r6.y
mul r10.x, r6.x, r10.x
ne r6.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r6.w
  mad r2.x, -r10.x, v2.w, r2.x
endif

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

if_z r6.w
  mad r2.xyw, -r10.xxxx, cb10[0].xyxz, r2.xyzw
endif

add r3.xyz, r2.xywx, -r7.xyzx
add r2.xyw, r2.xyxw, -cb3[25].xyxz
dp3 r0.x, r2.xywx, r2.xywx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb3[25].w, r0.x, r2.z
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
dp3 r0.y, r3.xyzx, r3.xyzx
rsq r0.y, r0.y
mad r2.xyz, -r3.xyzx, r0.yyyy, -cb0[7].xyzx
mul r0.yzw, r0.yyyy, r3.xxyz
dp3 r1.z, r2.xyzx, r2.xyzx
max r1.z, r1.z, l(0.001000)
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
sample r3.xyzw, r1.xyxx, t4.xyzw, s4
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r1.z, r3.xyzx, r2.xyzx
dp3 r1.w, -cb0[7].xyzx, r2.xyzx
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.z, r1.z
sample r2.xyzw, r1.xyxx, t3.xyzw, s3
add r4.xyzw, -r2.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
add r2.w, -r4.x, l(1.000000)
mad r2.w, r2.w, l(0.968000), l(0.030000)
log r2.w, r2.w
div r2.w, l(10.000000), r2.w
mul r3.w, r2.w, r2.w
mad r2.w, r2.w, r2.w, l(2.000000)
mul r2.w, r2.w, l(0.159154937)
mul r1.z, r1.z, r3.w
exp r1.z, r1.z
mul r1.z, r2.w, r1.z
dp3 r0.y, r3.xyzx, -r0.yzwy
dp3 r0.z, r3.xyzx, -cb0[7].xyzx
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.w, r4.x, r4.x
mul r2.w, r0.w, l(0.797884583)
mad r0.w, -r0.w, l(0.797884583), l(1.000000)
mad r3.x, r0.y, r0.w, r2.w
add r0.y, -r0.y, l(1.000000)
mad r0.w, r0.z, r0.w, r2.w
mad r0.w, r0.w, r3.x, l(0.000010)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.w, r1.z, r0.w
mul r0.w, r0.w, l(0.785398185)
max r1.z, r0.w, l(0.000100)
sqrt r1.z, r1.z
eq r2.w, cb0[3].w, l(0.000000)
movc r0.w, r2.w, r1.z, r0.w
mul r0.w, r0.z, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r1.z, r2.xyzx, r2.xyzx
ne r1.z, r1.z, l(0.000000)
and r1.z, r1.z, l(0x3f800000)
mul r0.w, r0.w, r1.z
sample r3.xyzw, r1.xyxx, t1.xyzw, s1
sample r5.xyzw, r1.xyxx, t2.xyzw, s2
add_sat r0.x, r0.x, r3.x
mul r1.xyz, r0.xxxx, cb0[9].xyzx
mul r3.xyz, r0.wwww, r1.xyzx
add r0.x, -r1.w, l(1.000000)
mul r0.w, r1.w, r1.w
dp2 r0.w, r0.wwww, r4.xxxx
add r0.w, r0.w, l(-0.500000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.xyz, r4.yzwy, r0.xxxx, r2.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r0.x, r0.y, r0.y
mul r0.x, r0.x, r0.x
mul r0.x, r0.y, r0.x
mad r0.x, r0.w, r0.x, l(1.000000)
add r0.y, -r0.z, l(1.000000)
mul r1.w, r0.y, r0.y
mul r1.w, r1.w, r1.w
mul r0.y, r0.y, r1.w
mad r0.y, r0.w, r0.y, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r0.z, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mad o0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used