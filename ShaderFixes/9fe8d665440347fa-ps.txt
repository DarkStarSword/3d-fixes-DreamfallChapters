// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9fe8d665440347fa-ps.txt
// 3DMigoto: 9fe8d665440347fa |    Unity headers extracted from Standard_Moss.shader
//    Shader "Dreamfall/Unity5/Standard_Moss" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FresnelColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _ParallaxMap ("Height Map", 2D) = "white" { }
//       _Gloss ("Moss Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _Fresnel ("Reflection Fresnel Exponent", Float) = 2.000000
//       _Parallax ("Height", Range(-1.000000,1.000000)) = 0.000000
//       _MapTrength ("Parallax Map Strength", Range(-1.000000,1.000000)) = 1.000000
//       _Smudge ("Water Smudge", Range(-10.000000,10.000000)) = 1.000000
//       _ReflAmount ("Reflection amount", Float) = 0.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _distortScale ("Distort Scale", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 3/3 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          GpuProgramID 195493
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 145
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Moss.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 162 7 0
//   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
//   undeciphered2: 1 5 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Color]
//   Vector 144 [_FresnelColor]
//   Float 168 [_Fresnel]
//   Float 172 [_Gloss]
//   Float 176 [_Metallic]
//   Float 180 [_Parallax]
//   Float 184 [_MapTrength]
//   Float 188 [_Smudge]
//   Float 192 [_distortScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_ParallaxMap] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:38:37 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9fe8d665440347fa-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xy, v1.xyxx, cb0[12].xxxx
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
mul r0.x, r0.x, cb0[11].z
mul r0.x, r0.x, l(0.500000)
dp3 r0.y, v5.xyzx, v5.xyzx
rsq r0.y, r0.y
mad r0.z, v5.z, r0.y, l(0.420000)
mul r1.xyz, r0.yyyy, v5.xyzx
div r2.xyzw, r1.xyxy, r0.zzzz
mul r0.y, cb0[11].y, l(0.500000)
mul r3.xyzw, r2.xyzw, r0.yyyy
mad r0.xyzw, r0.xxxx, r2.zwzw, r3.xyzw
add r0.xyzw, r0.xyzw, v1.xyzw
sample r2.xyzw, r0.xyxx, t2.xyzw, s1
sample r0.xyzw, r0.zwzz, t1.xyzw, s3
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xyz, r2.xyzx, cb0[8].xyzx
mad r0.w, -cb0[11].x, cb0[2].w, cb0[2].w
mul r3.xyz, r0.wwww, r3.xyzx
mov o0.xyz, r3.xyzx
mov o0.w, l(1.000000)
add r0.w, r2.y, r2.x
mad r0.w, r2.z, l(0.333333343), r0.w
mad r4.w, r0.w, cb0[8].w, cb0[10].w
mad r5.xyz, r2.xyzx, cb0[8].xyzx, -cb0[2].xyzx
mad r4.xyz, cb0[11].xxxx, r5.xyzx, cb0[2].xyzx
mov o1.xyzw, r4.xyzw
mov o2.w, l(1.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
dp3 r5.x, v2.xyzx, r0.xyzx
dp3 r5.y, v3.xyzx, r0.xyzx
dp3 r5.z, v4.xyzx, r0.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[10].z
exp r0.x, r0.x
mul r0.x, r0.x, cb0[11].w
mul r0.xyz, r0.xxxx, r2.xyzx
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
dp3 r0.w, r4.xyzx, r4.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
add r1.xyzw, -r4.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r2.x, r1.x, r1.x
mul r2.y, r2.x, l(0.797884583)
mad r2.z, -r2.x, l(0.797884583), l(1.000000)
mov r6.x, v2.w
mov r6.y, v3.w
mov r6.z, v4.w
add r6.xyz, -r6.xyzx, r14.xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r7.xyz, r2.wwww, r6.xyzx
dp3 r3.w, r5.xyzx, r7.xyzx
max r3.w, r3.w, l(0.000000)
mad r5.w, r3.w, r2.z, r2.y
add r3.w, -r3.w, l(1.000000)
sample r7.xyzw, v6.xyxx, t4.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r6.w, r7.xyzx, r7.xyzx
sqrt r6.w, r6.w
max r6.w, r6.w, l(0.001000)
div r7.xyz, r7.xyzx, r6.wwww
dp3 r7.w, r5.xyzx, r7.xyzx
max r7.w, r7.w, l(0.000000)
mad r2.y, r7.w, r2.z, r2.y
mad r2.y, r2.y, r5.w, l(0.000010)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mad r8.xyz, r6.xyzx, r2.wwww, r7.xyzx
dp3 r2.z, r8.xyzx, r8.xyzx
max r2.z, r2.z, l(0.001000)
rsq r2.z, r2.z
mul r8.xyz, r2.zzzz, r8.xyzx
dp3 r2.z, r5.xyzx, r8.xyzx
dp3 r5.w, r7.xyzx, r8.xyzx
max r5.w, r5.w, l(0.000000)
max r2.z, r2.z, l(0.000000)
log r2.z, r2.z
add r7.x, -r1.x, l(1.000000)
mad r7.x, r7.x, l(0.968000), l(0.030000)
log r7.x, r7.x
div r7.x, l(10.000000), r7.x
mul r7.y, r7.x, r7.x
mad r7.xz, r7.xxxx, r7.xxxx, l(2.000000, 0.000000, 1.000000, 0.000000)
mul r2.z, r2.z, r7.y
exp r2.z, r2.z
mul r7.x, r7.x, l(0.159154937)
mul r2.z, r2.z, r7.x
mul r2.y, r2.z, r2.y
mul r2.y, r2.y, l(0.785398185)
max r2.z, r2.y, l(0.000100)
sqrt r2.z, r2.z
eq r7.x, cb0[3].w, l(0.000000)
movc r2.y, r7.x, r2.z, r2.y
mul r2.y, r7.w, r2.y
max r2.y, r2.y, l(0.000000)
mul r0.w, r0.w, r2.y
sample r8.xyzw, v6.xyxx, t3.xyzw, s0
log r2.y, r8.w
mul r2.y, r2.y, cb0[4].y
exp r2.y, r2.y
mul r2.y, r2.y, cb0[4].x
mul r8.xyz, r8.xyzx, r2.yyyy
mul r9.xyz, r6.wwww, r8.xyzx
add r2.y, -r6.w, l(1.000000)
mul r8.xyz, r2.yyyy, r8.xyzx
mul r10.xyz, r0.wwww, r9.xyzx
add r0.w, -r5.w, l(1.000000)
mul r2.y, r5.w, r5.w
dp2 r1.x, r2.yyyy, r1.xxxx
add r1.x, r1.x, l(-0.500000)
mul r2.y, r0.w, r0.w
mul r2.y, r2.y, r2.y
mul r0.w, r0.w, r2.y
mad r1.yzw, r1.yyzw, r0.wwww, r4.xxyz
mul r1.yzw, r1.yyzw, r10.xxyz
mul r0.w, r3.w, r3.w
mul r0.w, r0.w, r0.w
mul r0.w, r3.w, r0.w
mad r0.w, r1.x, r0.w, l(1.000000)
add r2.y, -r7.w, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r7.w, r0.w
add r2.yz, v6.xxyx, l(0.000000, 0.500000, 0.000000, 0.000000)
sample r10.xyzw, r2.yzyy, t4.xyzw, s0
sample r11.xyzw, r2.yzyy, t3.xyzw, s0
mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r10.xyzx, r10.xyzx
sqrt r1.x, r1.x
max r1.x, r1.x, l(0.001000)
div r10.xyz, r10.xyzx, r1.xxxx
dp3 r2.y, r5.xyzx, r10.xyzx
max r2.y, r2.y, l(0.000000)
log r2.z, r11.w
mul r2.z, r2.z, cb0[4].y
exp r2.z, r2.z
mul r2.z, r2.z, cb0[4].x
mul r11.xyz, r11.xyzx, r2.zzzz
add r2.z, -r1.x, l(1.000000)
mul r12.xyz, r1.xxxx, r11.xyzx
mul r11.xyz, r2.zzzz, r11.xyzx
mul r11.xyz, r2.yyyy, r11.xyzx
mad r8.xyz, r8.xyzx, r7.wwww, r11.xyzx
mad r8.xyz, r9.xyzx, r0.wwww, r8.xyzx
mad r1.xyz, r3.xyzx, r8.xyzx, r1.yzwy
mad r6.xyz, r6.xyzx, r2.wwww, r10.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
dp3 r0.w, r10.xyzx, r6.xyzx
dp3 r1.w, r5.xyzx, r6.xyzx
max r1.w, r1.w, l(0.000000)
log r1.w, r1.w
mul r1.w, r1.w, r7.y
exp r1.w, r1.w
mul r1.w, r1.w, r7.z
max r0.w, r0.w, l(0.000000)
mul r2.z, r0.w, r0.w
mad r2.x, r2.z, r4.w, r2.x
mul r0.w, r0.w, r2.x
mad r0.w, r0.w, l(8.000000), l(0.000100)
div r0.w, r1.w, r0.w
max r1.w, r0.w, l(0.000100)
sqrt r1.w, r1.w
movc r0.w, r7.x, r1.w, r0.w
mad r2.xzw, r0.wwww, r4.xxyz, r3.xxyz
mul r2.xzw, r12.xxyz, r2.xxzw
mad r1.xyz, r2.xzwx, r2.yyyy, r1.xyzx
mad o3.xyz, r0.xyzx, cb0[9].xyzx, r1.xyzx
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used