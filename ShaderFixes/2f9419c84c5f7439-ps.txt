// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2f9419c84c5f7439-ps.txt
// 3DMigoto: 2f9419c84c5f7439 |    Unity headers extracted from Standard_BarutiJacket.shader
//    Shader "Dreamfall/Unity5/Standard_BarutiJacket" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectMap ("Reflection Map (RBG)", 2D) = "white" { }
//       _Fresnel ("Specular Fresnel Exponent", Range(0.010000,16.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _RefMul ("Reflection Boost", Float) = 1.000000
//       _AlbedoBlend ("0 = lighting modifies reflection", Range(0.000000,1.000000)) = 1.000000
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//      }
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 3/3 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          GpuProgramID 139403
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 289
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BarutiJacket.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 77 7 2
//   Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 128 [_Color]
//   Float 144 [_Fresnel]
//   Float 148 [_RefMul]
//   Float 156 [_AlphaFactor]
//   Float 160 [_glossHigh]
//   Float 164 [_glossLow]
//   Float 168 [_MetalNess]
//   Float 172 [_MetalNessAlphaFactor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_Cube] CUBE 3
//   SetTexture 3 [_ReflectMap] 2D 4
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:06:31 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2f9419c84c5f7439-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v3.w
mov r0.z, v4.w
mov r0.w, v5.w
add r1.xyz, -r0.yzwy, r9.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, v6.xyzx
max r0.x, cb0[9].x, l(0.100000)
min r0.x, r0.x, l(32.000000)
sample r3.xyzw, v1.xyxx, t0.xyzw, s1
mul r4.xyzw, r3.xyzw, cb0[8].xyzw
sample r5.xyzw, v1.zwzz, t1.xyzw, s2
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r6.xy, r4.wyww, r4.wxww
max r1.w, r6.x, cb0[10].w
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, cb0[10].z
mad r2.w, r3.z, cb0[8].z, r6.y
mul r3.w, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[10].x
mad r2.w, cb0[10].y, r2.w, r3.w
max r3.w, r4.w, cb0[9].w
mul o1.w, r2.w, r3.w
dp3 r6.x, v3.xyzx, r5.xyzx
dp3 r6.y, v4.xyzx, r5.xyzx
dp3 r6.z, v5.xyzx, r5.xyzx
dp3 r2.w, -r1.xyzx, r6.xyzx
add r2.w, r2.w, r2.w
mad r1.xyz, r6.xyzx, -r2.wwww, -r1.xyzx
sample r7.xyzw, r1.xyzx, t2.xyzw, s3
max r1.xyz, r7.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000)
sample r7.xyzw, v2.xyxx, t3.xyzw, s4
max r7.xyz, r7.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000)
dp3 r2.x, r2.xyzx, r5.xyzx
add r2.x, -r2.x, l(1.000000)
log r2.x, r2.x
mul r0.x, r0.x, r2.x
exp r0.x, r0.x
max r0.x, r0.x, l(0.000100)
mul r1.xyz, r0.xxxx, r1.xyzx
mul r1.xyz, r7.xyzx, r1.xyzx
eq r0.x, cb3[0].x, l(1.000000)
if_nz r0.x
  eq r0.x, cb3[0].y, l(1.000000)
  mul r2.xyz, v4.wwww, cb3[2].xyzx
  mad r2.xyz, cb3[1].xyzx, v3.wwww, r2.xyzx
  mad r2.xyz, cb3[3].xyzx, v5.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, cb3[4].xyzx
  movc r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
  add r0.xyz, r0.xyzx, -cb3[6].xyzx
  mul r0.yzw, r0.xxyz, cb3[5].xxyz
  mul r0.y, r0.y, l(0.250000)
  mul r2.x, cb3[0].z, l(0.500000)
  mad r2.y, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r2.x
  min r0.x, r2.y, r0.y
  sample r2.xyzw, r0.xzwx, t4.xyzw, s0
  add r5.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t4.xyzw, s0
  add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r0.xyzw, r0.xyzx, t4.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r2.x, r2.xyzw, r6.xyzw
  dp4 r2.y, r5.xyzw, r6.xyzw
  dp4 r2.z, r0.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r2.x, cb2[38].xyzw, r6.xyzw
  dp4 r2.y, cb2[39].xyzw, r6.xyzw
  dp4 r2.z, cb2[40].xyzw, r6.xyzw
endif 
add r0.xyz, r2.xyzx, v8.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r0.w, cb0[3].w, l(0.000000)
log r2.xyz, r0.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
mad r2.xyz, r3.xyzx, cb0[8].xyzx, -cb0[2].xyzx
mad o1.xyz, r1.wwww, r2.xyzx, cb0[2].xyzx
mad r0.w, -r1.w, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r4.xyzx
mul r0.xyz, r0.xyzx, r2.xyzx
mad o2.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r1.xyzx, cb0[9].yyyy, r0.xyzx
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used