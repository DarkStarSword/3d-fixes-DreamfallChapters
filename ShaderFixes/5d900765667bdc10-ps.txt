// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5d900765667bdc10-ps.txt
// 3DMigoto: 5d900765667bdc10 |    Unity headers extracted from Standard_DirectionBlend.shader
//    Shader "Dreamfall/Unity5/Standard_DirectionBlend" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _BlendColor ("Blend Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//       _BlendTile ("Blend Map Tile Factor", Float) = 1.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _Boost ("Fresnel Boost", Float) = 1.000000
//       _Direction ("Direction", Vector) = (0.000000,1.000000,0.000000,1.000000)
//       _Adjust ("Fresnel Adjust", Range(-1.000000,1.000000)) = 0.000000
//       _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//       _2ndAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//       _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//       _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//       _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//       _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Specular"
//      SubShader 1/3 {
//        LOD 1500
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 64821
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 88
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_DirectionBlend.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 218 11 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 11 6 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Vector 144 [_BlendColor]
//   Vector 160 [_Direction]
//   Float 176 [_Adjust]
//   Float 180 [_Boost]
//   Float 184 [_BlendTile]
//   Float 188 [_MainAlphaFactor]
//   Float 192 [_2ndAlphaFactor]
//   Float 196 [_MainGloss]
//   Float 200 [_2ndGloss]
//   Float 204 [_MainMetallness]
//   Float 208 [_2ndMetallness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_BlendTex] 2D 6
//   SetTexture 2 [_Detail] 2D 7
//   SetTexture 3 [_BumpMap] 2D 5
//   SetTexture 4 [_DetailBump] 2D 8
//   SetTexture 5 [_BlendBump] 2D 9
//   SetTexture 6 [_DitherMaskLOD2D] 2D 2
//   SetTexture 7 [_ShadowMapTexture] 2D 3
//   SetTexture 8 [unity_SpecCube0] CUBE 0
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:18:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5d900765667bdc10-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s4
mul r4.xy, v1.xyxx, cb0[11].zzzz
sample r5.xyzw, r4.xyxx, t1.xyzw, s6
sample r6.xyzw, v1.zwzz, t2.xyzw, s7
mul r6.xyz, r6.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000)
min r6.xyz, r6.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000)
add r6.xyz, r6.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
mul r3.xyz, r3.xyzx, r6.xyzx
sample r6.xyzw, v1.xyxx, t3.xyzw, s5
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
sample r7.xyzw, v1.zwzz, t4.xyzw, s8
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
add r6.xyz, r6.xyzx, r7.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r6.xyzx
dp3 r8.x, v2.xyzx, r7.xyzx
dp3 r8.y, v3.xyzx, r7.xyzx
dp3 r8.z, v4.xyzx, r7.xyzx
add r8.xyz, r8.xyzx, -cb0[11].xxxx
dp3_sat r2.w, r8.xyzx, cb0[10].xyzx
mul_sat r2.w, r2.w, cb0[11].y
mul r8.xyz, r3.xyzx, cb0[8].xyzx
mad r9.xyz, r5.xyzx, cb0[9].xyzx, -r8.xyzx
mad r8.xyz, r2.wwww, r9.xyzx, r8.xyzx
sample r4.xyzw, r4.xyxx, t5.xyzw, s9
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r4.xyxx, r4.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r4.z, r3.w
mad r4.xyz, -r6.xyzx, r1.wwww, r4.xyzx
mad r4.xyz, r2.wwww, r4.xyzx, r7.xyzx
add r1.w, r3.y, r3.x
mad r1.w, r3.z, l(0.333333343), r1.w
max r1.w, r1.w, cb0[11].w
mul r1.w, r1.w, cb0[12].y
add r3.x, r5.y, r5.x
mad r3.x, r5.z, l(0.333333343), r3.x
max r3.x, r3.x, cb0[12].x
mad r3.x, cb0[12].z, r3.x, -r1.w
mad r1.w, r2.w, r3.x, r1.w
add r3.x, -cb0[12].w, cb0[13].x
mad r2.w, r2.w, r3.x, cb0[12].w
div r3.xy, v5.xyxx, v5.zzzz
frc r3.y, r3.y
mad r3.z, r3.y, l(0.062500), cb3[20].y
sample r3.xyzw, r3.xzxx, t6.xyzw, s2
add r3.x, r3.w, l(-0.500000)
lt r3.x, r3.x, l(0.000000)
discard_nz r3.x
div r3.xy, v7.xyxx, v7.wwww
sample r3.xyzw, r3.xyxx, t7.xyzw, s3
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r3.y, r5.xyzx, cb2[0].xyzx
max r3.y, r3.y, l(0.000000)
add r3.z, -r1.w, l(1.000000)
dp3 r3.w, -r2.xyzx, r5.xyzx
add r3.w, r3.w, r3.w
mad r4.xyz, r5.xyzx, -r3.wwww, -r2.xyzx
mul r6.xyz, r3.xxxx, cb0[6].xyzx
eq r3.x, cb5[0].x, l(1.000000)
if_nz r3.x
  eq r3.x, cb5[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb5[2].xyzx
  mad r7.xyz, cb5[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb5[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb5[4].xyzx
  movc r7.xyz, r3.xxxx, r7.xyzx, r0.xyzx
  add r7.xyz, r7.xyzx, -cb5[6].xyzx
  mul r7.yzw, r7.xxyz, cb5[5].xxyz
  mul r3.x, r7.y, l(0.250000)
  mul r3.w, cb5[0].z, l(0.500000)
  mad r4.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r3.x, r3.w, r3.x
  min r7.x, r4.w, r3.x
  sample r9.xyzw, r7.xzwx, t10.xyzw, s1
  add r10.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t10.xyzw, s1
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t10.xyzw, s1
  mov r5.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r5.xyzw
  dp4 r9.y, r10.xyzw, r5.xyzw
  dp4 r9.z, r7.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r9.x, cb2[38].xyzw, r5.xyzw
  dp4 r9.y, cb2[39].xyzw, r5.xyzw
  dp4 r9.z, cb2[40].xyzw, r5.xyzw
endif 
add r7.xyz, r9.xyzx, v6.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r3.x, cb0[3].w, l(0.000000)
log r9.xyz, r7.xyzx
mul r9.xyz, r9.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r9.xyz, r9.xyzx
mad r9.xyz, r9.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r7.xyz, r3.xxxx, r9.xyzx, r7.xyzx
lt r3.w, l(0.000000), cb4[2].w
if_nz r3.w
  dp3 r3.w, r4.xyzx, r4.xyzx
  rsq r3.w, r3.w
  mul r9.xyz, r3.wwww, r4.xyzx
  add r10.xyz, -r0.xyzx, cb4[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb4[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r3.w, r10.y, r10.x
  min r3.w, r10.z, r3.w
  add r10.xyz, r0.xyzx, -cb4[2].xyzx
  mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
else 
  mov r9.xyz, r4.xyzx
endif 
log r3.w, r3.z
mul r3.w, r3.w, l(0.750000)
exp r3.w, r3.w
mad r4.w, -r3.w, l(0.700000), l(1.700000)
mul r3.w, r3.w, r4.w
mul r3.w, r3.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t8.xyzw, s0, r3.w
log r4.w, r9.w
mul r4.w, r4.w, cb4[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb4[3].x
mul r10.xyz, r9.xyzx, r4.wwww
lt r5.w, cb4[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb4[6].w
  if_nz r5.w
    dp3 r5.w, r4.xyzx, r4.xyzx
    rsq r5.w, r5.w
    mul r11.xyz, r4.xyzx, r5.wwww
    add r12.xyz, -r0.xyzx, cb4[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb4[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r5.w, r12.y, r12.x
    min r5.w, r12.z, r5.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r4.xyz, r11.xyzx, r5.wwww, r0.xyzx
  endif 
  sample_l r11.xyzw, r4.xyzx, t9.xyzw, s0, r3.w
  log r0.x, r11.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r11.xyzx, r0.xxxx
  mad r4.xyz, r4.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb4[1].wwww, r4.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
add r4.xyz, r8.xyzx, -cb0[2].xyzx
mad r4.xyz, r2.wwww, r4.xyzx, cb0[2].xyzx
mad r2.w, -r2.w, cb0[2].w, cb0[2].w
mul r5.xyz, r2.wwww, r8.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r3.z, r3.z
mul r1.x, r0.z, l(0.797884583)
mad r1.y, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r3.y, r1.y, r1.x
mad r1.x, r0.x, r1.y, r1.x
mad r1.x, r1.z, r1.x, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r3.z, l(1.000000)
mad r1.y, r1.y, l(0.968000), l(0.030000)
log r1.y, r1.y
div r1.y, l(10.000000), r1.y
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.y, l(2.000000)
mul r1.y, r1.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
mul r0.w, r1.y, r0.w
add r1.y, -r3.y, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r3.zzzz
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r3.x, r1.x, r0.w
mul r0.w, r3.y, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r3.y, r1.y
mul r1.y, r0.z, r3.z
mad r1.y, -r1.y, l(0.280000), l(1.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
movc r0.z, r3.x, r1.y, r0.z
dp3 r1.y, r4.xyzx, r4.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
add r1.y, r1.w, -r2.w
add_sat r1.y, r1.y, l(1.000000)
mad r1.xzw, r6.xxyz, r1.xxxx, r7.xxyz
mul r2.xyz, r6.xyzx, r0.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.yyyy, r4.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mad r1.xzw, r5.xxyz, r1.xxzw, r2.xxyz
mul r0.yzw, r10.xxyz, r0.zzzz
add r2.xyz, -r4.xyzx, r1.yyyy
mad r2.xyz, r0.xxxx, r2.xyzx, r4.xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used