// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c5afab028e729726-vs.txt
// 3DMigoto: c5afab028e729726 |    Unity headers extracted from SpeedTree.shader
//    Shader "Nature/SpeedTree" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _DetailTex ("Detail", 2D) = "black" { }
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//      [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//      [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      CustomEditor "SpeedTreeMaterialInspector"
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//        Pass 7/7 {
//          Tags { "LIGHTMODE"="Vertex" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//          Cull [_Cull]
//          GpuProgramID 881350
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 10807
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 32 0 1
//   Keywords { "FOG_EXP2" "GEOM_TYPE_BRANCH" }
//   undeciphered2: 1 0 5 0 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 112
//   Vector 96 [_Color]
//   ConstBuffer "UnityLighting" 720
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:53:33 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             6         2  ( FLT, FLT, FLT, FLT)
// c4         cb1            14         2  ( FLT, FLT, FLT, FLT)
// c6         cb1            22         2  ( FLT, FLT, FLT, FLT)
// c8         cb2             0        11  ( FLT, FLT, FLT, FLT)
// c19        cb3             0         1  ( FLT, FLT, FLT, FLT)
// c20        cb4             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c21, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mul r0.xyz, v0.y, c13
    mad r0.xyz, c12, v0.x, r0
    mad r0.xyz, c14, v0.z, r0
    add r0.xyz, r0, c15
    mad r1.xyz, r0, -c4.w, c4
    mad r0.xyz, r0, -c5.w, c5
    dp3 r0.w, r1, r1
    rsq r1.w, r0.w
    mov r2.x, c21.x
    mad r0.w, r0.w, c6.z, r2.x
    rcp r0.w, r0.w
    mul r1.xyz, r1.w, r1
    mul r2.yzw, v2.y, c17.xxyz
    mad r2.yzw, c16.xxyz, v2.x, r2
    mad r2.yzw, c18.xxyz, v2.z, r2
    nrm r3.xyz, r2.yzww
    dp3 r1.x, r3, r1
    max r1.x, r1.x, c21.y
    mul r0.w, r0.w, r1.x
    add r1.xyz, c19, c19
    mad r1.xyz, c2, r0.w, r1
    dp3 r0.w, r0, r0
    rsq r1.w, r0.w
    mad r0.w, r0.w, c7.z, r2.x
    rcp r0.w, r0.w
    mul r0.xyz, r0, r1.w
    dp3 r0.x, r3, r0
    max r0.x, r0.x, c21.y
    mul r0.x, r0.w, r0.x
    mad r0.xyz, c3, r0.x, r1
    mul r1.xyz, v7.x, c1
    mul oT1.xyz, r0, r1
    mul r0, v0.y, c9
    mad r0, c8, v0.x, r0
    mad r0, c10, v0.z, r0
    add r0, r0, c11
    mul r1.x, r0.z, c20.x
    mul r1.x, r1.x, -r1.x
    exp oT0.x, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mul oT0.yzw, v3.xyyx, c21.xyxx
    mov oT1.w, c1.w

// approximately 45 instruction slots used
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[25], dynamicIndexed
dcl_constantbuffer cb2[11], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.x
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v7.xxxx, cb0[6].xyzx
mul r1.xyz, v0.yyyy, cb2[5].xyzx
mad r1.xyz, cb2[4].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb2[6].xyzx, v0.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[7].xyzx
mul r2.xyz, v2.yyyy, cb2[9].xyzx
mad r2.xyz, cb2[8].xyzx, v2.xxxx, r2.xyzx
mad r2.xyz, cb2[10].xyzx, v2.zzzz, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r4.xyz, r3.xyzx
mov r0.w, l(0)
loop 
  ige r1.w, r0.w, l(2)
  breakc_nz r1.w
  mad r5.xyz, -r1.xyzx, cb1[r0.w + 14].wwww, cb1[r0.w + 14].xyzx
  dp3 r1.w, r5.xyzx, r5.xyzx
  rsq r2.w, r1.w
  mul r5.xyz, r2.wwww, r5.xyzx
  mad r1.w, r1.w, cb1[r0.w + 22].z, l(1.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  dp3 r2.w, r2.xyzx, r5.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r1.w, r1.w, r2.w
  mad r4.xyz, cb1[r0.w + 6].xyzx, r1.wwww, r4.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mul o2.xyz, r0.xyzx, r4.xyzx
mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c5afab028e729726-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mul r1.x, r0.z, cb4[1].x
mul r1.x, r1.x, -r1.x
exp o1.x, r1.x

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o1.yz, v3.xxyx
mov o1.w, l(0)
mov o2.w, cb0[6].w
ret 
// Approximately 0 instruction slots used