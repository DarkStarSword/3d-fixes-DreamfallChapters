// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f63b3f1076c86302-ps.txt
// 3DMigoto: f63b3f1076c86302 |    Unity headers extracted from Additive-FresnelDistort.shader
//    Shader "Dreamfall/FX/Fresnel Additive Distort Parallax" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _Parallax ("Height", Range(0.005000,0.200000)) = 0.020000
//       _FresnelExp ("Fresnel Exp", Float) = 3.500000
//       _FresnelCol ("Fresnel Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FresnelAmt ("Fresnel Amount", Float) = 1.000000
//       _ParallaxMap ("Heightmap (A)", 2D) = "grey" { }
//       _DistortMap ("DistortMap", 2D) = "black" { }
//       _DistortAmt ("Distort Amount", Float) = 0.000000
//       _DistortSpeed ("Distort Speed", Float) = 0.000000
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 23364
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 95
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Additive-FresnelDistort.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 78 8 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 6 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Vector 144 [_FresnelCol]
//   Float 164 [_FresnelExp]
//   Float 168 [_FresnelAmt]
//   Float 172 [_DistortAmt]
//   Float 176 [_DistortSpeed]
//   Float 180 [_Parallax]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   SetTexture 0 [_ParallaxMap] 2D 3
//   SetTexture 1 [_DistortMap] 2D 4
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_ShadowMapTexture] 2D 1
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 07:05:59 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f63b3f1076c86302-ps.txt
mov r11.xyzw, cb1[4].xyzw
mov r12.xyzw, l(0)
mul r12.x, -r10.x, r10.y
mul r14.xyzw, cb10[0].xyzw, r12.xxxx
mad r14.xyzw, cb10[1].xyzw, r12.yyyy, r14.xyzw
mad r14.xyzw, cb10[2].xyzw, r12.zzzz, r14.xyzw
mad r14.xyzw, cb10[3].xyzw, r12.wwww, r14.xyzw
mul r13.xyzw, cb11[12].xyzw, r14.xxxx
mad r13.xyzw, cb11[13].xyzw, r14.yyyy, r13.xyzw
mad r13.xyzw, cb11[14].xyzw, r14.zzzz, r13.xyzw
mad r13.xyzw, cb11[15].xyzw, r14.wwww, r13.xyzw
add r11.xyz, r11.xyz, -r13.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s3
mul r0.x, cb0[11].y, l(0.500000)
mad r0.x, r0.w, cb0[11].y, -r0.x
add r0.yzw, -v3.xxyz, r11.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mad r1.y, r0.w, r1.x, l(0.420000)
mul r0.yzw, r0.yyzw, r1.xxxx
div r1.xy, r0.yzyy, r1.yyyy
dp3 r0.y, v2.xyzx, r0.yzwy
log r0.y, r0.y
mul r0.y, r0.y, cb0[10].y
exp r0.y, r0.y
mul_sat r0.y, r0.y, cb0[10].z
mul r0.yzw, r0.yyyy, cb0[9].xxyz
mad r1.xy, r0.xxxx, r1.xyxx, v1.xyxx
mad r1.z, cb1[0].x, cb0[11].x, r1.y
sample r2.xyzw, r1.xzxx, t1.xyzw, s4
mad r1.xy, r2.xyxx, cb0[10].wwww, r1.xyxx
sample r1.xyzw, r1.xyxx, t2.xyzw, s2
mul r2.xyz, r1.xyzx, cb0[8].xyzx
add r3.xy, v4.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r4.xyzw, r3.xyxx, t4.xyzw, s0
sample r3.xyzw, r3.xyxx, t5.xyzw, s0
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
log r0.x, r4.w
mul r0.x, r0.x, cb0[4].y
exp r0.x, r0.x
mul r0.x, r0.x, cb0[4].x
mul r4.xyz, r4.xyzx, r0.xxxx
dp3_sat r0.x, v2.xyzx, cb2[0].xyzx
div r5.xy, v5.xyxx, v5.wwww
sample r5.xyzw, r5.xyxx, t3.xyzw, s1
add r1.w, -r5.x, l(1.000000)
mul r0.x, r0.x, r1.w
mul r5.yzw, r0.xxxx, cb0[6].xxyz
dp3 r1.w, r3.xyzx, r3.xyzx
sqrt r1.w, r1.w
max r1.w, r1.w, l(0.001000)
mad r6.xyz, r4.xyzx, r1.wwww, -r5.yzwy
sample r7.xyzw, v4.xyxx, t4.xyzw, s0
mul r8.xyz, r5.xxxx, r7.xyzx
max r6.xyz, r6.xyzx, r8.xyzx
mad r9.xyz, r4.xyzx, r1.wwww, -r6.xyzx
mad r6.xyz, cb3[24].xxxx, r9.xyzx, r6.xyzx
mul r9.xyz, r1.wwww, r4.xyzx
min r6.xyz, r6.xyzx, r9.xyzx
mul r6.xyz, r2.xyzx, r6.xyzx
div r3.xyz, r3.xyzx, r1.wwww
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, v2.xyzx, r3.xyzx
max r1.w, r1.w, l(0.000000)
mul r3.xyz, r1.wwww, r6.xyzx
mul r4.xyz, r1.wwww, r4.xyzx
log r1.w, r7.w
mul r1.w, r1.w, cb0[4].y
exp r1.w, r1.w
mul r1.w, r1.w, cb0[4].x
mul r6.xyz, r7.xyzx, r1.wwww
sample r7.xyzw, v4.xyxx, t5.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r7.xyzx, r7.xyzx
sqrt r1.w, r1.w
max r1.w, r1.w, l(0.001000)
mad r5.xyz, r6.xyzx, r1.wwww, -r5.yzwy
max r5.xyz, r5.xyzx, r8.xyzx
mad r9.xyz, r6.xyzx, r1.wwww, -r5.xyzx
mad r5.xyz, cb3[24].xxxx, r9.xyzx, r5.xyzx
mul r9.xyz, r1.wwww, r6.xyzx
min r5.xyz, r5.xyzx, r9.xyzx
mul r5.xyz, r2.xyzx, r5.xyzx
div r7.xyz, r7.xyzx, r1.wwww
add r1.w, -r1.w, l(1.000000)
mul r6.xyz, r1.wwww, r6.xyzx
dp3 r1.w, v2.xyzx, r7.xyzx
max r1.w, r1.w, l(0.000000)
mad r3.xyz, r5.xyzx, r1.wwww, r3.xyzx
mad r4.xyz, r6.xyzx, r1.wwww, r4.xyzx
mad r5.xyz, -r0.xxxx, cb0[6].xyzx, r4.xyzx
max r5.xyz, r5.xyzx, r8.xyzx
add r6.xyz, r4.xyzx, -r5.xyzx
mad r5.xyz, cb3[24].xxxx, r6.xyzx, r5.xyzx
min r4.xyz, r4.xyzx, r5.xyzx
mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
mad o0.xyz, r1.xyzx, r0.yzwy, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used