// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed fcfed3b0969cb5e3-vs.txt
// 3DMigoto: fcfed3b0969cb5e3 | Matched 2 variants of 2 shaders: Hidden/Nature/Tree Creator Bark Optimized, Nature/Tree Creator Bark
//
// 1:    Unity headers extracted from TreeCreatorBark.shader
// 2:    Unity headers extracted from TreeCreatorBarkOptimized.shader
// 2:    Shader "Hidden/Nature/Tree Creator Bark Optimized" {
// 1:    Shader "Nature/Tree Creator Bark" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 1:       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//          _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
// 1:       _BumpMap ("Normalmap", 2D) = "bump" { }
// 2:       _BumpSpecMap ("Normalmap (GA) Spec (R)", 2D) = "bump" { }
// 1:       _GlossMap ("Gloss (A)", 2D) = "black" { }
// 2:       _TranslucencyMap ("Trans (RGB) Gloss(A)", 2D) = "white" { }
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//         [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//         }
// 2:      Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Bark Rendertex"
// 1:      Dependency "OptimizedShader" = "Hidden/Nature/Tree Creator Bark Optimized"
// 1:      Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeBark" }
//           Pass 1/6 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TreeBark" }
// 2:          GpuProgramID 10131
// 1:          GpuProgramID 58972
//             Program "vp" {
//               SubProgram "d3d11_9x " {
//                 GpuProgramIndex 29
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from TreeCreatorBark.shader.decompressed:
// 2: Unity 5.3 headers extracted from TreeCreatorBarkOptimized.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 91 0 0
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 159 6 0 0 2 1 1 2 3 4 4 5 7 8
//      ConstBuffer "$Globals" 208
//      Vector 128 [_Wind]
//      Vector 144 [_Color]
//      Vector 192 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityTerrain" 272
//      Vector 80 [_TreeInstanceColor]
//      Vector 96 [_TreeInstanceScale]
//      Vector 176 [_SquashPlaneNormal]
//      Float 192 [_SquashAmount]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityFog" 4
//      BindCB "UnityTerrain" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 23:03:34 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             8         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c6         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c13        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c17        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c24        cb3            21         1  ( FLT, FLT, FLT, FLT)
// c25        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c26        cb5             5         2  ( FLT, FLT, FLT, FLT)
// c28        cb5            11         2  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c30, 1.97500002, 0.792999983, 0.375, 0.193000004
    def c31, 1, 2, -0.5, -1
    def c32, 2, 3, 0.100000001, 0.300000012
    def c33, 0, 0.416666657, 1.05499995, -0.0549999997
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord7 v7
    mov r0.xyz, c26
    mul oT4.xyz, r0, c2
    mad oT0.xy, v3, c3, c3.zwzw
    nrm r0.xyz, v2
    mul r1.x, r0.x, c21.x
    mul r1.y, r0.x, c22.x
    mul r1.z, r0.x, c23.x
    mul r2.x, r0.y, c21.y
    mul r2.y, r0.y, c22.y
    mul r2.z, r0.y, c23.y
    add r0.xyw, r1.xyzz, r2.xyzz
    mul r1.x, r0.z, c21.z
    mul r1.y, r0.z, c22.z
    mul r1.z, r0.z, c23.z
    add r0.xyz, r0.xyww, r1
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c9, r2
    dp4 r3.y, c10, r2
    dp4 r3.z, c11, r2
    mad r0.xyz, c12, r0.x, r3
    mov r1.w, c31.x
    dp4 r2.x, c6, r1
    dp4 r2.y, c7, r1
    dp4 r2.z, c8, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c33.x
    mov r0.w, c33.y
    lit r2, r0.xxww
    mov r2.x, r2.z
    lit r3, r0.yyww
    lit r0, r0.zzww
    mov r2.z, r0.z
    mov r2.y, r3.z
    mad r0.xyz, r2, c33.z, c33.w
    max oT5.xyz, r0, c33.x
    mov r0.x, c17.w
    mov r0.y, c18.w
    mov r0.z, c19.w
    dp3 r0.x, r0, c31.x
    add r0.y, r0.x, v7.x
    add r0.z, r0.y, v7.y
    mul r2.xyz, v0, c27
    dp3 r0.x, r2, r0.z
    add r0, r0.xxyy, c4.y
    mul r0, r0, c30
    frc r0, r0
    mad r0, r0, c31.y, c31.z
    frc r0, r0
    mad r0, r0, c31.y, c31.w
    abs r0, r0
    mul r3, r0, r0
    mad r0, r0, -c32.x, c32.y
    mul r0, r0, r3
    add r0.xy, r0.ywzw, r0.xzzw
    mul r3.xyz, r0.y, c1
    mul r3.xyz, r3, v4.y
    mul r4.y, r0.y, v4.y
    mul r0.y, v7.y, c32.z
    mul r4.xz, r0.y, v2
    mov r0.z, c32.w
    mad r0.xyz, r0.xzxw, r4, r3
    mad r0.xyz, r0, c1.w, r2
    mad r0.xyz, v4.x, c1, r0
    dp3 r0.w, c28, r0
    add r0.w, r0.w, c28.w
    mad r2.xyz, r0.w, -c28, r0
    lrp r3.xyz, c29.x, r0, r2
    mul r0, r3.y, c14
    mad r0, c13, r3.x, r0
    mad r0, c15, r3.z, r0
    add r0, r0, c16
    mul r1.w, r0.y, c5.x
    mul r2.w, r1.w, -c31.z
    mul r2.xz, r0.xyww, -c31.z
    add oT6.xy, r2.z, r2.xwzw
    mul r1.w, r0.z, c25.y
    exp oT0.z, -r1.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT6.zw, r0
    nrm r0.xyz, v1
    mul r2.xyz, r0.y, c18.yzxw
    mad r0.xyw, c17.yzzx, r0.x, r2.xyzz
    mad r0.xyz, c19.yzxw, r0.z, r0.xyww
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov oT1.x, r0.z
    mul r2.xyz, r0, r1.zxyw
    mad r2.xyz, r1.yzxw, r0.yzxw, -r2
    mul r0.z, v1.w, c24.w
    mul r2.xyz, r0.z, r2
    mov oT1.y, r2.x
    mov oT1.z, r1.x
    mul r4.xyz, r3.y, c18
    mad r3.xyw, c17.xyzz, r3.x, r4.xyzz
    mad r3.xyz, c19, r3.z, r3.xyww
    add r3.xyz, r3, c20
    mov oT1.w, r3.x
    mov oT2.x, r0.x
    mov oT3.x, r0.y
    mov oT2.y, r2.y
    mov oT3.y, r2.z
    mov oT2.z, r1.y
    mov oT3.z, r1.z
    mov oT2.w, r3.y
    mov oT3.w, r3.z
    mov oT4.w, v7.w

// approximately 117 instruction slots used
vs_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[13], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v7.xyw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.x, cb3[12].w
mov r0.y, cb3[13].w
mov r0.z, cb3[14].w
dp3 r0.x, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.y, r0.x, v7.x
add r0.z, r0.y, v7.y
mul r1.xyz, v0.xyzx, cb5[6].xyzx
dp3 r0.x, r1.xyzx, r0.zzzz
add r0.xyzw, r0.xxyy, cb1[0].yyyy
mul r0.xyzw, r0.xyzw, l(1.975000, 0.793000, 0.375000, 0.193000)
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-0.500000, -0.500000, -0.500000, -0.500000)
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r2.xyzw, |r0.xyzw|, |r0.xyzw|
mad r0.xyzw, -|r0.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r0.xyzw, r0.xyzw, r2.xyzw
add r0.xy, r0.ywyy, r0.xzxx
mul r2.xyz, r0.yyyy, cb0[8].xyzx
mul r2.xyz, r2.xyzx, v4.yyyy
mul r3.y, r0.y, v4.y
mul r0.y, v7.y, l(0.100000)
mul r3.xz, r0.yyyy, v2.xxzx
mov r0.z, l(0.300000)
mad r0.xyz, r0.xzxx, r3.xyzx, r2.xyzx
mad r0.xyz, r0.xyzx, cb0[8].wwww, r1.xyzx
mad r0.xyz, v4.xxxx, cb0[8].xyzx, r0.xyzx
dp3 r0.w, cb5[11].xyzx, r0.xyzx
add r0.w, r0.w, cb5[11].w
mad r1.xyz, -r0.wwww, cb5[11].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -r1.xyzx
mad r0.xyz, cb5[12].xxxx, r0.xyzx, r1.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed fcfed3b0969cb5e3-vs.txt
ne r6.w, r1.w, l(1.0)
if_nz r6.w
  add r6.w, r1.w, -r6.y
  mad r1.x, r6.w, r6.x, r1.x
endif

mul r0.w, r1.z, cb4[1].y
exp o1.z, -r0.w
mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r2.xyz, r0.yyyy, cb3[13].xyzx
mad r0.xyw, cb3[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb3[14].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb3[15].xyzx
mov o2.w, r0.x
dp3 r0.x, v1.xyzx, v1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, v1.xyzx
mul r3.xyz, r2.yyyy, cb3[13].yzxy
mad r2.xyw, cb3[12].yzyx, r2.xxxx, r3.xyxz
mad r2.xyz, cb3[14].yzxy, r2.zzzz, r2.xywx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mov o2.x, r2.z
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, v2.xyzx
mul r4.x, r3.x, cb3[16].x
mul r4.y, r3.x, cb3[17].x
mul r4.z, r3.x, cb3[18].x
mul r5.x, r3.y, cb3[16].y
mul r5.y, r3.y, cb3[17].y
mul r5.z, r3.y, cb3[18].y
add r3.xyw, r4.xyxz, r5.xyxz
mul r4.x, r3.z, cb3[16].z
mul r4.y, r3.z, cb3[17].z
mul r4.z, r3.z, cb3[18].z
add r3.xyz, r3.xywx, r4.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r2.xyzx, r3.zxyz
mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
mul r0.x, v1.w, cb3[21].w
mul r4.xyz, r0.xxxx, r4.xyzx
mov o2.y, r4.x
mov o2.z, r3.x
mov o3.w, r0.y
mov o4.w, r0.z
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.y, r4.y
mov o4.y, r4.z
mov o3.z, r3.y
mov o4.z, r3.z
mul o5.xyz, cb0[9].xyzx, cb5[5].xyzx
mov o5.w, v7.w
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r2.xyzw, r3.yzzx, r3.xyzz
dp4 r4.x, cb2[41].xyzw, r2.xyzw
dp4 r4.y, cb2[42].xyzw, r2.xyzw
dp4 r4.z, cb2[43].xyzw, r2.xyzw
mad r0.xyz, cb2[44].xyzx, r0.xxxx, r4.xyzx
mov r3.w, l(1.000000)
dp4 r2.x, cb2[38].xyzw, r3.xyzw
dp4 r2.y, cb2[39].xyzw, r3.xyzw
dp4 r2.z, cb2[40].xyzw, r3.xyzw
add r0.xyz, r0.xyzx, r2.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o7.zw, r1.zzzw
add o7.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used