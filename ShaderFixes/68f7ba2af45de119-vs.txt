// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 68f7ba2af45de119-vs.txt
// 3DMigoto: 68f7ba2af45de119 |    Unity headers extracted from SpeedTree.shader
//    Shader "Nature/SpeedTree" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _DetailTex ("Detail", 2D) = "black" { }
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//      [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//      [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      CustomEditor "SpeedTreeMaterialInspector"
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//        Pass 7/7 {
//          Tags { "LIGHTMODE"="Vertex" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//          Cull [_Cull]
//          GpuProgramID 881350
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 10863
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 34 0 1
//   Keywords { "FOG_EXP" "LOD_FADE_PERCENTAGE" "GEOM_TYPE_BRANCH_DETAIL" }
//   undeciphered2: 1 0 5 0 0 0
//   undeciphered3: 63 6 0 0 2 1 1 2 3 4 4 5 5 6
//   ConstBuffer "$Globals" 112
//   Vector 96 [_Color]
//   ConstBuffer "UnityLighting" 720
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 320 [unity_LODFade]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:29:25 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyz 
// TEXCOORD                 2   xyzw        5     NONE   float   xyz 
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x  w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[25], dynamicIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyz
dcl_input v5.xyz
dcl_input v7.xw
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyz, v7.xxxx, cb0[6].xyzx
eq r0.w, v7.w, l(0.000000)
movc o3.z, r0.w, v5.z, l(2.500000)
add r1.xyz, -v0.xyzx, v4.xyzx
mad r1.xyz, cb2[20].xxxx, r1.xyzx, v0.xyzx
mul r2.xyz, r1.yyyy, cb2[5].xyzx
mad r2.xyz, cb2[4].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb2[6].xyzx, r1.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb2[7].xyzx
mul r3.xyz, v2.yyyy, cb2[9].xyzx
mad r3.xyz, cb2[8].xyzx, v2.xxxx, r3.xyzx
mad r3.xyz, cb2[10].xyzx, v2.zzzz, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r5.xyz, r4.xyzx
mov r0.w, l(0)
loop 
  ige r1.w, r0.w, l(2)
  breakc_nz r1.w
  mad r6.xyz, -r2.xyzx, cb1[r0.w + 14].wwww, cb1[r0.w + 14].xyzx
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r2.w, r1.w
  mul r6.xyz, r2.wwww, r6.xyzx
  mad r1.w, r1.w, cb1[r0.w + 22].z, l(1.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  dp3 r2.w, r3.xyzx, r6.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r1.w, r1.w, r2.w
  mad r5.xyz, cb1[r0.w + 6].xyzx, r1.wwww, r5.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mul o2.xyz, r0.xyzx, r5.xyzx
mul r0.xyzw, r1.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, r1.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 68f7ba2af45de119-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

mul r1.x, r0.z, cb4[1].y
exp o1.x, -r1.x

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o1.yz, v3.xxyx
mov o1.w, l(0)
mov o2.w, cb0[6].w
mov o3.xy, v5.xyxx
ret 
// Approximately 0 instruction slots used