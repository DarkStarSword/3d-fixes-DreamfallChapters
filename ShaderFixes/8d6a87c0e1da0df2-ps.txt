// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8d6a87c0e1da0df2-ps.txt
// 3DMigoto: 8d6a87c0e1da0df2 | Matched 3 variants of 1 shaders: Hidden/TerrainEngine/Details/BillboardWavingDoublePass
//
//       Unity headers extracted from Standard_BillboardGrass.shader
//       Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//         Properties {
//          _WavingTint ("Fade Color", Color) = (0.700000,0.600000,0.500000,0.000000)
//          _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//          _WaveAndDistance ("Wave and distance", Vector) = (12.000000,3.600000,1.000000,1.000000)
//          _Cutoff ("Cutoff", Float) = 0.500000
//         }
//         Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//             Cull Off
//             ColorMask RGB
//             GpuProgramID 32072
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 129
// 2:              GpuProgramIndex 149
// 4:              GpuProgramIndex 169
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 32 2 0
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
// 4:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//      undeciphered2: 1 3 4 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 176
//      Vector 32 [unity_ColorSpaceDielectricSpec]
//      Vector 64 [unity_Lightmap_HDR]
//      Float 160 [_Cutoff]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 48 [unity_SpecCube0_HDR]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [unity_Lightmap] 2D 0
//      SetTexture 2 [unity_SpecCube0] CUBE 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityFog" 2
//      BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:39:02 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0            10         1  ( FLT, FLT, FLT, FLT)
// c3         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb3             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t2               
// s2             s2              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c6, -0.5, 6, 1, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl t2.xyz
    dcl_pp t3
    dcl t4
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    texld r0, t0, s2
    mad_pp r1, r0.w, t3.w, c6.x
    mul_pp r0, r0, t3
    mad_pp r2, r0.w, t3.w, -c2.x
    texkill r1
    texkill r2
    add r1.xyz, -t2, c3
    nrm_pp r2.xyz, r1
    dp3_pp r2.w, -r2, t1
    add_pp r2.w, r2.w, r2.w
    mad_pp r1.xyz, t1, -r2.w, -r2
    mov_pp r1.w, c6.y
    texld_pp r3, t4, s0
    texldb_pp r1, r1, s1
    mul_pp r1.w, r1.w, c5.x
    mul_pp r1.xyz, r1, r1.w
    nrm_pp r4.xyz, t1
    dp3_sat_pp r1.w, r4, r2
    add_pp r1.w, -r1.w, c6.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.w, r1.w, r1.w
    mov r2.z, c6.z
    add_sat_pp r2.x, r2.z, -c0.w
    lrp_pp r4.xyz, r1.w, r2.x, c0
    mul_pp r1.xyz, r1, r4
    mul_pp r1.w, r3.w, c1.x
    mul_pp r2.xyz, r3, r1.w
    mul_pp r0.xyz, r0, c0.w
    mul_pp r3.w, r0.w, t3.w
    mad_pp r0.xyz, r2, r0, r1
    mov_sat r0.w, t0.z
    lrp_pp r3.xyz, r0.w, r0, c4
    mov_pp oC0, r3

// approximately 37 instruction slots used (3 texture, 34 arithmetic)
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8d6a87c0e1da0df2-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mad r1.x, r0.w, v4.w, l(-0.500000)
mul r0.xyzw, r0.xyzw, v4.xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mad r1.x, r0.w, v4.w, -cb0[10].x
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
add r1.xyz, -v3.xyzx, r5.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, -r1.xyzx, v2.xyzx
add r1.w, r1.w, r1.w
mad r2.xyz, v2.xyzx, -r1.wwww, -r1.xyzx
sample_b r2.xyzw, r2.xyzx, t2.xyzw, s1, l(6.000000)
mul r1.w, r2.w, cb3[3].x
mul r2.xyz, r2.xyzx, r1.wwww
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
dp3_sat r1.x, r3.xyzx, r1.xyzx
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.x
add_sat r1.y, -cb0[2].w, l(1.000000)
add r1.yzw, r1.yyyy, -cb0[2].xxyz
mad r1.xyz, r1.xxxx, r1.yzwy, cb0[2].xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
sample r2.xyzw, v5.xyxx, t1.xyzw, s0
mul r1.w, r2.w, cb0[4].x
mul r2.xyz, r2.xyzx, r1.wwww
mul r0.xyz, r0.xyzx, cb0[2].wwww
mul r0.w, r0.w, v4.w
mov o0.w, r0.w
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mov_sat r0.w, v1.z
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
ret 
// Approximately 0 instruction slots used