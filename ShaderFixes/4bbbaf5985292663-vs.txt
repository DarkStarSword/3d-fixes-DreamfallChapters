// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4bbbaf5985292663-vs.txt
// 3DMigoto: 4bbbaf5985292663 | Matched 2 variants of 1 shaders: Legacy Shaders/Parallax Diffuse
//
//       Unity headers extracted from Normal-Parallax.shader
//       Shader "Legacy Shaders/Parallax Diffuse" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _Parallax ("Height", Range(0.005000,0.080000)) = 0.020000
//          _MainTex ("Base (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _ParallaxMap ("Heightmap (A)", 2D) = "black" { }
//         }
//         Fallback "Legacy Shaders/Bumped Diffuse"
//         SubShader 2/2 {
//           LOD 500
//           Tags { "RenderType"="Opaque" }
//           Pass 4/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//             ZWrite Off
//             GpuProgramID 641211
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 635
// 2:              GpuProgramIndex 641
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Normal-Parallax.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 53 0 0
// 2:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "UNITY_HDR_ON" }
// 1:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 155 5 0 0 1 2 3 4 4 5 7 8
//      ConstBuffer "$Globals" 224
//      Vector 160 [_MainTex_ST]
//      Vector 176 [_BumpMap_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityShadows" 416
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityShadows" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityFog" 4
//      BindCB "UnityLightmaps" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:21:30 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 6      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c5         cb2            25         1  ( FLT, FLT, FLT, FLT)
// c6         cb3             0         8  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
// c22        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c23        cb5             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c24, 0.5, 1, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mad oT0.xy, v3, c1, c1.zwzw
    mad oT0.zw, v3.xyxy, c2.xyxy, c2
    mul r0.xyz, v1.y, c15
    mad r0.xyz, c14, v1.x, r0
    mad r0.xyz, c16, v1.z, r0
    nrm r1.xyz, r0
    mul r0.xyz, v0.y, c15
    mad r0.xyz, c14, v0.x, r0
    mad r0.xyz, c16, v0.z, r0
    mad r0.xyz, c17, v0.w, r0
    add r2.xyz, -r0, c3
    dp3 oT2.x, r2, r1
    mul r3.x, v2.x, c18.x
    mul r3.y, v2.x, c19.x
    mul r3.z, v2.x, c20.x
    mul r4.x, v2.y, c18.y
    mul r4.y, v2.y, c19.y
    mul r4.z, v2.y, c20.y
    add r3.xyz, r3, r4
    mul r4.x, v2.z, c18.z
    mul r4.y, v2.z, c19.z
    mul r4.z, v2.z, c20.z
    add r3.xyz, r3, r4
    nrm r4.xyz, r3
    mul r3.xyz, r1.yzxw, r4.zxyw
    mad r1.xyz, r4.yzxw, r1.zxyw, -r3
    dp3 oT2.z, r2, r4
    mul r0.w, v1.w, c21.w
    mul r1.xyz, r0.w, r1
    dp3 oT2.y, r2, r1
    mul r1, v0.y, c7
    mad r1, c6, v0.x, r1
    mad r1, c8, v0.z, r1
    add r1, r1, c9
    mul r0.w, r1.y, c4.x
    mul r2.w, r0.w, c24.x
    mul r2.xz, r1.xyww, c24.x
    add oT3.xy, r2.z, r2.xwzw
    mad oT4.xy, v4, c23, c23.zwzw
    add r2.xyz, r0, -c5
    mov oT1.xyz, r0
    mul oT5.xyz, r2, c5.w
    mul r0.x, v0.y, c11.z
    mad r0.x, c10.z, v0.x, r0.x
    mad r0.x, c12.z, v0.z, r0.x
    add r0.x, r0.x, c13.z
    mov r0.w, c5.w
    add r0.y, -r0.w, c24.y
    mul oT5.w, r0.y, -r0.x
    mul r0.x, r1.z, c22.x
    mul r0.x, r0.x, -r0.x
    exp oT1.w, r0.x
    mad oPos.xy, r1.w, c0, r1
    mov oPos.zw, r1
    mov oT3.zw, r1
    mov oT4.zw, c24.z

// approximately 60 instruction slots used
vs_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4bbbaf5985292663-vs.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4bbbaf5985292663-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
mul r1.x, r0.z, cb4[1].x
mul r1.x, r1.x, -r1.x
exp o2.w, r1.x
mul r1.xyz, v0.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
mov o2.xyz, r1.xyzx
mul r2.x, v2.x, cb3[16].x
mul r2.y, v2.x, cb3[17].x
mul r2.z, v2.x, cb3[18].x
mul r3.x, v2.y, cb3[16].y
mul r3.y, v2.y, cb3[17].y
mul r3.z, v2.y, cb3[18].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, v2.z, cb3[16].z
mul r3.y, v2.z, cb3[17].z
mul r3.z, v2.z, cb3[18].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, v1.yyyy, cb3[13].xyzx
mad r3.xyz, cb3[12].xyzx, v1.xxxx, r3.xyzx
mad r3.xyz, cb3[14].xyzx, v1.zzzz, r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r4.xyz, r2.zxyz, r3.yzxy
mad r4.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
mul r1.w, v1.w, cb3[21].w
mul r4.xyz, r1.wwww, r4.xyzx
add r5.xyz, -r1.xyzx, r7.xyzx
add r1.xyz, r1.xyzx, -cb2[25].xyzx
mul o6.xyz, r1.xyzx, cb2[25].wwww
dp3 o3.y, r5.xyzx, r4.xyzx
dp3 o3.z, r5.xyzx, r2.xyzx
dp3 o3.x, r5.xyzx, r3.xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o4.zw, r0.zzzw
add o4.xy, r1.zzzz, r1.xwxx
mad o5.xy, v4.xyxx, cb5[0].xyxx, cb5[0].zwzz
mov o5.zw, l(0,0,0,0)
mul r0.x, v0.y, cb3[5].z
mad r0.x, cb3[4].z, v0.x, r0.x
mad r0.x, cb3[6].z, v0.z, r0.x
add r0.x, r0.x, cb3[7].z
add r0.y, -cb2[25].w, l(1.000000)
mul o6.w, r0.y, -r0.x
ret 
// Approximately 0 instruction slots used