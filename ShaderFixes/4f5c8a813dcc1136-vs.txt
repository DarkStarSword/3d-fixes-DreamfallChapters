// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4f5c8a813dcc1136-vs.txt
// 3DMigoto: 4f5c8a813dcc1136 | Matched 2 variants of 2 shaders: Hidden/Nature/Tree Creator Bark Optimized, Nature/Tree Creator Bark
//
// 1:    Unity headers extracted from TreeCreatorBark.shader
// 2:    Unity headers extracted from TreeCreatorBarkOptimized.shader
// 2:    Shader "Hidden/Nature/Tree Creator Bark Optimized" {
// 1:    Shader "Nature/Tree Creator Bark" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 1:       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//          _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
// 1:       _BumpMap ("Normalmap", 2D) = "bump" { }
// 2:       _BumpSpecMap ("Normalmap (GA) Spec (R)", 2D) = "bump" { }
// 1:       _GlossMap ("Gloss (A)", 2D) = "black" { }
// 2:       _TranslucencyMap ("Trans (RGB) Gloss(A)", 2D) = "white" { }
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//         [HideInInspector]  _TreeInstanceColor ("TreeInstanceColor", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _TreeInstanceScale ("TreeInstanceScale", Vector) = (1.000000,1.000000,1.000000,1.000000)
//         [HideInInspector]  _SquashAmount ("Squash", Float) = 1.000000
//         }
// 2:      Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Bark Rendertex"
// 1:      Dependency "OptimizedShader" = "Hidden/Nature/Tree Creator Bark Optimized"
// 1:      Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeBark" }
//           Pass 6/6 {
//             Name "SHADOWCASTER"
//             Tags { "LIGHTMODE"="SHADOWCASTER" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TreeBark" }
// 1:          GpuProgramID 341589
// 2:          GpuProgramID 359872
//             Program "vp" {
//               SubProgram "d3d11 " {
//                 GpuProgramIndex 199
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from TreeCreatorBark.shader.decompressed:
// 2: Unity 5.3 headers extracted from TreeCreatorBarkOptimized.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 72 0 0
//      Keywords { "SHADOWS_DEPTH" }
//      undeciphered2: 1 0 7 0 0 0
//      undeciphered3: 23 4 0 0 2 1 1 2 4 5
//      ConstBuffer "$Globals" 192
//      Vector 128 [_Wind]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "UnityTerrain" 272
//      Vector 96 [_TreeInstanceScale]
//      Vector 176 [_SquashPlaneNormal]
//      Float 192 [_SquashAmount]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerDraw" 4
//      BindCB "UnityPerFrame" 5
//      BindCB "UnityTerrain" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:25:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[19], immediateIndexed
dcl_constantbuffer cb5[21], immediateIndexed
dcl_constantbuffer cb6[13], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v4.xy
dcl_input v7.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
mul r1.x, r0.x, cb4[16].x
mul r1.y, r0.x, cb4[17].x
mul r1.z, r0.x, cb4[18].x
mul r2.x, r0.y, cb4[16].y
mul r2.y, r0.y, cb4[17].y
mul r2.z, r0.y, cb4[18].y
add r0.xyw, r1.xyxz, r2.xyxz
mul r1.x, r0.z, cb4[16].z
mul r1.y, r0.z, cb4[17].z
mul r1.z, r0.z, cb4[18].z
add r0.xyz, r0.xywx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r1.x, cb4[12].w
mov r1.y, cb4[13].w
mov r1.z, cb4[14].w
dp3 r0.w, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.y, r0.w, v7.x
add r0.w, r1.y, v7.y
mul r2.xyz, v0.xyzx, cb6[6].xyzx
dp3 r1.x, r2.xyzx, r0.wwww
add r1.xyzw, r1.xxyy, cb1[0].yyyy
mul r1.xyzw, r1.xyzw, l(1.975000, 0.793000, 0.375000, 0.193000)
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-0.500000, -0.500000, -0.500000, -0.500000)
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r3.xyzw, |r1.xyzw|, |r1.xyzw|
mad r1.xyzw, -|r1.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r1.xyzw, r1.xyzw, r3.xyzw
add r1.xy, r1.ywyy, r1.xzxx
mul r3.xyz, r1.yyyy, cb0[8].xyzx
mul r3.xyz, r3.xyzx, v4.yyyy
mul r4.y, r1.y, v4.y
mul r0.w, v7.y, l(0.100000)
mul r4.xz, r0.wwww, v2.xxzx
mov r1.z, l(0.300000)
mad r1.xyz, r1.xzxx, r4.xyzx, r3.xyzx
mad r1.xyz, r1.xyzx, cb0[8].wwww, r2.xyzx
mad r1.xyz, v4.xxxx, cb0[8].xyzx, r1.xyzx
dp3 r0.w, cb6[11].xyzx, r1.xyzx
add r0.w, r0.w, cb6[11].w
mad r2.xyz, -r0.wwww, cb6[11].xyzx, r1.xyzx
add r1.xyz, r1.xyzx, -r2.xyzx
mad r1.xyz, cb6[12].xxxx, r1.xyzx, r2.xyzx
mul r2.xyz, r1.yyyy, cb4[13].xyzx
mad r2.xyz, cb4[12].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb4[14].xyzx, r1.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb4[15].xyzx
mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r3.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb3[5].z
mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
mov o1.xyz, r2.xyzx
mul r2.xyzw, r0.yyyy, cb5[18].xyzw
mad r2.xyzw, cb5[17].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb5[19].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb5[20].xyzw
mul r2.xyzw, r1.yyyy, cb4[1].xyzw
mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb4[2].xyzw, r1.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, cb4[3].xyzw
ne r2.x, cb3[5].z, l(0.000000)
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4f5c8a813dcc1136-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

div_sat r1.x, cb3[5].x, r0.w
add r0.z, r0.z, r1.x

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

max r0.x, r0.z, l(0.000000)
add r0.x, -r0.z, r0.x
mad o0.z, cb3[5].y, r0.x, r0.z
ret 
// Approximately 0 instruction slots used