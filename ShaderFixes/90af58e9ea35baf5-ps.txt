// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 90af58e9ea35baf5-ps.txt
// 3DMigoto: 90af58e9ea35baf5 |    Unity headers extracted from Standard-Base.shader
//    Shader "Hidden/TerrainEngine/Splatmap/Standard-Base" {
//      Properties {
//       _MainTex ("Base (RGB) Smoothness (A)", 2D) = "white" { }
//       _MetallicTex ("Metallic (R)", 2D) = "white" { }
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 63415
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 75
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard-Base.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 207 7 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 7 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 96 [_LightColor0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_MetallicTex] 2D 4
//   SetTexture 2 [_ShadowMapTexture] 2D 2
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:40:11 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 20
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 90af58e9ea35baf5-ps.txt
mov r16.xyzw, cb1[4].xyzw
mov r17.xyzw, l(0)
mul r17.x, -r15.x, r15.y
mul r19.xyzw, cb10[0].xyzw, r17.xxxx
mad r19.xyzw, cb10[1].xyzw, r17.yyyy, r19.xyzw
mad r19.xyzw, cb10[2].xyzw, r17.zzzz, r19.xyzw
mad r19.xyzw, cb10[3].xyzw, r17.wwww, r19.xyzw
mul r18.xyzw, cb11[12].xyzw, r19.xxxx
mad r18.xyzw, cb11[13].xyzw, r19.yyyy, r18.xyzw
mad r18.xyzw, cb11[14].xyzw, r19.zzzz, r18.xyzw
mad r18.xyzw, cb11[15].xyzw, r19.wwww, r18.xyzw
add r16.xyz, r16.xyz, -r18.xyz

add r0.xyz, -v3.xyzx, r16.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s3
sample r3.xyzw, v1.xyxx, t1.xyzw, s4
div r3.yz, v5.xxyx, v5.wwww
sample r4.xyzw, r3.yzyy, t2.xyzw, s2
add r1.w, -r2.w, l(1.000000)
dp3 r3.y, -r1.xyzx, v2.xyzx
add r3.y, r3.y, r3.y
mad r3.yzw, v2.xxyz, -r3.yyyy, -r1.xxyz
sample r5.xyzw, v4.xyxx, t3.xyzw, s0
log r4.y, r5.w
mul r4.y, r4.y, cb0[4].y
exp r4.y, r4.y
mul r4.y, r4.y, cb0[4].x
mul r4.yzw, r5.xxyz, r4.yyyy
sample r6.xyzw, v4.xyxx, t4.xyzw, s0
mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.w, r6.xyzx, r6.xyzx
sqrt r5.w, r5.w
max r5.w, r5.w, l(0.001000)
div r6.xyz, r6.xyzx, r5.wwww
dp3 r6.w, v2.xyzx, r6.xyzx
max r6.w, r6.w, l(0.000000)
add r7.x, -r5.w, l(1.000000)
mul r7.xyz, r4.yzwy, r7.xxxx
mul r8.xyz, r4.yzwy, r5.wwww
add r9.xy, v4.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r10.xyzw, r9.xyxx, t3.xyzw, s0
log r7.w, r10.w
mul r7.w, r7.w, cb0[4].y
exp r7.w, r7.w
mul r7.w, r7.w, cb0[4].x
mul r10.xyz, r10.xyzx, r7.wwww
sample r9.xyzw, r9.xyxx, t4.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r7.w, r9.xyzx, r9.xyzx
sqrt r7.w, r7.w
max r7.w, r7.w, l(0.001000)
div r9.xyz, r9.xyzx, r7.wwww
dp3 r8.w, v2.xyzx, r9.xyzx
max r8.w, r8.w, l(0.000000)
add r9.w, -r7.w, l(1.000000)
mul r11.xyz, r9.wwww, r10.xyzx
mul r12.xyz, r7.wwww, r10.xyzx
mul r11.xyz, r8.wwww, r11.xyzx
mad r7.xyz, r7.xyzx, r6.wwww, r11.xyzx
dp3_sat r9.w, v2.xyzx, cb2[0].xyzx
add r10.w, -r4.x, l(1.000000)
mul r9.w, r9.w, r10.w
mul r11.xyz, r9.wwww, cb0[6].xyzx
mad r13.xyz, r4.yzwy, r5.wwww, -r11.xyzx
mul r5.xyz, r4.xxxx, r5.xyzx
max r13.xyz, r13.xyzx, r5.xyzx
mad r4.xyz, r4.yzwy, r5.wwww, -r13.xyzx
mad r4.xyz, cb3[24].xxxx, r4.xyzx, r13.xyzx
min r4.xyz, r4.xyzx, r8.xyzx
mad r8.xyz, r10.xyzx, r7.wwww, -r11.xyzx
max r8.xyz, r5.xyzx, r8.xyzx
mad r10.xyz, r10.xyzx, r7.wwww, -r8.xyzx
mad r8.xyz, cb3[24].xxxx, r10.xyzx, r8.xyzx
min r8.xyz, r8.xyzx, r12.xyzx
mad r10.xyz, -r9.wwww, cb0[6].xyzx, r7.xyzx
max r5.xyz, r5.xyzx, r10.xyzx
add r10.xyz, -r5.xyzx, r7.xyzx
mad r5.xyz, cb3[24].xxxx, r10.xyzx, r5.xyzx
min r5.xyz, r5.xyzx, r7.xyzx
lt r4.w, l(0.000000), cb4[2].w
if_nz r4.w
  dp3 r4.w, r3.yzwy, r3.yzwy
  rsq r4.w, r4.w
  mul r7.xyz, r3.yzwy, r4.wwww
  add r10.xyz, -v3.xyzx, cb4[0].xyzx
  div r10.xyz, r10.xyzx, r7.xyzx
  add r11.xyz, -v3.xyzx, cb4[1].xyzx
  div r11.xyz, r11.xyzx, r7.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r4.w, r10.y, r10.x
  min r4.w, r10.z, r4.w
  add r10.xyz, v3.xyzx, -cb4[2].xyzx
  mad r7.xyz, r7.xyzx, r4.wwww, r10.xyzx
else 
  mov r7.xyz, r3.yzwy
endif 
mad r4.w, -r1.w, l(0.700000), l(1.700000)
mul r4.w, r1.w, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t5.xyzw, s1, r4.w
log r5.w, r7.w
mul r5.w, r5.w, cb4[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb4[3].x
mul r10.xyz, r7.xyzx, r5.wwww
lt r7.w, cb4[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb4[6].w
  if_nz r7.w
    dp3 r7.w, r3.yzwy, r3.yzwy
    rsq r7.w, r7.w
    mul r11.xyz, r3.yzwy, r7.wwww
    add r12.xyz, -v3.xyzx, cb4[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -v3.xyzx, cb4[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r7.w, r12.y, r12.x
    min r7.w, r12.z, r7.w
    add r12.xyz, v3.xyzx, -cb4[6].xyzx
    mad r3.yzw, r11.xxyz, r7.wwww, r12.xxyz
  endif 
  sample_l r11.xyzw, r3.yzwy, t6.xyzw, s1, r4.w
  log r3.y, r11.w
  mul r3.y, r3.y, cb4[7].y
  exp r3.y, r3.y
  mul r3.y, r3.y, cb4[7].x
  mul r3.yzw, r11.xxyz, r3.yyyy
  mad r7.xyz, r5.wwww, r7.xyzx, -r3.yzwy
  mad r10.xyz, cb4[1].wwww, r7.xyzx, r3.yzwy
endif 
dp3 r3.y, v2.xyzx, v2.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, v2.xxyz
add r7.xyz, r2.xyzx, -cb0[2].xyzx
mad r7.xyz, r3.xxxx, r7.xyzx, cb0[2].xyzx
mad r3.x, -r3.x, cb0[2].w, cb0[2].w
mul r2.xyz, r2.xyzx, r3.xxxx
mad r11.xyz, r0.xyzx, r0.wwww, r6.xyzx
dp3 r4.w, r11.xyzx, r11.xyzx
max r4.w, r4.w, l(0.001000)
rsq r4.w, r4.w
mul r11.xyz, r4.wwww, r11.xyzx
dp3 r4.w, r3.yzwy, r11.xyzx
max r4.w, r4.w, l(0.000000)
dp3 r1.x, r3.yzwy, r1.xyzx
dp3 r1.y, r6.xyzx, r11.xyzx
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.z, r1.w, r1.w
mad r5.w, -r1.w, r1.w, l(1.000000)
mad r6.x, r1.x, r5.w, r1.z
mad r5.w, r6.w, r5.w, r1.z
mul r5.w, r1.x, r5.w
mad r5.w, r6.w, r6.x, r5.w
add r5.w, r5.w, l(0.000010)
div r5.w, l(2.000000), r5.w
mul r6.x, r1.z, r1.z
mul r4.w, r4.w, r4.w
mad r6.yz, r1.zzzz, r1.zzzz, l(0.000000, -1.000000, 1.000000, 0.000000)
mad r4.w, r4.w, r6.y, l(1.000000)
mul r6.y, r4.w, l(3.14159274)
mad r4.w, r6.y, r4.w, l(1.000000012E-007)
div r4.w, r6.x, r4.w
add r6.x, -r6.w, l(1.000000)
mul r6.y, r6.x, r6.x
mul r6.y, r6.y, r6.y
mul r6.x, r6.x, r6.y
add r1.x, -r1.x, l(1.000000)
mul r6.y, r1.x, r1.x
mul r6.y, r6.y, r6.y
mul r1.x, r1.x, r6.y
mul r6.y, r1.y, r1.y
dp2 r6.y, r6.yyyy, r1.wwww
add r6.y, r6.y, l(-0.500000)
mad r6.x, r6.y, r6.x, l(1.000000)
mad r6.y, r6.y, r1.x, l(1.000000)
mul r6.x, r6.y, r6.x
mul r4.w, r4.w, r5.w
mul r4.w, r4.w, l(0.785398185)
eq r5.w, cb0[3].w, l(0.000000)
max r6.y, r4.w, l(0.000100)
sqrt r6.y, r6.y
movc r4.w, r5.w, r6.y, r4.w
mul r4.w, r6.w, r4.w
max r4.w, r4.w, l(0.000000)
mul r6.x, r6.w, r6.x
mul r1.w, r1.z, r1.w
mad r1.w, -r1.w, l(0.280000), l(1.000000)
div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
movc r1.w, r5.w, r1.w, r6.y
dp3 r6.y, r7.xyzx, r7.xyzx
ne r6.y, r6.y, l(0.000000)
and r6.y, r6.y, l(0x3f800000)
mul r4.w, r4.w, r6.y
add r3.x, r2.w, -r3.x
add_sat r3.x, r3.x, l(1.000000)
mad r5.xyz, r4.xyzx, r6.xxxx, r5.xyzx
mul r4.xyz, r4.xyzx, r4.wwww
add r1.y, -r1.y, l(1.000000)
mul r4.w, r1.y, r1.y
mul r4.w, r4.w, r4.w
mul r1.y, r1.y, r4.w
add r6.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r1.yyyy, r7.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mad r4.xyz, r2.xyzx, r5.xyzx, r4.xyzx
mul r5.xyz, r10.xyzx, r1.wwww
add r6.xyz, -r7.xyzx, r3.xxxx
mad r1.xyw, r1.xxxx, r6.xyxz, r7.xyxz
mad r1.xyw, r5.xyxz, r1.xyxw, r4.xyxz
mad r0.xyz, r0.xyzx, r0.wwww, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.yzwy, r0.xyzx
dp3 r0.x, r9.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.y, r1.z, l(0.000100)
mul r0.yz, r0.yyxy, r0.yyxy
div r0.y, l(2.000000), r0.y
add r0.y, r0.y, l(-2.000000)
max r0.y, r0.y, l(0.000100)
mad r0.z, r0.z, r2.w, r1.z
add r1.z, r0.y, l(1.000000)
log r0.w, r0.w
mul r0.xy, r0.zwzz, r0.xyxx
exp r0.y, r0.y
mul r0.y, r0.y, r1.z
mad r0.x, r0.x, l(8.000000), l(0.000100)
div r0.x, r0.y, r0.x
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r5.w, r0.y, r0.x
mad r0.xyz, r0.xxxx, r7.xyzx, r2.xyzx
mul r0.xyz, r8.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r8.wwww, r1.xywx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used