// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b3f292a409237326-ps.txt
// 3DMigoto: b3f292a409237326 |    Unity headers extracted from Normal-Parallax.shader
//    Shader "Legacy Shaders/Parallax Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Parallax ("Height", Range(0.005000,0.080000)) = 0.020000
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _ParallaxMap ("Heightmap (A)", 2D) = "black" { }
//      }
//      Fallback "Legacy Shaders/Bumped Diffuse"
//      SubShader 1/2 {
//        LOD 500
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 32371
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 69
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Normal-Parallax.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 60 7 2
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Float 144 [_Parallax]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParallaxMap] 2D 4
//   SetTexture 1 [_MainTex] 2D 2
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_ShadowMapTexture] 2D 1
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:44:44 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b3f292a409237326-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r7.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r1.xyw, v2.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v4.xyzx, r1.zzzz, r1.xywx
sample r2.xyzw, v1.zwzz, t0.xyzw, s4
mul r0.x, cb0[9].x, l(0.500000)
mad r0.x, r2.w, cb0[9].x, -r0.x
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xy, r1.wwww, r1.xyxx
mad r1.z, r1.z, r1.w, l(0.420000)
div r1.xyzw, r1.xyxy, r1.zzzz
mad r1.xyzw, r0.xxxx, r1.xyzw, v1.xyzw
sample r2.xyzw, r1.xyxx, t1.xyzw, s2
mul r2.xyz, r2.xyzx, cb0[8].xyzx
sample r1.xyzw, r1.zwzz, t2.xyzw, s3
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r1.xyxx, r1.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r1.z, r0.x
div r3.xy, v6.xyxx, v6.wwww
sample r3.xyzw, r3.xyxx, t3.xyzw, s1
dp3 r4.x, v2.xyzx, r1.xyzx
dp3 r4.y, v3.xyzx, r1.xyzx
dp3 r4.z, v4.xyzx, r1.xyzx
mul r1.xyz, r3.xxxx, cb0[6].xyzx
eq r0.x, cb3[0].x, l(1.000000)
if_nz r0.x
  eq r0.x, cb3[0].y, l(1.000000)
  mul r3.xyz, v3.wwww, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v2.wwww, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r0.xyz, r0.xxxx, r3.xyzx, r0.yzwy
  add r0.xyz, r0.xyzx, -cb3[6].xyzx
  mul r0.yzw, r0.xxyz, cb3[5].xxyz
  mul r0.y, r0.y, l(0.250000)
  mul r1.w, cb3[0].z, l(0.500000)
  mad r2.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r1.w
  min r0.x, r2.w, r0.y
  sample r3.xyzw, r0.xzwx, t4.xyzw, s0
  add r5.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t4.xyzw, s0
  add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r0.xyzw, r0.xyzx, t4.xyzw, s0
  mov r4.w, l(1.000000)
  dp4 r3.x, r3.xyzw, r4.xyzw
  dp4 r3.y, r5.xyzw, r4.xyzw
  dp4 r3.z, r0.xyzw, r4.xyzw
else 
  mov r4.w, l(1.000000)
  dp4 r3.x, cb2[38].xyzw, r4.xyzw
  dp4 r3.y, cb2[39].xyzw, r4.xyzw
  dp4 r3.z, cb2[40].xyzw, r4.xyzw
endif 
add r0.xyz, r3.xyzx, v5.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r0.w, cb0[3].w, l(0.000000)
log r3.xyz, r0.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
dp3 r0.w, r4.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r2.xyzx
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used