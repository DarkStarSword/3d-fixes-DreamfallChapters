// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1dadc8ee4f0a97c6-vs.txt
// 3DMigoto: 1dadc8ee4f0a97c6 | Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
//
//       Unity headers extracted from SpeedTreeBillboard.shader
//       Shader "Nature/SpeedTree Billboard" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//          _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//          _MainTex ("Base (RGB)", 2D) = "white" { }
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0.000000,1.000000)) = 0.000000
//         }
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//           Pass 7/7 {
//             Tags { "LIGHTMODE"="Vertex" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//             Cull Off
//             GpuProgramID 401848
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 2891
// 2:              GpuProgramIndex 2893
// 4:              GpuProgramIndex 2895
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 85 0 1
// 2:   Keywords { "FOG_EXP" "EFFECT_HUE_VARIATION" }
// 4:   Keywords { "FOG_EXP2" "EFFECT_HUE_VARIATION" }
// 1:   Keywords { "FOG_LINEAR" "EFFECT_HUE_VARIATION" }
//      undeciphered2: 1 0 7 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 160
//      Float 112 [_WindQuality]
//      Float 116 [_WindEnabled]
//      Vector 128 [_HueVariation]
//      Vector 144 [_Color]
//      ConstBuffer "UnityLighting" 720
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 224 [unity_LightPosition0]
//      Vector 240 [unity_LightPosition1]
//      Vector 256 [unity_LightPosition2]
//      Vector 272 [unity_LightPosition3]
//      Vector 288 [unity_LightPosition4]
//      Vector 304 [unity_LightPosition5]
//      Vector 320 [unity_LightPosition6]
//      Vector 336 [unity_LightPosition7]
//      Vector 352 [unity_LightAtten0]
//      Vector 368 [unity_LightAtten1]
//      Vector 384 [unity_LightAtten2]
//      Vector 400 [unity_LightAtten3]
//      Vector 416 [unity_LightAtten4]
//      Vector 432 [unity_LightAtten5]
//      Vector 448 [unity_LightAtten6]
//      Vector 464 [unity_LightAtten7]
//      Vector 480 [unity_SpotDirection0]
//      Vector 496 [unity_SpotDirection1]
//      Vector 512 [unity_SpotDirection2]
//      Vector 528 [unity_SpotDirection3]
//      Vector 544 [unity_SpotDirection4]
//      Vector 560 [unity_SpotDirection5]
//      Vector 576 [unity_SpotDirection6]
//      Vector 592 [unity_SpotDirection7]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 128 [glstate_matrix_invtrans_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      ConstBuffer "UnityPerFrame" 352
//      Vector 0 [glstate_lightmodel_ambient]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 96 [_ST_WindBranchAdherences]
//      ConstBuffer "UnityBillboardPerCamera" 48
//      Vector 0 [unity_BillboardNormal] 3
//      Vector 16 [unity_BillboardTangent] 3
//      Vector 32 [unity_BillboardCameraParams]
//      ConstBuffer "UnityBillboardPerBatch" 288
//      Vector 0 [unity_BillboardInfo]
//      Vector 16 [unity_BillboardSize]
//      Vector 32 [unity_BillboardImageTexCoords0]
//      Vector 48 [unity_BillboardImageTexCoords1]
//      Vector 64 [unity_BillboardImageTexCoords2]
//      Vector 80 [unity_BillboardImageTexCoords3]
//      Vector 96 [unity_BillboardImageTexCoords4]
//      Vector 112 [unity_BillboardImageTexCoords5]
//      Vector 128 [unity_BillboardImageTexCoords6]
//      Vector 144 [unity_BillboardImageTexCoords7]
//      Vector 160 [unity_BillboardImageTexCoords8]
//      Vector 176 [unity_BillboardImageTexCoords9]
//      Vector 192 [unity_BillboardImageTexCoords10]
//      Vector 208 [unity_BillboardImageTexCoords11]
//      Vector 224 [unity_BillboardImageTexCoords12]
//      Vector 240 [unity_BillboardImageTexCoords13]
//      Vector 256 [unity_BillboardImageTexCoords14]
//      Vector 272 [unity_BillboardImageTexCoords15]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "SpeedTreeWind" 4
//      BindCB "UnityBillboardPerCamera" 5
//      BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:08:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float       
// TANGENT                  0   xyzw        4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[35], dynamicIndexed
dcl_constantbuffer cb2[16], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, cb2[15].xyzx
add r0.w, v1.x, l(-0.500000)
mul r0.w, r0.w, cb6[1].x
mul r0.w, r0.w, v2.x
mul r1.xyz, r0.wwww, cb5[1].xyzx
mad r0.w, v1.y, cb6[1].y, cb6[1].z
mad r1.w, r0.w, v2.y, r1.y
mul r0.w, cb0[7].y, cb0[7].x
lt r0.w, l(0.000000), r0.w
dp3 r1.y, r1.xzwx, r1.xzwx
sqrt r1.y, r1.y
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[1].z
mad r2.x, -r2.x, l(0.250000), r1.w
max r2.x, r2.x, l(0.000000)
mul r2.x, r2.x, cb4[1].z
ne r2.y, r2.x, l(0.000000)
log r2.z, r2.x
mul r2.z, r2.z, cb4[1].w
exp r2.z, r2.z
movc r2.x, r2.y, r2.z, r2.x
add r3.x, r0.x, v2.w
mad r3.y, v2.w, l(0.800000), r0.y
add r2.yz, r3.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
frc r2.yz, r2.yyzy
mad r2.yz, r2.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r3.xy, |r2.yzyy|, |r2.yzyy|
mad r2.yz, -|r2.yyzy|, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
mad r2.yz, r3.xxyx, r2.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
add r2.yz, r2.yyzy, r2.yyzy
mad r2.y, r2.z, r2.z, r2.y
div r2.z, cb4[6].x, cb4[1].z
mad r2.y, cb4[1].y, r2.y, r2.z
mul r2.x, r2.x, r2.y
mad r2.xz, cb4[0].xxzx, r2.xxxx, r1.xxzx
mov r2.y, r1.w
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
movc r1.xyz, r0.wwww, r2.xyzx, r1.xwzx
add r1.xyz, r1.xyzx, v0.xyzx
add r0.w, v2.z, cb5[2].w
mad r0.w, r0.w, cb6[0].y, l(0.500000)
round_ni r0.w, r0.w
div r0.w, r0.w, cb6[0].x
ge r1.w, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r1.w, r0.w, -r0.w
mul r0.w, r0.w, cb6[0].x
ftou r0.w, r0.w
lt r1.w, cb6[r0.w + 2].w, l(0.000000)
mad r2.xy, -cb6[r0.w + 2].zwzz, v1.yxyy, cb6[r0.w + 2].xyxx
mad r2.zw, cb6[r0.w + 2].zzzw, v1.xxxy, cb6[r0.w + 2].xxxy
movc o1.yz, r1.wwww, r2.xxyx, r2.zzwz
add r0.x, r0.y, r0.x
add r0.x, r0.z, r0.x
frc r0.x, r0.x
mul_sat o1.w, r0.x, cb0[8].w
mul r0.xyz, r1.yyyy, cb2[5].xyzx
mad r0.xyz, cb2[4].xyzx, r1.xxxx, r0.xyzx
mad r0.xyz, cb2[6].xyzx, r1.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb2[7].xyzx
mul r2.xyz, cb2[9].xyzx, cb5[0].yyyy
mad r2.xyz, cb2[8].xyzx, cb5[0].xxxx, r2.xyzx
mad r2.xyz, cb2[10].xyzx, cb5[0].zzzz, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, cb3[0].xyzx, cb3[0].xyzx
mov r4.xyz, r3.xyzx
mov r0.w, l(0)
loop 
  ige r1.w, r0.w, l(4)
  breakc_nz r1.w
  mad r5.xyz, -r0.xyzx, cb1[r0.w + 14].wwww, cb1[r0.w + 14].xyzx
  dp3 r1.w, r5.xyzx, r5.xyzx
  rsq r2.w, r1.w
  mul r5.xyz, r2.wwww, r5.xyzx
  mad r1.w, r1.w, cb1[r0.w + 22].z, l(1.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  dp3 r2.w, r5.xyzx, cb1[r0.w + 30].xyzx
  max r2.w, r2.w, l(0.000000)
  add r2.w, r2.w, -cb1[r0.w + 22].x
  mul_sat r2.w, r2.w, cb1[r0.w + 22].y
  mul r1.w, r1.w, r2.w
  dp3 r2.w, r2.xyzx, r5.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r1.w, r1.w, r2.w
  mad r4.xyz, cb1[r0.w + 6].xyzx, r1.wwww, r4.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mul o2.xyz, r4.xyzx, cb0[9].xyzx
mul r0.xyzw, r1.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, r1.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1dadc8ee4f0a97c6-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mov o1.x, r0.z
mov o2.w, cb0[9].w
ret 
// Approximately 0 instruction slots used