// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a3d1e0c7c2f0656c-ps.txt
// 3DMigoto: a3d1e0c7c2f0656c |    Unity headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader
//    Shader "Dreamfall/FX/Fresnel Reflective Additive" {
//      Properties {
//       _Col ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _ReflectColor ("Reflection Color", Color) = (1.000000,1.000000,1.000000,0.500000)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.010000,6.000000)) = 1.000000
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RefMult ("Reflect Amount", Float) = 1.000000
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          Blend One One
//          GpuProgramID 13951
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 83
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 74 7 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 5 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 64 [unity_Lightmap_HDR]
//   Vector 128 [_Col]
//   Vector 144 [_ReflectColor]
//   Float 160 [_Fresnel]
//   Float 164 [_RefMult]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_Cube] CUBE 3
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:39:49 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a3d1e0c7c2f0656c-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

max r0.x, cb0[10].x, l(0.100000)
min r0.x, r0.x, l(32.000000)
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r0.yzw, -r1.xxyz, r8.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mul r1.xyz, r0.zzzz, v3.xyzx
mad r1.xyz, v2.xyzx, r0.yyyy, r1.xyzx
mad r1.xyz, v4.xyzx, r0.wwww, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t1.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
dp3 r1.x, r1.xyzx, r2.xyzx
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
dp3 r1.x, v2.xyzx, r2.xyzx
dp3 r1.y, v3.xyzx, r2.xyzx
dp3 r1.z, v4.xyzx, r2.xyzx
dp3 r1.w, -r0.yzwy, r1.xyzx
add r1.w, r1.w, r1.w
mad r0.yzw, r1.xxyz, -r1.wwww, -r0.yyzw
sample r2.xyzw, r0.yzwy, t2.xyzw, s3
mul r0.xyz, r0.xxxx, r2.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.w, r2.w, cb0[10].y
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[9].xyzx
mad r0.xyz, r2.xyzx, cb0[8].xyzx, r0.xyzx
add r2.xy, v5.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r3.xyzw, r2.xyxx, t3.xyzw, s0
sample r2.xyzw, r2.xyxx, t4.xyzw, s0
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
log r0.w, r3.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
mul r3.xyz, r3.xyzx, r0.wwww
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
max r0.w, r0.w, l(0.001000)
mul r4.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r0.xyzx, r4.xyzx
div r2.xyz, r2.xyzx, r0.wwww
add r0.w, -r0.w, l(1.000000)
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r1.xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
mul r2.xyz, r0.wwww, r4.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
sample r4.xyzw, v5.xyxx, t3.xyzw, s0
log r0.w, r4.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
mul r4.xyz, r4.xyzx, r0.wwww
sample r5.xyzw, v5.xyxx, t4.xyzw, s0
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
sqrt r0.w, r0.w
max r0.w, r0.w, l(0.001000)
mul r6.xyz, r0.wwww, r4.xyzx
mul r6.xyz, r0.xyzx, r6.xyzx
div r5.xyz, r5.xyzx, r0.wwww
add r0.w, -r0.w, l(1.000000)
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r1.xyzx, r5.xyzx
max r0.w, r0.w, l(0.000000)
mad r1.xyz, r6.xyzx, r0.wwww, r2.xyzx
mad r2.xyz, r4.xyzx, r0.wwww, r3.xyzx
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mad_sat r0.w, v1.z, cb2[1].z, cb2[1].w
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used