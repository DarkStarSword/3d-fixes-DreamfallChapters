// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed dd1b34a265386c0f-vs.txt
// 3DMigoto: dd1b34a265386c0f | Matched 12 variants of 1 shaders: Nature/SpeedTree
//
//         Unity headers extracted from SpeedTree.shader
//         Shader "Nature/SpeedTree" {
//           Properties {
//            _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//            _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//            _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//            _DetailTex ("Detail", 2D) = "black" { }
//            _BumpMap ("Normal Map", 2D) = "bump" { }
//            _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//           [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//           [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//           }
//           CustomEditor "SpeedTreeMaterialInspector"
//           Fallback "Transparent/Cutout/VertexLit"
//           SubShader 1/2 {
//             LOD 400
//             Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//             Pass 2/7 {
//               Name "FORWARD"
//               Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//               ZWrite Off
//               Cull [_Cull]
//               Blend One One
//               GpuProgramID 87421
//               Program "vp" {
//                 SubProgram "d3d11 " {
// 001:              GpuProgramIndex 3715
// 002:              GpuProgramIndex 3719
// 004:              GpuProgramIndex 3721
// 008:              GpuProgramIndex 3723
// 010:              GpuProgramIndex 3725
// 020:              GpuProgramIndex 3729
// 040:              GpuProgramIndex 3731
// 080:              GpuProgramIndex 3733
// 100:              GpuProgramIndex 3735
// 200:              GpuProgramIndex 3739
// 400:              GpuProgramIndex 3741
// 800:              GpuProgramIndex 3743
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//        API d3d11
//        Shader model vs_4_0
//        undeciphered1: 201510240 170 0 4
// 080:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 800:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 008:   Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 010:   Keywords { "POINT" "FOG_EXP" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 100:   Keywords { "POINT" "FOG_EXP2" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 001:   Keywords { "POINT" "FOG_LINEAR" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 040:   Keywords { "POINT_COOKIE" "FOG_EXP" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 400:   Keywords { "POINT_COOKIE" "FOG_EXP2" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 004:   Keywords { "POINT_COOKIE" "FOG_LINEAR" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 020:   Keywords { "SPOT" "FOG_EXP" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 200:   Keywords { "SPOT" "FOG_EXP2" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
// 002:   Keywords { "SPOT" "FOG_LINEAR" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" "GEOM_TYPE_BRANCH" }
//        undeciphered2: 1 0 4 0 0 0
//        undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8
//        ConstBuffer "$Globals" 240
//        Float 192 [_WindQuality]
//        Float 196 [_WindEnabled]
//        Vector 208 [_HueVariation]
//        Vector 224 [_Color]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 80 [_ProjectionParams]
//        Vector 96 [_ScreenParams]
//        ConstBuffer "UnityPerDraw" 352
//        Vector 336 [unity_WorldTransformParams]
//        Matrix 0 [glstate_matrix_mvp]
//        Matrix 192 [unity_ObjectToWorld]
//        Matrix 256 [unity_WorldToObject]
//        ConstBuffer "SpeedTreeWind" 256
//        Vector 0 [_ST_WindVector]
//        Vector 16 [_ST_WindGlobal]
//        Vector 32 [_ST_WindBranch]
//        Vector 48 [_ST_WindBranchTwitch]
//        Vector 64 [_ST_WindBranchWhip]
//        Vector 80 [_ST_WindBranchAnchor]
//        Vector 96 [_ST_WindBranchAdherences]
//        Vector 112 [_ST_WindTurbulences]
//        Vector 240 [_ST_WindAnimation]
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityPerDraw" 2
//        BindCB "SpeedTreeWind" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:59:38 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 8      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v7.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyz
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul o5.xyz, v7.xxxx, cb0[14].xyzx
add r0.x, cb2[15].y, cb2[15].x
add r0.y, r0.x, cb2[15].z
add r0.z, v0.x, v2.y
add r0.z, r0.z, v2.x
frc r0.yz, r0.yyzy
mad r0.y, r0.z, l(0.500000), r0.y
add r0.y, r0.y, l(-0.300000)
mul_sat o6.z, r0.y, cb0[13].w
mul r0.y, cb0[12].y, cb0[12].x
ge r0.z, l(0.000000), r0.y
mul r1.xyz, cb2[17].xyzx, cb3[0].yyyy
mad r1.xyz, cb2[16].xyzx, cb3[0].xxxx, r1.xyzx
mad r1.xyz, cb2[18].xyzx, cb3[0].zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xy, r0.wwww, r1.xzxx
movc r0.zw, r0.zzzz, l(0,0,0,0), r1.xxxy
ge r1.x, r0.y, l(3.000000)
if_nz r1.x
  eq r1.x, r0.y, l(5.000000)
  if_nz r1.x
    mul r1.xyz, cb2[17].xyzx, cb3[5].yyyy
    mad r1.xyz, cb2[16].xyzx, cb3[5].xxxx, r1.xyzx
    mad r1.xyz, cb2[18].xyzx, cb3[5].zzzz, r1.xyzx
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r1.xyz, r1.wwww, r1.xyzx
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r1.w, r0.x, cb3[2].x
    add r3.x, r1.w, v3.w
    mad r3.y, r1.w, cb3[3].y, v3.w
    mul r2.w, r3.x, cb3[3].y
    mul r3.z, r2.w, l(0.500000)
    add r3.w, r3.x, -v3.z
    add r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r3.xyzw, r3.xyzw
    mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r4.xyzw, |r3.xyzw|, |r3.xyzw|
    mad r3.xyzw, -|r3.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r3.xyzw, r4.xyzw, r3.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r3.xyzw, r3.xyzw, r3.xyzw
    mul r4.w, r3.z, r3.y
    lt r2.w, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r2.wwww, r4.xyxx, r4.zwzz
    mad r2.w, -r3.y, r3.z, r4.x
    mad r2.w, r4.y, r2.w, r4.w
    add r3.y, -r2.w, r4.x
    mad r2.w, r4.y, r3.y, r2.w
    mul r2.w, r2.w, cb3[3].x
    add r3.y, -cb3[0].w, l(1.000000)
    add r3.z, -cb3[3].x, l(1.000000)
    mul r3.x, r3.z, r3.x
    mad r2.w, r2.w, r3.y, r3.x
    mad r3.x, r3.w, cb3[4].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mul r2.xyz, r2.wwww, r2.xyzx
    mad r2.xyz, r2.xyzx, cb3[2].yyyy, v0.xyzx
    mad r3.x, r1.w, l(0.100000), v3.w
    mul r1.w, cb3[7].x, cb3[15].x
    mad r3.y, r1.w, l(0.100000), v3.w
    add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r3.xy, r3.xyxx
    mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r4.xy, |r3.xyxx|, |r3.xyxx|
    mad r3.xy, -|r3.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r3.xy, r4.xyxx, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r3.xy, r3.xyxx, r3.xyxx
    mul r3.xy, r3.xyxx, r3.xyxx
    mul r1.w, r3.x, r3.y
    mad r1.w, -r1.w, cb3[7].x, l(1.000000)
    mul r2.w, r3.w, cb3[0].w
    mad r1.w, r2.w, cb3[4].x, r1.w
    mad r1.xyz, r1.xyzx, cb3[5].wwww, -r2.xyzx
    mul r1.xyz, r1.xyzx, cb3[6].yyyy
    mul r1.xyz, r1.wwww, r1.xyzx
    mad r1.xyz, r1.xyzx, v3.zzzz, r2.xyzx
  else 
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.x, r0.x, cb3[2].x
    add r3.x, r0.x, v3.w
    mad r3.y, r0.x, cb3[3].y, v3.w
    mul r0.x, r3.x, cb3[3].y
    mul r3.z, r0.x, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.x, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.xxxx, r4.xyxx, r4.zwzz
    mad r0.x, -r3.y, r3.z, r4.x
    mad r0.x, r4.y, r0.x, r4.w
    add r1.w, -r0.x, r4.x
    mad r0.x, r4.y, r1.w, r0.x
    mul r0.x, r0.x, cb3[3].x
    add r1.w, -cb3[0].w, l(1.000000)
    add r2.w, -cb3[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.x, r0.x, r1.w, r2.w
    mul r2.xyz, r0.xxxx, r2.xyzx
    mad r1.xyz, r2.xyzx, cb3[2].yyyy, v0.xyzx
  endif 
else 
  mov r1.xyz, v0.xyzx
endif 
lt r0.x, l(0.000000), r0.y
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r1.w, -r1.w, l(0.250000), r1.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb3[1].z
ne r2.x, r1.w, l(0.000000)
log r2.y, r1.w
mul r2.y, r2.y, cb3[1].w
exp r2.y, r2.y
movc r1.w, r2.x, r2.y, r1.w
add r2.x, cb2[15].x, cb3[1].x
mad r2.y, cb3[1].x, l(0.800000), cb2[15].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb3[6].x, cb3[1].z
mad r2.x, cb3[1].y, r2.x, r2.y
mul r1.w, r1.w, r2.x
mad r2.xz, r0.zzwz, r1.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r0.yzw, r0.yyyy, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r1.xyz, r0.yyyy, cb2[1].xywx
mad r1.xyz, cb2[0].xywx, r0.xxxx, r1.xyzx
mad r1.xyz, cb2[2].xywx, r0.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[3].xywx
mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r1.y, cb1[5].x
mul r2.w, r0.w, l(0.500000)
add r1.xy, r2.zzzz, r2.xwxx
mul r2.xy, cb1[6].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mul o7.xy, r1.xyxx, r2.xyxx
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb2[3].xyzw
mul r1.xyw, r0.yyyy, cb2[13].xyxz
mad r0.xyw, cb2[12].xyxz, r0.xxxx, r1.xyxw
mad r0.xyz, cb2[14].xyzx, r0.zzzz, r0.xywx
mad o4.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
mov r0.y, cb2[16].x
mov r0.z, cb2[17].x
mov r0.x, cb2[18].x
mov r3.y, cb2[16].y
mov r3.z, cb2[17].y
mov r3.x, cb2[18].y
mul r1.xyw, r3.xyxz, v2.yyyy
mad r0.xyz, r0.xyzx, v2.xxxx, r1.xywx
mov r3.y, cb2[16].z
mov r3.z, cb2[17].z
mov r3.x, cb2[18].z
mad r0.xyz, r3.xyzx, v2.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyw, v1.yyyy, cb2[13].yzyx
mad r1.xyw, cb2[12].yzyx, v1.xxxx, r1.xyxw
mad r1.xyw, cb2[14].yzyx, v1.zzzz, r1.xyxw
dp3 r0.w, r1.xywx, r1.xywx
rsq r0.w, r0.w
mul r1.xyw, r0.wwww, r1.xyxw
mul r0.w, v1.w, cb2[21].w
mul r3.xyz, r0.xyzx, r1.xywx
mad r3.xyz, r0.zxyz, r1.ywxy, -r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed dd1b34a265386c0f-vs.txt
ne r5.w, r2.w, l(1.0)
if_nz r5.w
  add r5.w, r2.w, -r5.y
  mad r2.x, r5.w, r5.x, r2.x
endif

mov o1.x, r1.w
mov o1.y, r3.x
mov o1.z, r0.y
mov o1.w, r2.z
mov o5.w, cb0[14].w
mov o2.x, r1.x
mov o2.y, r3.y
mov o2.z, r0.z
mov o3.x, r1.y
mov o3.y, r3.z
mov o3.z, r0.x
mov o6.xy, v3.xyxx
mov o7.z, r1.z
ret 
// Approximately 0 instruction slots used