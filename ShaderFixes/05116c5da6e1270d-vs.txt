// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 05116c5da6e1270d-vs.txt
// 3DMigoto: 05116c5da6e1270d | Matched 3 variants of 1 shaders: Standard (Specular setup)
//
//       Unity headers extracted from StandardSpecular.shader
//       Shader "Standard (Specular setup)" {
//         Properties {
//          _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Albedo", 2D) = "white" { }
//          _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//          _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
//          _GlossMapScale ("Smoothness Factor", Range(0.000000,1.000000)) = 1.000000
//         [Enum(Specular Alpha,0,Albedo Alpha,1)]  _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0.000000
//          _SpecColor ("Specular", Color) = (0.200000,0.200000,0.200000,1.000000)
//          _SpecGlossMap ("Specular", 2D) = "white" { }
//         [ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
//         [ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
//          _BumpScale ("Scale", Float) = 1.000000
//          _BumpMap ("Normal Map", 2D) = "bump" { }
//          _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
//          _ParallaxMap ("Height Map", 2D) = "black" { }
//          _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
//          _OcclusionMap ("Occlusion", 2D) = "white" { }
//          _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//          _EmissionMap ("Emission", 2D) = "white" { }
//          _DetailMask ("Detail Mask", 2D) = "white" { }
//          _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//          _DetailNormalMapScale ("Scale", Float) = 1.000000
//          _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//         [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
//         [HideInInspector]  _Mode ("__mode", Float) = 0.000000
//         [HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
//         [HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
//         [HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
//         }
//         CustomEditor "StandardShaderGUI"
//         Fallback "VertexLit"
//         SubShader 1/2 {
//           LOD 300
//           Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//           Pass 3/4 {
//             Name "SHADOWCASTER"
//             Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
//             GpuProgramID 195458
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 4805
// 2:              GpuProgramIndex 4809
// 4:              GpuProgramIndex 4813
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from StandardSpecular.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 42 0 0
// 2:   Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
// 4:   Keywords { "SHADOWS_DEPTH" "_ALPHAPREMULTIPLY_ON" }
// 1:   Keywords { "SHADOWS_DEPTH" "_ALPHATEST_ON" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 11 3 0 0 1 2 3 4
//      ConstBuffer "$Globals" 144
//      Vector 128 [_MainTex_ST]
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityShadows" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:01:47 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output_siv o1.xyzw, position
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mad o0.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
mul r0.x, v1.x, cb3[16].x
mul r0.y, v1.x, cb3[17].x
mul r0.z, v1.x, cb3[18].x
mul r1.x, v1.y, cb3[16].y
mul r1.y, v1.y, cb3[17].y
mul r1.z, v1.y, cb3[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, v1.z, cb3[16].z
mul r1.y, v1.z, cb3[17].z
mul r1.z, v1.z, cb3[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, v0.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb3[15].xyzx
mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb2[5].z
mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
mul r1.xyzw, r0.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb4[20].xyzw
mul r1.xyzw, v0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb3[3].xyzw
ne r2.x, cb2[5].z, l(0.000000)
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw

// Relocated to here with asmtool.py
mov o1.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 05116c5da6e1270d-vs.txt
ne r3.w, r0.w, l(1.0)
if_nz r3.w
  add r3.w, r0.w, -r3.y
  mad r0.x, r3.w, r3.x, r0.x
endif

div_sat r1.x, cb2[5].x, r0.w
add r0.z, r0.z, r1.x

// mov o1.xyw, r0.xyxw // Relocated from here with asmtool.py

max r0.x, r0.z, l(0.000000)
add r0.x, -r0.z, r0.x
mad o1.z, cb2[5].y, r0.x, r0.z
ret 
// Approximately 0 instruction slots used