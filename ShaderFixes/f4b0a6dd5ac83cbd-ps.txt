// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f4b0a6dd5ac83cbd-ps.txt
// 3DMigoto: f4b0a6dd5ac83cbd |    Unity headers extracted from Standard_Disintegrate_VertexPosition.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Bumped Diffuse VertexPos" {
//      Properties {
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _IlumMap ("Ilum Texture", 2D) = "White" { }
//       _IlumColor ("Ilum Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _IlumStrength ("Ilum Strength", Float) = 0.000000
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0.000000,1.000000)) = 1.000000
//       _glossHigh ("Gloss High", Range(0.000000,1.000000)) = 1.000000
//       _glossLow ("Gloss Low", Range(0.000000,1.000000)) = 0.000000
//       _MetalNess ("Metalness", Range(0.000000,1.000000)) = 0.000000
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.000000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _TileFactor ("Tile Factor", Range(0.000000,4.000000)) = 1.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _UVxSpeed ("UV X speed", Float) = 1.000000
//       _PlayerPos ("Player position(Set in script)", Vector) = (0.000000,0.000000,0.000000,1.000000)
//       _curveVal ("CurveValue", Float) = 1.000000
//       _test ("squash test", Float) = 1.000000
//       _flip ("Flip", Range(-1.000000,1.000000)) = 1.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 42534
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 67
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_VertexPosition.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 230 8 6
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 8 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 64 [unity_Lightmap_HDR]
//   Float 128 [_MetalNess]
//   Float 132 [_AlphaFactor]
//   Float 136 [_glossHigh]
//   Float 140 [_glossLow]
//   Float 144 [_MetalNessAlphaFactor]
//   Vector 160 [_DissolveColor]
//   Float 176 [_DissolveEdge]
//   Float 180 [_TileFactor]
//   Vector 192 [_EdgeEmission]
//   Vector 224 [_PlayerPos] 3
//   Float 236 [_curveVal]
//   Float 240 [_test]
//   Float 244 [_flip]
//   Float 248 [_IlumStrength]
//   Vector 256 [_IlumColor]
//   Float 272 [_EmissionFloat]
//   Float 276 [_UVxSpeed]
//   Float 320 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_IlumMap] 2D 5
//   SetTexture 2 [_NoiseTex] 2D 4
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_LightmapInd] 2D -1
//   SetTexture 6 [unity_SpecCube0] CUBE 1
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:02:19 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyzw        7     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xy
dcl_output o0.xyzw
dcl_temps 23
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f4b0a6dd5ac83cbd-ps.txt
mov r20.xyzw, cb1[4].xyzw
mul r21.x, -r19.x, r19.y
mul r22.xyzw, cb10[0].xyzw, r21.xxxx
add r20.xyz, r20.xyz, -r22.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r20.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
mul r0.w, v3.w, cb0[15].x
add r3.xyz, -r0.xwzx, cb0[14].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
mul r2.w, r0.w, cb0[14].w
mad r3.y, cb1[0].x, cb0[17].y, v1.y
mad r3.z, -r0.w, cb0[14].w, l(1.000000)
sample r4.xyzw, v1.xyxx, t0.xyzw, s2
mul r5.xyzw, r4.xyzw, v5.xyzw
mul r3.z, r3.z, cb0[15].y
mul r3.w, cb0[11].x, cb0[15].y
mov r3.x, v1.x
mul r3.xy, r3.xyxx, cb0[11].yyyy
sample r6.xyzw, r3.xyxx, t2.xyzw, s4
mad r3.x, r0.w, cb0[14].w, r6.x
mul r3.x, r3.x, r3.w
lt r3.x, r3.z, r3.x
lt r2.w, l(0.000000), r2.w
and r2.w, r2.w, r3.x
if_nz r2.w
  mad r0.w, -r0.w, cb0[14].w, r6.x
  mul r3.xyz, cb0[12].xyzx, cb0[17].xxxx
  mul r6.w, r0.w, cb0[15].y
  mov r4.xyw, cb0[10].xyxz
else 
  sample r7.xyzw, v1.xyxx, t1.xyzw, s5
  mul r7.xyz, r7.xyzx, cb0[16].xyzx
  mul r3.xyz, r7.xyzx, cb0[15].zzzz
  mov r4.xyw, r5.xyxz
  mov r6.w, l(0)
endif 
sample r7.xyzw, v1.zwzz, t3.xyzw, s3
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r7.xyxx, r7.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r7.z, r0.w
add r5.xy, r5.wyww, r5.wxww
max r0.w, r5.x, cb0[9].x
min r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, cb0[8].x
mad r2.w, r4.z, v5.z, r5.y
mul r3.w, r2.w, l(0.333333343)
mad r2.w, -r2.w, l(0.333333343), cb0[8].z
mad r2.w, cb0[8].w, r2.w, r3.w
max r3.w, r5.w, cb0[8].y
mul r4.z, r2.w, r3.w
add r5.x, r6.w, -cb0[20].x
lt r5.x, r5.x, l(0.000000)
discard_nz r5.x
dp3 r5.x, v2.xyzx, r7.xyzx
dp3 r5.y, v3.xyzx, r7.xyzx
dp3 r5.z, v4.xyzx, r7.xyzx
mad r5.w, -r2.w, r3.w, l(1.000000)
dp3 r7.x, -r2.xyzx, r5.xyzx
add r7.x, r7.x, r7.x
mad r7.xyz, r5.xyzx, -r7.xxxx, -r2.xyzx
sample r8.xyzw, v7.xyxx, t4.xyzw, s0
log r7.w, r8.w
mul r7.w, r7.w, cb0[4].y
exp r7.w, r7.w
mul r7.w, r7.w, cb0[4].x
mul r8.xyz, r8.xyzx, r7.wwww
sample r9.xyzw, v7.xyxx, t5.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r7.w, r9.xyzx, r9.xyzx
sqrt r7.w, r7.w
max r7.w, r7.w, l(0.001000)
div r9.xyz, r9.xyzx, r7.wwww
dp3 r8.w, r5.xyzx, r9.xyzx
max r8.w, r8.w, l(0.000000)
add r9.w, -r7.w, l(1.000000)
mul r10.xyz, r8.xyzx, r9.wwww
mul r8.xyz, r7.wwww, r8.xyzx
add r11.xy, v7.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r12.xyzw, r11.xyxx, t4.xyzw, s0
log r7.w, r12.w
mul r7.w, r7.w, cb0[4].y
exp r7.w, r7.w
mul r7.w, r7.w, cb0[4].x
mul r12.xyz, r12.xyzx, r7.wwww
sample r11.xyzw, r11.xyxx, t5.xyzw, s0
mad r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r7.w, r11.xyzx, r11.xyzx
sqrt r7.w, r7.w
max r7.w, r7.w, l(0.001000)
div r11.xyz, r11.xyzx, r7.wwww
dp3 r9.w, r5.xyzx, r11.xyzx
max r9.w, r9.w, l(0.000000)
add r10.w, -r7.w, l(1.000000)
mul r13.xyz, r10.wwww, r12.xyzx
mul r12.xyz, r7.wwww, r12.xyzx
mul r13.xyz, r9.wwww, r13.xyzx
mad r10.xyz, r10.xyzx, r8.wwww, r13.xyzx
lt r7.w, l(0.000000), cb2[2].w
if_nz r7.w
  dp3 r7.w, r7.xyzx, r7.xyzx
  rsq r7.w, r7.w
  mul r13.xyz, r7.wwww, r7.xyzx
  add r14.xyz, -r0.xyzx, cb2[0].xyzx
  div r14.xyz, r14.xyzx, r13.xyzx
  add r15.xyz, -r0.xyzx, cb2[1].xyzx
  div r15.xyz, r15.xyzx, r13.xyzx
  lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
  movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
  min r7.w, r14.y, r14.x
  min r7.w, r14.z, r7.w
  add r14.xyz, r0.xyzx, -cb2[2].xyzx
  mad r13.xyz, r13.xyzx, r7.wwww, r14.xyzx
else 
  mov r13.xyz, r7.xyzx
endif 
log r7.w, r5.w
mul r7.w, r7.w, l(0.750000)
exp r7.w, r7.w
mad r10.w, -r7.w, l(0.700000), l(1.700000)
mul r7.w, r7.w, r10.w
mul r7.w, r7.w, l(6.000000)
sample_l r13.xyzw, r13.xyzx, t6.xyzw, s1, r7.w
log r10.w, r13.w
mul r10.w, r10.w, cb2[3].y
exp r10.w, r10.w
mul r10.w, r10.w, cb2[3].x
mul r14.xyz, r13.xyzx, r10.wwww
lt r11.w, cb2[1].w, l(0.999990)
if_nz r11.w
  lt r11.w, l(0.000000), cb2[6].w
  if_nz r11.w
    dp3 r11.w, r7.xyzx, r7.xyzx
    rsq r11.w, r11.w
    mul r15.xyz, r7.xyzx, r11.wwww
    add r16.xyz, -r0.xyzx, cb2[4].xyzx
    div r16.xyz, r16.xyzx, r15.xyzx
    add r17.xyz, -r0.xyzx, cb2[5].xyzx
    div r17.xyz, r17.xyzx, r15.xyzx
    lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r15.xyzx
    movc r16.xyz, r18.xyzx, r16.xyzx, r17.xyzx
    min r11.w, r16.y, r16.x
    min r11.w, r16.z, r11.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r7.xyz, r15.xyzx, r11.wwww, r0.xyzx
  endif 
  sample_l r7.xyzw, r7.xyzx, t7.xyzw, s1, r7.w
  log r0.x, r7.w
  mul r0.x, r0.x, cb2[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r10.wwww, r13.xyzx, -r0.xyzx
  mad r14.xyz, cb2[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
add r5.xyz, r4.xywx, -cb0[2].xyzx
mad r5.xyz, r0.wwww, r5.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r4.xyw, r0.wwww, r4.xyxw
mad r7.xyz, r1.xyzx, r1.wwww, r9.xyzx
dp3 r7.w, r7.xyzx, r7.xyzx
max r7.w, r7.w, l(0.001000)
rsq r7.w, r7.w
mul r7.xyz, r7.wwww, r7.xyzx
dp3 r7.w, r0.xyzx, r7.xyzx
max r7.w, r7.w, l(0.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3 r2.y, r9.xyzx, r7.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.z, r5.w, r5.w
mul r7.x, r2.z, l(0.797884583)
mad r7.y, -r2.z, l(0.797884583), l(1.000000)
mad r7.z, r8.w, r7.y, r7.x
mad r7.x, r2.x, r7.y, r7.x
mad r7.x, r7.z, r7.x, l(0.000010)
div r7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
add r7.y, -r5.w, l(1.000000)
mad r7.y, r7.y, l(0.968000), l(0.030000)
log r7.y, r7.y
div r7.y, l(10.000000), r7.y
mul r7.z, r7.y, r7.y
mad r9.xy, r7.yyyy, r7.yyyy, l(2.000000, 1.000000, 0.000000, 0.000000)
mul r7.y, r9.x, l(0.159154937)
log r7.w, r7.w
mul r7.w, r7.w, r7.z
exp r7.w, r7.w
mul r7.y, r7.y, r7.w
add r7.w, -r8.w, l(1.000000)
mul r9.x, r7.w, r7.w
mul r9.x, r9.x, r9.x
mul r7.w, r7.w, r9.x
add r2.x, -r2.x, l(1.000000)
mul r9.x, r2.x, r2.x
mul r9.x, r9.x, r9.x
mul r2.x, r2.x, r9.x
mul r9.x, r2.y, r2.y
dp2 r9.x, r9.xxxx, r5.wwww
add r9.x, r9.x, l(-0.500000)
mad r7.w, r9.x, r7.w, l(1.000000)
mad r9.x, r9.x, r2.x, l(1.000000)
mul r7.w, r7.w, r9.x
mul r7.x, r7.y, r7.x
mul r7.x, r7.x, l(0.785398185)
eq r7.y, cb0[3].w, l(0.000000)
max r9.x, r7.x, l(0.000100)
sqrt r9.x, r9.x
movc r7.x, r7.y, r9.x, r7.x
mul r7.xw, r8.wwww, r7.xxxw
max r7.x, r7.x, l(0.000000)
mul r5.w, r2.z, r5.w
mad r5.w, -r5.w, l(0.280000), l(1.000000)
mad r8.w, r2.z, r2.z, l(1.000000)
div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
movc r5.w, r7.y, r5.w, r8.w
dp3 r8.w, r5.xyzx, r5.xyzx
ne r8.w, r8.w, l(0.000000)
and r8.w, r8.w, l(0x3f800000)
mul r7.x, r7.x, r8.w
mad r0.w, r2.w, r3.w, -r0.w
add_sat r0.w, r0.w, l(1.000000)
mad r10.xyz, r8.xyzx, r7.wwww, r10.xyzx
mul r8.xyz, r8.xyzx, r7.xxxx
add r2.y, -r2.y, l(1.000000)
mul r2.w, r2.y, r2.y
mul r2.w, r2.w, r2.w
mul r2.y, r2.y, r2.w
add r13.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r13.xyz, r13.xyzx, r2.yyyy, r5.xyzx
mul r8.xyz, r8.xyzx, r13.xyzx
mad r8.xyz, r4.xywx, r10.xyzx, r8.xyzx
mul r10.xyz, r14.xyzx, r5.wwww
add r13.xyz, -r5.xyzx, r0.wwww
mad r2.xyw, r2.xxxx, r13.xyxz, r5.xyxz
mad r2.xyw, r10.xyxz, r2.xyxw, r8.xyxz
mad r1.xyz, r1.xyzx, r1.wwww, r11.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, r11.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r0.y, r0.y
mad r0.z, r0.z, r4.z, r2.z
log r0.x, r0.x
mul r0.x, r0.x, r7.z
exp r0.x, r0.x
mul r0.x, r0.x, r9.y
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(8.000000), l(0.000100)
div r0.x, r0.x, r0.y
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
movc r0.x, r7.y, r0.y, r0.x
mad r0.xyz, r0.xxxx, r5.xyzx, r4.xywx
mul r0.xyz, r12.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r9.wwww, r2.xywx
add r6.xyz, r3.xyzx, r0.xyzx
mov o0.xyzw, r6.xyzw
ret 
// Approximately 0 instruction slots used