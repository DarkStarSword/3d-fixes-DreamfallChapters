// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed dc1b7e1649eca397-vs.txt
// 3DMigoto: dc1b7e1649eca397 | Matched 12 variants of 1 shaders: Nature/SpeedTree
//
//         Unity headers extracted from SpeedTree.shader
//         Shader "Nature/SpeedTree" {
//           Properties {
//            _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//            _HueVariation ("Hue Variation", Color) = (1.000000,0.500000,0.000000,0.100000)
//            _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//            _DetailTex ("Detail", 2D) = "black" { }
//            _BumpMap ("Normal Map", 2D) = "bump" { }
//            _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.333000
//           [MaterialEnum(Off,0,Front,1,Back,2)]  _Cull ("Cull", Float) = 2.000000
//           [MaterialEnum(None,0,Fastest,1,Fast,2,Better,3,Best,4,Palm,5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//           }
//           CustomEditor "SpeedTreeMaterialInspector"
//           Fallback "Transparent/Cutout/VertexLit"
//           SubShader 1/2 {
//             LOD 400
//             Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//             Pass 2/7 {
//               Name "FORWARD"
//               Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="Opaque" }
//               ZWrite Off
//               Cull [_Cull]
//               Blend One One
//               GpuProgramID 87421
//               Program "vp" {
//                 SubProgram "d3d11 " {
// 001:              GpuProgramIndex 3475
// 002:              GpuProgramIndex 3479
// 004:              GpuProgramIndex 3481
// 008:              GpuProgramIndex 3483
// 010:              GpuProgramIndex 3485
// 020:              GpuProgramIndex 3489
// 040:              GpuProgramIndex 3491
// 080:              GpuProgramIndex 3493
// 100:              GpuProgramIndex 3495
// 200:              GpuProgramIndex 3499
// 400:              GpuProgramIndex 3501
// 800:              GpuProgramIndex 3503
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from SpeedTree.shader.decompressed:
//        API d3d11
//        Shader model vs_4_0
//        undeciphered1: 201510240 281 0 7
// 080:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 800:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 008:   Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 010:   Keywords { "POINT" "FOG_EXP" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 100:   Keywords { "POINT" "FOG_EXP2" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 001:   Keywords { "POINT" "FOG_LINEAR" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 040:   Keywords { "POINT_COOKIE" "FOG_EXP" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 400:   Keywords { "POINT_COOKIE" "FOG_EXP2" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 004:   Keywords { "POINT_COOKIE" "FOG_LINEAR" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 020:   Keywords { "SPOT" "FOG_EXP" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 200:   Keywords { "SPOT" "FOG_EXP2" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
// 002:   Keywords { "SPOT" "FOG_LINEAR" "LOD_FADE_PERCENTAGE" "EFFECT_HUE_VARIATION" "GEOM_TYPE_LEAF" }
//        undeciphered2: 1 0 3 0 0 0
//        undeciphered3: 127 7 0 0 2 1 1 2 3 4 4 5 5 6 6 7
//        ConstBuffer "$Globals" 240
//        Float 192 [_WindQuality]
//        Float 196 [_WindEnabled]
//        Vector 208 [_HueVariation]
//        Vector 224 [_Color]
//        ConstBuffer "UnityPerDraw" 352
//        Vector 320 [unity_LODFade]
//        Matrix 0 [glstate_matrix_mvp]
//        Matrix 128 [glstate_matrix_invtrans_modelview0]
//        Matrix 192 [unity_ObjectToWorld]
//        Matrix 256 [unity_WorldToObject]
//        ConstBuffer "SpeedTreeWind" 256
//        Vector 0 [_ST_WindVector]
//        Vector 16 [_ST_WindGlobal]
//        Vector 32 [_ST_WindBranch]
//        Vector 48 [_ST_WindBranchTwitch]
//        Vector 64 [_ST_WindBranchWhip]
//        Vector 80 [_ST_WindBranchAnchor]
//        Vector 96 [_ST_WindBranchAdherences]
//        Vector 112 [_ST_WindTurbulences]
//        Vector 128 [_ST_WindLeaf1Ripple]
//        Vector 144 [_ST_WindLeaf1Tumble]
//        Vector 160 [_ST_WindLeaf1Twitch]
//        Vector 176 [_ST_WindLeaf2Ripple]
//        Vector 192 [_ST_WindLeaf2Tumble]
//        Vector 208 [_ST_WindLeaf2Twitch]
//        Vector 240 [_ST_WindAnimation]
//        BindCB "$Globals" 0
//        BindCB "UnityPerDraw" 1
//        BindCB "SpeedTreeWind" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:59:20 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xy          6     NONE   float   xy  
// COLOR                    0   xyzw        7     NONE   float   x  w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[21], immediateIndexed
dcl_constantbuffer cb2[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xy
dcl_input v7.xw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_temps 14

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw

mul o3.xyz, v7.xxxx, cb0[14].xyzx
add r0.x, cb1[15].y, cb1[15].x
add r0.y, r0.x, cb1[15].z
add r0.z, v0.x, v2.y
add r0.z, r0.z, v2.x
frc r0.yz, r0.yyzy
mad r0.y, r0.z, l(0.500000), r0.y
add r0.y, r0.y, l(-0.300000)
mul_sat o4.z, r0.y, cb0[13].w
mul r0.y, cb0[12].y, cb0[12].x
ge r0.z, l(0.000000), r0.y
mul r1.xyz, cb1[17].xyzx, cb2[0].yyyy
mad r1.xyz, cb1[16].xyzx, cb2[0].xxxx, r1.xyzx
mad r1.xyz, cb1[18].xyzx, cb2[0].zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
movc r1.xyz, r0.zzzz, l(0,0,0,0), r1.xyzx
add r2.xyz, v0.xyzx, -v4.xyzx
eq r0.z, v7.w, l(0.000000)
add r0.w, v4.w, l(-1.000000)
mad r0.w, cb1[20].x, r0.w, l(1.000000)
mul r3.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
dp3 r4.x, r3.xyzx, cb1[8].xyzx
dp3 r4.y, r3.xyzx, cb1[9].xyzx
dp3 r4.z, r3.xyzx, cb1[10].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mov r4.x, v4.w
mov r4.yz, v6.xxyx
add r4.xyz, -r2.xyzx, r4.xyzx
mad r2.xyz, cb1[20].xxxx, r4.xyzx, r2.xyzx
movc r2.xyz, r0.zzzz, r3.xyzx, r2.xyzx
lt r0.zw, l(0.000000, 0.000000, 1.000000, 0.000000), r0.yyyy
lt r1.w, r0.y, l(5.000000)
and r0.z, r0.z, r1.w
if_nz r0.z
  add r0.z, v4.y, v4.x
  eq r1.w, r0.y, l(4.000000)
  lt r2.w, l(0.000000), v5.w
  movc r3.xy, r2.wwww, cb2[11].xyxx, cb2[8].xyxx
  add r0.z, r0.z, r3.x
  add r0.z, r0.z, l(0.500000)
  frc r0.z, r0.z
  mad r0.z, r0.z, l(2.000000), l(-1.000000)
  mul r3.x, |r0.z|, |r0.z|
  mad r0.z, -|r0.z|, l(2.000000), l(3.000000)
  mad r0.z, r3.x, r0.z, l(-0.500000)
  dp2 r0.z, r0.zzzz, r3.yyyy
  mul r3.xyz, v5.zzzz, l(0.062500, 1.000000, 16.000000, 0.000000)
  frc r3.xyz, r3.xyzx
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r3.xyz, r0.zzzz, r3.xyzx
  mad r2.xyz, r3.xyzx, v5.xxxx, r2.xyzx
  if_nz r1.w
    mul r3.xyzw, v5.yyyy, l(0.062500, 1.000000, 16.000000, 30.299999)
    frc r3.xyzw, r3.xyzw
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    movc r4.xyzw, r2.wwww, cb2[12].xyzw, cb2[9].xyzw
    movc r5.xyz, r2.wwww, cb2[13].xyzx, cb2[10].xyzx
    mul r0.z, r3.w, l(3.000000)
    mad r6.y, r3.w, l(3.000000), r4.x
    mad r6.x, r4.x, l(0.750000), -r0.z
    add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r6.xy, r6.xyxx
    mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r6.zw, |r6.xxxy|, |r6.xxxy|
    mad r6.xy, -|r6.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r6.xy, r6.zwzz, r6.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r6.xy, r6.xyxx, r6.xyxx
    dp3 r0.z, r2.xyzx, r2.xyzx
    sqrt r0.z, r0.z
    mad r1.w, r6.x, r6.x, r6.y
    mul r2.w, r4.z, v5.x
    mul r1.w, r1.w, r2.w
    sincos r4.x, r7.x, r1.w
    add r1.w, -r7.x, l(1.000000)
    mul r8.xyzw, r3.xxxy, r1.wwww
    mul r7.yzw, r3.zzxy, r4.xxxx
    mad r9.xy, r8.zyzz, r3.zyzz, r7.wyww
    mad r10.xy, r8.xwxx, r3.xyxx, r7.xxxx
    mad r9.z, r8.w, r3.z, -r7.z
    mad r11.xy, r8.yzyy, r3.yzyy, -r7.ywyy
    mad r11.z, r8.w, r3.z, r7.z
    mul r2.w, r3.z, r3.z
    mad r11.w, r2.w, r1.w, r7.x
    mul r7.xyz, r1.yzxy, r3.zxyz
    mad r7.xyz, r3.yzxy, r1.zxyz, -r7.xyzx
    dp3 r1.y, r1.xyzx, r3.xyzx
    max r1.y, r1.y, l(-1.000000)
    min r1.y, r1.y, l(1.000000)
    add r7.w, r1.y, r7.y
    dp3 r1.w, r7.xzwx, r7.xzwx
    rsq r1.w, r1.w
    mul r3.xyz, r1.wwww, r7.zxwz
    add r1.w, -|r1.y|, l(1.000000)
    sqrt r1.w, r1.w
    mad r2.w, |r1.y|, l(-0.0187292993), l(0.074261)
    mad r2.w, r2.w, |r1.y|, l(-0.212114394)
    mad r2.w, r2.w, |r1.y|, l(1.57072878)
    mul r4.x, r1.w, r2.w
    mad r4.x, r4.x, l(-2.000000), l(3.14159274)
    lt r1.y, r1.y, -r1.y
    and r1.y, r1.y, r4.x
    mad r1.y, r2.w, r1.w, r1.y
    mad r1.w, -r6.y, r6.y, r6.x
    mad r6.x, r3.w, l(3.000000), r5.z
    mul r6.y, r6.x, l(0.870000)
    add r4.xz, r6.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
    frc r4.xz, r4.xxzx
    mad r4.xz, r4.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
    mul r5.zw, |r4.xxxz|, |r4.xxxz|
    mad r4.xz, -|r4.xxzx|, l(2.000000, 0.000000, 2.000000, 0.000000), l(3.000000, 0.000000, 3.000000, 0.000000)
    mad r4.xz, r5.zzwz, r4.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
    add r4.xz, r4.xxzx, r4.xxzx
    mul r2.w, r4.z, r4.z
    mad r2.w, r2.w, r4.x, l(1.000000)
    mul_sat r2.w, r2.w, l(0.500000)
    log r2.w, r2.w
    mul r2.w, r2.w, r5.y
    exp r2.w, r2.w
    mul r1.w, r4.y, r1.w
    mad r1.y, r1.y, r4.w, r1.w
    mad r1.y, r5.x, r2.w, r1.y
    mul r1.y, r1.y, v5.x
    sincos r4.x, r5.x, r1.y
    add r1.y, -r5.x, l(1.000000)
    mul r6.xyzw, r3.yyyz, r1.yyyy
    mul r4.xyz, r3.xyzx, r4.xxxx
    mad r7.xy, r6.zyzz, r3.xzxx, r4.zxzz
    mad r8.xy, r6.xwxx, r3.yzyy, r5.xxxx
    mad r7.z, r6.w, r3.x, -r4.y
    mad r12.xy, r6.yzyy, r3.zxzz, -r4.xzxx
    mad r12.z, r6.w, r3.x, r4.y
    mul r1.w, r3.x, r3.x
    mad r7.w, r1.w, r1.y, r5.x
    mov r10.z, r11.x
    mov r10.w, r9.x
    mov r8.z, r7.y
    mov r8.w, r12.y
    dp3 r3.x, r10.xzwx, r8.xzwx
    mov r12.w, r8.y
    dp3 r3.y, r10.xwzx, r12.xzwx
    dp3 r3.z, r10.xzwx, r7.xzwx
    mov r9.w, r10.y
    dp3 r4.x, r9.ywzy, r8.xzwx
    dp3 r4.y, r9.yzwy, r12.xzwx
    dp3 r4.z, r9.ywzy, r7.xzwx
    dp3 r5.x, r11.yzwy, r8.xzwx
    dp3 r5.y, r11.ywzy, r12.xzwx
    dp3 r5.z, r11.yzwy, r7.xzwx
    dp3 r1.y, r3.xyzx, v2.xyzx
    dp3 r1.w, r4.xyzx, v2.xyzx
    dp3 r2.w, r5.xyzx, v2.xyzx
    dp3 r3.x, r3.xyzx, r2.xyzx
    dp3 r3.y, r4.xyzx, r2.xyzx
    dp3 r3.z, r5.xyzx, r2.xyzx
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r3.xyz, r3.wwww, r3.xyzx
    mul r2.xyz, r0.zzzz, r3.xyzx
  else 
    mov r1.yw, v2.xxxy
    mov r2.w, v2.z
  endif 
else 
  mov r1.yw, v2.xxxy
  mov r2.w, v2.z
endif 
add r2.xyz, r2.xyzx, v4.xyzx
ge r0.z, r0.y, l(3.000000)
if_nz r0.z
  eq r0.y, r0.y, l(5.000000)
  if_nz r0.y
    mul r3.xyz, cb1[17].xyzx, cb2[5].yyyy
    mad r3.xyz, cb1[16].xyzx, cb2[5].xxxx, r3.xyzx
    mad r3.xyz, cb1[18].xyzx, cb2[5].zzzz, r3.xyzx
    dp3 r0.y, r3.xyzx, r3.xyzx
    rsq r0.y, r0.y
    mul r3.xyz, r0.yyyy, r3.xyzx
    mul r4.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, r4.xyzx, v3.zzzz
    add r0.y, r0.x, cb2[2].x
    add r5.x, r0.y, v3.w
    mad r5.y, r0.y, cb2[3].y, v3.w
    mul r0.z, r5.x, cb2[3].y
    mul r5.z, r0.z, l(0.500000)
    add r5.w, r5.x, -v3.z
    add r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r5.xyzw, r5.xyzw
    mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r6.xyzw, |r5.xyzw|, |r5.xyzw|
    mad r5.xyzw, -|r5.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r5.xyzw, r6.xyzw, r5.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r5.xyzw, r5.xyzw, r5.xyzw
    mul r6.w, r5.z, r5.y
    lt r0.z, r6.w, l(0.000000)
    mov r6.y, -r6.w
    mov r6.xz, l(-1.000000,0,1.000000,0)
    movc r6.xy, r0.zzzz, r6.xyxx, r6.zwzz
    mad r0.z, -r5.y, r5.z, r6.x
    mad r0.z, r6.y, r0.z, r6.w
    add r3.w, -r0.z, r6.x
    mad r0.z, r6.y, r3.w, r0.z
    mul r0.z, r0.z, cb2[3].x
    add r3.w, -cb2[0].w, l(1.000000)
    add r4.w, -cb2[3].x, l(1.000000)
    mul r4.w, r4.w, r5.x
    mad r0.z, r0.z, r3.w, r4.w
    mad r3.w, r5.w, cb2[4].x, l(1.000000)
    mul r0.z, r0.z, r3.w
    mul r4.xyz, r0.zzzz, r4.xyzx
    mad r4.xyz, r4.xyzx, cb2[2].yyyy, r2.xyzx
    mad r5.x, r0.y, l(0.100000), v3.w
    mul r0.y, cb2[7].x, cb2[15].x
    mad r5.y, r0.y, l(0.100000), v3.w
    add r0.yz, r5.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
    frc r0.yz, r0.yyzy
    mad r0.yz, r0.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
    mul r5.xy, |r0.yzyy|, |r0.yzyy|
    mad r0.yz, -|r0.yyzy|, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
    mad r0.yz, r5.xxyx, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
    add r0.yz, r0.yyzy, r0.yyzy
    mul r0.yz, r0.yyzy, r0.yyzy
    mul r0.y, r0.y, r0.z
    mad r0.y, -r0.y, cb2[7].x, l(1.000000)
    mul r0.z, r5.w, cb2[0].w
    mad r0.y, r0.z, cb2[4].x, r0.y
    mad r3.xyz, r3.xyzx, cb2[5].wwww, -r4.xyzx
    mul r3.xyz, r3.xyzx, cb2[6].yyyy
    mul r3.xyz, r0.yyyy, r3.xyzx
    mad r2.xyz, r3.xyzx, v3.zzzz, r4.xyzx
  else 
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r0.x, r0.x, cb2[2].x
    add r4.x, r0.x, v3.w
    mad r4.y, r0.x, cb2[3].y, v3.w
    mul r0.x, r4.x, cb2[3].y
    mul r4.z, r0.x, l(0.500000)
    add r0.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r0.xyz, r0.xyzx
    mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r0.xyzx|, |r0.xyzx|
    mad r0.xyz, -|r0.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r0.xyz, r4.xyzx, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r0.xyz, r0.xyzx, r0.xyzx
    mul r4.w, r0.z, r0.y
    lt r3.w, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r3.wwww, r4.xyxx, r4.zwzz
    mad r0.y, -r0.y, r0.z, r4.x
    mad r0.y, r4.y, r0.y, r4.w
    add r0.z, -r0.y, r4.x
    mad r0.y, r4.y, r0.z, r0.y
    mul r0.y, r0.y, cb2[3].x
    add r0.z, -cb2[0].w, l(1.000000)
    add r3.w, -cb2[3].x, l(1.000000)
    mul r0.x, r0.x, r3.w
    mad r0.x, r0.y, r0.z, r0.x
    mul r0.xyz, r0.xxxx, r3.xyzx
    mad r2.xyz, r0.xyzx, cb2[2].yyyy, r2.xyzx
  endif 
endif 
dp3 r0.x, r2.xyzx, r2.xyzx
sqrt r0.x, r0.x
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[1].z
mad r0.y, -r0.y, l(0.250000), r2.y
max r0.y, r0.y, l(0.000000)
mul r0.y, r0.y, cb2[1].z
ne r0.z, r0.y, l(0.000000)
log r3.x, r0.y
mul r3.x, r3.x, cb2[1].w
exp r3.x, r3.x
movc r0.y, r0.z, r3.x, r0.y
add r3.x, cb1[15].x, cb2[1].x
mad r3.y, cb2[1].x, l(0.800000), cb1[15].y
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r3.xy, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.zw, |r3.xxxy|, |r3.xxxy|
mad r3.xy, -|r3.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r3.xy, r3.zwzz, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r3.xy, r3.xyxx, r3.xyxx
mad r0.z, r3.y, r3.y, r3.x
div r3.x, cb2[6].x, cb2[1].z
mad r0.z, cb2[1].y, r0.z, r3.x
mul r0.y, r0.y, r0.z
mad r3.xz, r1.xxzx, r0.yyyy, r2.xxzx
mov r3.y, r2.y
dp3 r0.y, r3.xyzx, r3.xyzx
rsq r0.y, r0.y
mul r3.xyz, r0.yyyy, r3.xyzx
mul r0.xyz, r0.xxxx, r3.xyzx
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r3.xyzw, r0.yyyy, cb1[1].xyzw
mad r3.xyzw, cb1[0].xyzw, r0.xxxx, r3.xyzw
mad r3.xyzw, cb1[2].xyzw, r0.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb1[3].xyzw
mul r2.xyz, r0.yyyy, cb1[13].xyzx
mad r0.xyw, cb1[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb1[14].xyzx, r0.zzzz, r0.xywx
mad o2.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
mov r0.x, cb1[16].x
mov r0.y, cb1[17].x
mov r0.z, cb1[18].x
mov r2.x, cb1[16].y
mov r2.y, cb1[17].y
mov r2.z, cb1[18].y
mul r1.xzw, r1.wwww, r2.xxyz
mad r0.xyz, r0.xyzx, r1.yyyy, r1.xzwx
mov r1.x, cb1[16].z
mov r1.y, cb1[17].z
mov r1.z, cb1[18].z
mad r0.xyz, r1.xyzx, r2.wwww, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o1.xyz, r0.wwww, r0.xyzx
mov o0.xyzw, r3.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed dc1b7e1649eca397-vs.txt
ne r13.w, r3.w, l(1.0)
if_nz r13.w
  add r13.w, r3.w, -r13.y
  mad r3.x, r13.w, r13.x, r3.x
endif

mov o1.w, r3.z
mov o3.w, cb0[14].w
mov o4.xy, v3.xyxx
ret 
// Approximately 0 instruction slots used