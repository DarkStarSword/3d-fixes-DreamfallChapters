// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 390c8c649eeff48d-vs.txt
// 3DMigoto: 390c8c649eeff48d | Matched 4 variants of 2 shaders: Dreamfall/Unity5/Standard_DirectionBlend, Dreamfall/Unity5/Standard_HightBlend
//
// 3:    Unity headers extracted from Standard_DirectionBlend.shader
// c:    Unity headers extracted from Standard_HeightBlend.shader
// 3:    Shader "Dreamfall/Unity5/Standard_DirectionBlend" {
// c:    Shader "Dreamfall/Unity5/Standard_HightBlend" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _BlendColor ("Blend Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//          _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//          _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//          _BlendTile ("Blend Map Tile Factor", Float) = 1.000000
//          _BumpMap ("Normalmap", 2D) = "bump" { }
//          _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//          _DetailBump ("Detail Normalmap", 2D) = "bump" { }
// 3:       _Boost ("Fresnel Boost", Float) = 1.000000
// c:       _DetailMainAmnt ("Detail Main layer Amount", Range(0.000000,1.000000)) = 1.000000
// c:       _DetailBlendAmnt ("Detail Blend layer Amount", Range(0.000000,1.000000)) = 0.000000
// 3:       _Direction ("Direction", Vector) = (0.000000,1.000000,0.000000,1.000000)
// 3:       _Adjust ("Fresnel Adjust", Range(-1.000000,1.000000)) = 0.000000
// c:       _Height ("Heigth", Float) = 1.000000
// c:       _Adjust ("Blend Contrast", Float) = 1.000000
//          _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//          _2ndAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//          _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//          _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//          _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//          _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//         }
//         Fallback "Specular"
// c:      SubShader 1/2 {
// 3:      SubShader 1/3 {
// c:        LOD 1000
// 3:        LOD 1500
//           Tags { "RenderType"="Opaque" }
//           Pass 2/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//             ZWrite Off
//             Blend One One
// c:          GpuProgramID 130263
// 3:          GpuProgramID 96954
//             Program "vp" {
//               SubProgram "d3d11 " {
// 5:              GpuProgramIndex 131
// a:              GpuProgramIndex 144
//               }
//             }
//           }
//         }
//       }
//
// 3: Unity 5.3 headers extracted from Standard_DirectionBlend.shader.decompressed:
// c: Unity 5.3 headers extracted from Standard_HeightBlend.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 42 0 0
// a:   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_EXP" }
// 5:   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_LINEAR" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 139 4 0 0 1 2 3 4 7 8
//      ConstBuffer "$Globals" 384
//      Vector 352 [_MainTex_ST]
//      Vector 368 [_Detail_ST]
//      ConstBuffer "UnityShadows" 416
//      Matrix 128 [unity_WorldToShadow0]
//      Matrix 192 [unity_WorldToShadow1]
//      Matrix 256 [unity_WorldToShadow2]
//      Matrix 320 [unity_WorldToShadow3]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      BindCB "$Globals" 0
//      BindCB "UnityShadows" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:20:38 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 6      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 390c8c649eeff48d-vs.txt
ne r3.w, r0.w, l(1.0)
if_nz r3.w
  add r3.w, r0.w, -r3.y
  mad r0.x, r3.w, r3.x, r0.x
endif

mov o2.w, r0.z
mad o1.xy, v3.xyxx, cb0[22].xyxx, cb0[22].zwzz
mad o1.zw, v3.xxxy, cb0[23].xxxy, cb0[23].zzzw
mul r0.y, v2.x, cb2[16].x
mul r0.z, v2.x, cb2[17].x
mul r0.x, v2.x, cb2[18].x
mul r1.y, v2.y, cb2[16].y
mul r1.z, v2.y, cb2[17].y
mul r1.x, v2.y, cb2[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.y, v2.z, cb2[16].z
mul r1.z, v2.z, cb2[17].z
mul r1.x, v2.z, cb2[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o2.z, r0.y
mul r1.xyz, v1.yyyy, cb2[13].yzxy
mad r1.xyz, cb2[12].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb2[14].yzxy, v1.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.xyzx
mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
mul r0.y, v1.w, cb2[21].w
mul r2.xyz, r0.yyyy, r2.xyzx
mov o2.y, r2.x
mov o2.x, r1.z
mov o3.z, r0.z
mov o4.z, r0.x
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.y, r2.y
mov o4.y, r2.z
mul r0.xyz, v0.yyyy, cb2[13].xyzx
mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
mad o5.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
mul r0.xyzw, v0.yyyy, cb2[13].xyzw
mad r0.xyzw, cb2[12].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[14].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[15].xyzw, v0.wwww, r0.xyzw
mul r1.xyzw, r0.yyyy, cb1[9].xyzw
mad r1.xyzw, cb1[8].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb1[10].xyzw, r0.zzzz, r1.xyzw
mad o6.xyzw, cb1[11].xyzw, r0.wwww, r1.xyzw
ret 
// Approximately 0 instruction slots used