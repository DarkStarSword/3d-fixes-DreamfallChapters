// asmtool.py --remap-cb 0 100 -I /home/dss/Dreamfall Chapters 092f5f573d1dc230-ps.txt
// 3DMigoto: 092f5f573d1dc230 |    Unity headers extracted from Coord.shader
//    Shader "Hidden/Coord" {
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 58958
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 9
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Coord.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 73 1 0
//   Keywords { "LIGHT_ON_SCREEN" "SPOT_SHAFTS" }
//   undeciphered2: 1 1 2 1 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 96 [_LightPos]
//   Vector 192 [_CameraPosLocal]
//   Float 208 [_FrustumApex]
//   Vector 224 [_CoordTexDim]
//   Vector 240 [_ScreenTexDim]
//   Matrix 128 [_FrustumRays]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 00:56:13 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 13
dcl_resource_structured t100, 256

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 -I /home/dss/Dreamfall Chapters 092f5f573d1dc230-ps.txt
ld_structured r5.xyzw, l(0), l(96), t100.xyzw
ld_structured r6.xyzw, l(0), l(144), t100.xyzw
ld_structured r7.xyzw, l(0), l(208), t100.xyzw
ld_structured r8.xyzw, l(0), l(192), t100.xyzw
ld_structured r9.xyzw, l(0), l(128), t100.xyzw
ld_structured r10.xyzw, l(0), l(240), t100.xyzw
ld_structured r11.xyzw, l(0), l(224), t100.xyzw
ld_structured r12.xyzw, l(0), l(160), t100.xyzw

div r0.xy, l(0.500000, 0.500000, 0.000000, 0.000000), r11.xyxx
add r0.xy, -r0.yxyy, v1.yxyy
mov_sat r0.x, r0.x
mul r0.x, r0.x, l(4.000000)
round_ni r0.z, r0.x
frc r0.x, r0.x
mad r1.y, r0.x, l(2.000000), l(-1.000000)
min r0.x, r0.z, l(3.000000)
ftoi r0.x, r0.x
ieq r2.xyzw, r0.xxxx, l(0, 1, 2, 3)
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mov r1.w, -r1.y
mov r1.xz, l(-1.000000,0,1.000000,0)
dp4 r3.x, r1.wxyz, r2.xyzw
dp4 r3.y, r1.xyzw, r2.xyzw
add r0.xz, -r3.xxyx, -r5.xxyx
add r0.w, r11.x, l(-1.000000)
div r0.w, r11.x, r0.w
mul_sat r0.y, r0.w, r0.y
mad r0.xy, r0.yyyy, r0.xzxx, r5.xyxx
mad r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mov o0.xy, r0.xyxx
mov o0.zw, l(0,0,0,0)
mov r1.x, r9.w
add r2.x, -r1.x, r9.z
mov r1.y, r6.w
add r2.y, -r1.y, r6.z
mov r1.z, r12.w
add r2.z, -r1.z, r12.z
mad r1.xyz, r0.xxxx, r2.xyzx, r1.xyzx
mov r2.x, r9.x
add r3.x, -r2.x, r9.y
mov r2.y, r6.x
add r3.y, -r2.y, r6.y
mov r2.z, r12.x
add r3.z, -r2.z, r12.y
mad r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
add r1.xyz, r1.xyzx, -r2.xyzx
mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx
mul r0.xy, r0.xyxx, r10.xyxx
round_ni r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, r10.zwzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
div r1.xyz, r1.xyzx, r0.yyyy
lt r0.z, l(0.000000), r1.z
lt r0.w, r1.z, l(0.000000)
iadd r0.z, -r0.z, r0.w
itof r0.z, r0.z
mul r0.w, r1.z, l(0.500000)
add r1.w, -r7.x, l(0.500000)
mad r2.xy, r1.wwww, r1.xyxx, r0.wwww
mad r1.xy, r1.wwww, r1.xyxx, -r0.wwww
mul r2.zw, r1.wwww, r8.xxxy
add r0.w, r8.z, -r7.x
mad r3.xy, -r0.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), -r2.zwzz
mad r2.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), -r2.zzzw
div r4.zw, r2.zzzw, r1.xxxy
div r4.xy, r3.xyxx, r2.xyxx
mad r2.xyzw, r0.zzzz, l(990000000.000000, 990000000.000000, 990000000.000000, 990000000.000000), -r4.xyzw
mad r3.xyzw, r4.xyzw, r1.zzzz, r8.zzzz
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
ge r1.xyzw, r7.xxxx, r3.xyzw
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mad r1.xyzw, r1.xyzw, r2.xyzw, r4.xyzw
mov r2.zw, r1.zzzw
add r3.xy, -r8.zzzz, l(-0.500000, 0.500000, 0.000000, 0.000000)
mul r2.xy, r0.zzzz, r3.xyxx
mov r1.z, r2.x
min r3.xyz, r1.xyzx, r2.zwyz
max r1.xyz, r1.xyzx, r2.zwyz
min r0.zw, r1.yyyz, r1.xxxx
min r0.z, r0.w, r0.z
max r1.xy, r3.yzyy, r3.xxxx
max r0.w, r1.y, r1.x
lt r1.x, r0.w, r0.z
div r0.w, r0.w, r0.y
div r0.y, r0.z, r0.y
lt r0.z, l(0.000000), r0.z
and r0.z, r0.z, r1.x
movc r0.z, r0.z, l(0), l(1)
min r0.y, r0.y, r0.x
lt r0.w, r0.x, r0.w
and r0.w, r0.w, l(1)
or r0.z, r0.w, r0.z
movc o1.xyzw, r0.zzzz, -r0.xxxx, r0.yyyy
ret 
// Approximately 0 instruction slots used