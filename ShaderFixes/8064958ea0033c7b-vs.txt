// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8064958ea0033c7b-vs.txt
// 3DMigoto: 8064958ea0033c7b |    Unity headers extracted from Rim_Opaque.shader
//    Shader "Chickenlord/Rim Lighting" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _RimColor ("Rim Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RS ("Rim Power", Range(0.200000,6.000000)) = 2.500000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 43803
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 32
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rim_Opaque.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 72 0 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 139 4 0 0 1 2 3 4 7 8
//   ConstBuffer "$Globals" 208
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_BumpMap_ST]
//   ConstBuffer "UnityLighting" 720
//   Vector 32 [unity_4LightPosX0]
//   Vector 48 [unity_4LightPosY0]
//   Vector 64 [unity_4LightPosZ0]
//   Vector 80 [unity_4LightAtten0]
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:35:40 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 6      w        5     NONE   float      w
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            11         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             2         8  ( FLT, FLT, FLT, FLT)
// c11        cb1            38         7  ( FLT, FLT, FLT, FLT)
// c18        cb2             0         4  ( FLT, FLT, FLT, FLT)
// c22        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c29        cb2            21         1  ( FLT, FLT, FLT, FLT)
// c30        cb3             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c31, 0, 1, 0.416666657, 0
    def c32, 1.05499995, -0.0549999997, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    mad oT0.xy, v3, c1, c1.zwzw
    mad oT0.zw, v3.xyxy, c2.xyxy, c2
    mul r0.x, v2.x, c26.x
    mul r0.y, v2.x, c27.x
    mul r0.z, v2.x, c28.x
    mul r1.x, v2.y, c26.y
    mul r1.y, v2.y, c27.y
    mul r1.z, v2.y, c28.y
    add r0.xyz, r0, r1
    mul r1.x, v2.z, c26.z
    mul r1.y, v2.z, c27.z
    mul r1.z, v2.z, c28.z
    add r0.xyz, r0, r1
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c31.y
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c31.x
    mov r0.w, c31.z
    lit r2, r0.xxww
    mov r2.x, r2.z
    lit r3, r0.yyww
    lit r0, r0.zzww
    mov r2.z, r0.z
    mov r2.y, r3.z
    mad r0.xyz, r2, c32.x, c32.y
    max r0.xyz, r0, c31.x
    mul r2.xyz, v0.y, c23
    mad r2.xyz, c22, v0.x, r2
    mad r2.xyz, c24, v0.z, r2
    mad r2.xyz, c25, v0.w, r2
    add r3, -r2.y, c4
    mul r4, r1.y, r3
    mul r3, r3, r3
    add r5, -r2.x, c3
    mad r4, r5, r1.x, r4
    mad r3, r5, r5, r3
    add r5, -r2.z, c5
    mad r4, r5, r1.z, r4
    mad r3, r5, r5, r3
    rsq r5.x, r3.x
    rsq r5.y, r3.y
    rsq r5.z, r3.z
    rsq r5.w, r3.w
    mov r6.y, c31.y
    mad r3, r3, c6, r6.y
    mul r4, r4, r5
    max r4, r4, c31.x
    rcp r5.x, r3.x
    rcp r5.y, r3.y
    rcp r5.z, r3.z
    rcp r5.w, r3.w
    mul r3, r4, r5
    mul r4.xyz, r3.y, c8
    mad r4.xyz, c7, r3.x, r4
    mad r3.xyz, c9, r3.z, r4
    mad r3.xyz, c10, r3.w, r3
    add oT4.xyz, r0, r3
    mul r0, v0.y, c19
    mad r0, c18, v0.x, r0
    mad r0, c20, v0.z, r0
    add r0, r0, c21
    mad oT4.w, r0.z, c30.z, c30.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mul r0.xyz, v1.y, c23.yzxw
    mad r0.xyz, c22.yzxw, v1.x, r0
    mad r0.xyz, c24.yzxw, v1.z, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov oT1.x, r0.z
    mul r3.xyz, r0, r1.zxyw
    mad r3.xyz, r1.yzxw, r0.yzxw, -r3
    mul r0.z, v1.w, c29.w
    mul r3.xyz, r0.z, r3
    mov oT1.y, r3.x
    mov oT1.z, r1.x
    mov oT1.w, r2.x
    mov oT2.x, r0.x
    mov oT3.x, r0.y
    mov oT2.y, r3.y
    mov oT3.y, r3.z
    mov oT2.z, r1.y
    mov oT3.z, r1.z
    mov oT2.w, r2.y
    mov oT3.w, r2.z

// approximately 98 instruction slots used
vs_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8064958ea0033c7b-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mad o5.w, r0.z, cb3[1].z, cb3[1].w
mad o1.xy, v3.xyxx, cb0[11].xyxx, cb0[11].zwzz
mad o1.zw, v3.xxxy, cb0[12].xxxy, cb0[12].zzzw
mul r0.xyz, v1.yyyy, cb2[13].yzxy
mad r0.xyz, cb2[12].yzxy, v1.xxxx, r0.xyzx
mad r0.xyz, cb2[14].yzxy, v1.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o2.x, r0.z
mul r0.w, v1.w, cb2[21].w
mul r1.x, v2.x, cb2[16].x
mul r1.y, v2.x, cb2[17].x
mul r1.z, v2.x, cb2[18].x
mul r2.x, v2.y, cb2[16].y
mul r2.y, v2.y, cb2[17].y
mul r2.z, v2.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v2.z, cb2[16].z
mul r2.y, v2.z, cb2[17].z
mul r2.z, v2.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.zxyz
mad r2.xyz, r1.yzxy, r0.yzxy, -r2.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
mov o2.y, r2.x
mov o2.z, r1.x
mul r3.xyz, v0.yyyy, cb2[13].xyzx
mad r3.xyz, cb2[12].xyzx, v0.xxxx, r3.xyzx
mad r3.xyz, cb2[14].xyzx, v0.zzzz, r3.xyzx
mad r3.xyz, cb2[15].xyzx, v0.wwww, r3.xyzx
mov o2.w, r3.x
mov o3.x, r0.x
mov o4.x, r0.y
mov o3.y, r2.y
mov o4.y, r2.z
mov o3.z, r1.y
mov o3.w, r3.y
mov o4.w, r3.z
mov o4.z, r1.z
mul r0.x, r1.y, r1.y
mad r0.x, r1.x, r1.x, -r0.x
mul r2.xyzw, r1.yzzx, r1.xyzz
dp4 r4.x, cb1[41].xyzw, r2.xyzw
dp4 r4.y, cb1[42].xyzw, r2.xyzw
dp4 r4.z, cb1[43].xyzw, r2.xyzw
mad r0.xyz, cb1[44].xyzx, r0.xxxx, r4.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, cb1[38].xyzw, r1.xyzw
dp4 r2.y, cb1[39].xyzw, r1.xyzw
dp4 r2.z, cb1[40].xyzw, r1.xyzw
add r0.xyz, r0.xyzx, r2.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.xyzw, -r3.yyyy, cb1[3].xyzw
mul r4.xyzw, r1.yyyy, r2.xyzw
mul r2.xyzw, r2.xyzw, r2.xyzw
add r5.xyzw, -r3.xxxx, cb1[2].xyzw
add r3.xyzw, -r3.zzzz, cb1[4].xyzw
mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
mad r1.xyzw, r3.xyzw, r1.zzzz, r4.xyzw
mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
mad r2.xyzw, r3.xyzw, r3.xyzw, r2.xyzw
rsq r3.xyzw, r2.xyzw
mad r2.xyzw, r2.xyzw, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
mul r1.xyzw, r1.xyzw, r3.xyzw
max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyzw, r2.xyzw, r1.xyzw
mul r2.xyz, r1.yyyy, cb1[7].xyzx
mad r2.xyz, cb1[6].xyzx, r1.xxxx, r2.xyzx
mad r1.xyz, cb1[8].xyzx, r1.zzzz, r2.xyzx
mad r1.xyz, cb1[9].xyzx, r1.wwww, r1.xyzx
add o5.xyz, r0.xyzx, r1.xyzx
ret 
// Approximately 0 instruction slots used