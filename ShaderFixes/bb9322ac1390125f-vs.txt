// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bb9322ac1390125f-vs.txt
// 3DMigoto: bb9322ac1390125f | Matched 8 variants of 1 shaders: Dreamfall/Unity5/Standard_BumpedDetail_Ilum
//
//        Unity headers extracted from Standard_BumpedDetail_Ilum.shader
//        Shader "Dreamfall/Unity5/Standard_BumpedDetail_Ilum" {
//          Properties {
//           _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//           _GlowColor ("Glow Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//           _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//           _BumpMap ("Normalmap", 2D) = "bump" { }
//           _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//           _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//           _DetailBumpFactor ("Detail Bump Ammount", Range(0.000000,1.000000)) = 1.000000
//           _AlphaFactor ("Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//           _GlossHigh ("Glossy High", Range(0.000000,1.000000)) = 0.800000
//           _GlossLow ("Glossy Low", Range(0.000000,1.000000)) = 0.200000
//           _Metallness ("Metallness", Range(0.000000,1.000000)) = 0.000000
//           _MetalNesAlphaFactor ("Metalness Alpha Factor", Range(0.000000,1.000000)) = 1.000000
//           _Illum ("IllumMap (RGB)", 2D) = "black" { }
//           _EmissionLM ("Emission (Lightmapper)", Float) = 1.000000
//          }
//          Fallback "Legacy Shaders/Diffuse"
//          SubShader 1/2 {
//            LOD 1000
//            Tags { "RenderType"="Opaque" }
//            Pass 2/3 {
//              Name "FORWARD"
//              Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//              ZWrite Off
//              Blend One One
//              GpuProgramID 83803
//              Program "vp" {
//                SubProgram "d3d11 " {
// 01:              GpuProgramIndex 168
// 02:              GpuProgramIndex 169
// 04:              GpuProgramIndex 171
// 08:              GpuProgramIndex 172
// 10:              GpuProgramIndex 181
// 20:              GpuProgramIndex 182
// 40:              GpuProgramIndex 184
// 80:              GpuProgramIndex 185
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Standard_BumpedDetail_Ilum.shader.decompressed:
//       API d3d11
//       Shader model vs_4_0
//       undeciphered1: 201510240 45 0 0
// 10:   Keywords { "POINT" "SHADOWS_CUBE" "FOG_EXP" "LOD_FADE_CROSSFADE" }
// 01:   Keywords { "POINT" "SHADOWS_CUBE" "FOG_LINEAR" "LOD_FADE_CROSSFADE" }
// 40:   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_EXP" "LOD_FADE_CROSSFADE" }
// 04:   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_LINEAR" "LOD_FADE_CROSSFADE" }
// 20:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "FOG_EXP" "LOD_FADE_CROSSFADE" }
// 02:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "FOG_LINEAR" "LOD_FADE_CROSSFADE" }
// 80:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_EXP" "LOD_FADE_CROSSFADE" }
// 08:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_LINEAR" "LOD_FADE_CROSSFADE" }
//       undeciphered2: 1 0 4 0 0 0
//       undeciphered3: 139 4 0 0 1 2 3 4 7 8
//       ConstBuffer "$Globals" 320
//       Vector 272 [_MainTex_ST]
//       Vector 288 [_BumpMap_ST]
//       Vector 304 [_Detail_ST]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 80 [_ProjectionParams]
//       Vector 96 [_ScreenParams]
//       ConstBuffer "UnityLighting" 720
//       Vector 16 [_LightPositionRange]
//       ConstBuffer "UnityPerDraw" 352
//       Vector 336 [unity_WorldTransformParams]
//       Matrix 0 [glstate_matrix_mvp]
//       Matrix 192 [unity_ObjectToWorld]
//       Matrix 256 [unity_WorldToObject]
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//       BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:49:32 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 8     z         2     NONE   float     z 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.z
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bb9322ac1390125f-vs.txt
ne r3.w, r0.w, l(1.0)
if_nz r3.w
  add r3.w, r0.w, -r3.y
  mad r0.x, r3.w, r3.x, r0.x
endif

mov o2.z, r0.z
mad o1.xy, v3.xyxx, cb0[17].xyxx, cb0[17].zwzz
mad o1.zw, v3.xxxy, cb0[18].xxxy, cb0[18].zzzw
mad o2.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
mul r0.y, v2.x, cb3[16].x
mul r0.z, v2.x, cb3[17].x
mul r0.x, v2.x, cb3[18].x
mul r1.y, v2.y, cb3[16].y
mul r1.z, v2.y, cb3[17].y
mul r1.x, v2.y, cb3[18].y
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.y, v2.z, cb3[16].z
mul r1.z, v2.z, cb3[17].z
mul r1.x, v2.z, cb3[18].z
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o3.z, r0.y
mul r1.xyz, v1.yyyy, cb3[13].yzxy
mad r1.xyz, cb3[12].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb3[14].yzxy, v1.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.xyzx
mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
mul r0.y, v1.w, cb3[21].w
mul r2.xyz, r0.yyyy, r2.xyzx
mov o3.y, r2.x
mov o3.x, r1.z
mov o4.z, r0.z
mov o5.z, r0.x
mov o4.x, r1.x
mov o5.x, r1.y
mov o4.y, r2.y
mov o5.y, r2.z
mul r0.xyz, v0.yyyy, cb3[13].xyzx
mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
mov o6.xyz, r0.xyzx
add o8.xyz, r0.xyzx, -cb2[1].xyzx
mul r0.xyz, v0.yyyy, cb3[1].xywx
mad r0.xyz, cb3[0].xywx, v0.xxxx, r0.xyzx
mad r0.xyz, cb3[2].xywx, v0.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb3[3].xywx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxzy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o7.z, r0.z
add r0.xy, r1.zzzz, r1.xwxx
mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o7.xy, r0.zwzz, r0.xyxx
ret 
// Approximately 0 instruction slots used