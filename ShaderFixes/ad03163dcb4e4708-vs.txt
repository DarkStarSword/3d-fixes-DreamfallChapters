// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ad03163dcb4e4708-vs.txt
// 3DMigoto: ad03163dcb4e4708 |    Unity headers extracted from atsv2 vertexlit.shader
//    Shader "Hidden/TerrainEngine/Details/Vertexlit" {
//      Properties {
//       _Color ("Main Color r:ampl g:speed b:time", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//        Pass 5/5 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TreeLeaf" }
//          GpuProgramID 267843
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 472
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from atsv2 vertexlit.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 69 0 0
//   Keywords { "SHADOWS_DEPTH" }
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 192
//   Vector 144 [_Color]
//   Vector 160 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 352
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerDraw" 4
//   BindCB "UnityPerFrame" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:47:16 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float    yzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             9         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb3             5         1  ( FLT, FLT, FLT, FLT)
// c6         cb4             0         4  ( FLT, FLT, FLT, FLT)
// c10        cb4            12         7  ( FLT, FLT, FLT, FLT)
// c17        cb5            17         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c21, 0.0480000004, 0.0599999987, 0.239999995, 0.0960000008
    def c22, 0.0240000002, 0.0799999982, 0.200000003, -0.161616161
    def c23, 2, 1, 6.40884876, -3.14159274
    def c24, 1.20000005, 2, 1.60000002, 4.80000019
    def c25, 0.00833330024, -0.000198409994, 0, 0
    def c26, 0.215387449, 0.358979076, 0.287183255, 0.861549795
    def c27, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c28, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mad oT0.xy, v3, c2, c2.zwzw
    mul r0, v0.z, c22.xyyz
    mad r0, v0.x, c21, r0
    mov r1.xy, c23
    mad r1.x, c1.z, -r1.x, r1.y
    add r1.x, r1.x, -v7.z
    mul r1.x, r1.x, c3.x
    add r1.yz, v7.xyww, c1.xyww
    mul r1.x, r1.y, r1.x
    mul r1.y, r1.z, v3.y
    mad r0, r1.x, c24, r0
    frc r0, r0
    mad r0, r0, c23.z, c23.w
    mul r2, r0, r0
    mul r3, r0, r2
    mad r0, r3, c22.w, r0
    mul r3, r2, r3
    mul r2, r2, r3
    mad r0, r3, c25.x, r0
    mad r0, r2, c25.y, r0
    mul r0, r1.y, r0
    mul r0, r0, c26
    mul r0, r0, r0
    mul r0, r0, r0
    dp4 r1.x, r0, c28
    dp4 r0.x, r0, c27
    mul r0.yz, r1.x, c16.xxzw
    mad r0.xy, c14.xzzw, r0.x, r0.yzzw
    add r0.xy, -r0, v0.xzzw
    mul r1.xyz, v0.y, c11
    mad r1.xyz, c10, r0.x, r1
    mad r1.xyz, c12, r0.y, r1
    add r1.xyz, r1, c13
    mad r2.xyz, r1, -c4.w, c4
    nrm r3.xyz, r2
    mul r2.x, v2.x, c14.x
    mul r2.y, v2.x, c15.x
    mul r2.z, v2.x, c16.x
    mul r4.x, v2.y, c14.y
    mul r4.y, v2.y, c15.y
    mul r4.z, v2.y, c16.y
    add r2.xyz, r2, r4
    mul r4.x, v2.z, c14.z
    mul r4.y, v2.z, c15.z
    mul r4.z, v2.z, c16.z
    add r2.xyz, r2, r4
    nrm r4.xyz, r2
    dp3 r0.z, r4, r3
    mad r0.z, r0.z, -r0.z, c23.y
    rsq r0.z, r0.z
    rcp r0.z, r0.z
    mul r0.z, r0.z, c5.z
    mad r1.xyz, r4, -r0.z, r1
    mul r2, r1.y, c18
    mad r2, c17, r1.x, r2
    mad r1, c19, r1.z, r2
    add r1, r1, c20
    mul r2, v0.y, c7
    mad r2, c6, r0.x, r2
    mad r0, c8, r0.y, r2
    add r0, r0, c9
    mul r2.x, c5.z, c5.z
    slt r2.x, -r2.x, r2.x
    lrp r3, r2.x, r1, r0
    rcp r0.x, r3.w
    mul r0.x, r0.x, c5.x
    max r0.x, r0.x, c25.z
    min r0.x, r0.x, c23.y
    add r0.x, r0.x, r3.z
    max r0.y, r0.x, c25.z
    add r0.y, -r0.x, r0.y
    mad oPos.z, c5.y, r0.y, r0.x
    mad oPos.xy, r3.w, c0, r3
    mov oPos.w, r3.w

// approximately 78 instruction slots used
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[19], immediateIndexed
dcl_constantbuffer cb5[21], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.yzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.zzzz, l(0.024000, 0.080000, 0.080000, 0.200000)
mad r0.xyzw, v0.xxxx, l(0.048000, 0.060000, 0.240000, 0.096000), r0.xyzw
mad r1.x, -cb0[9].z, l(2.000000), l(1.000000)
add r1.x, r1.x, -v7.z
mul r1.x, r1.x, cb1[0].x
add r1.yz, v7.yywy, cb0[9].yywy
mul r1.x, r1.y, r1.x
mul r1.y, r1.z, v3.y
mad r0.xyzw, r1.xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r2.xyzw, r0.xyzw, r0.xyzw
mul r3.xyzw, r0.xyzw, r2.xyzw
mad r0.xyzw, r3.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r0.xyzw
mul r3.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
mad r0.xyzw, r3.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r0.xyzw
mad r0.xyzw, r2.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r0.xyzw
mul r0.xyzw, r1.yyyy, r0.xyzw
mul r0.xyzw, r0.xyzw, l(0.215387449, 0.358979076, 0.287183255, 0.861549795)
mul r0.xyzw, r0.xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, r0.xyzw
dp4 r1.x, r0.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
dp4 r0.x, r0.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
mul r0.yz, r1.xxxx, cb4[18].xxzx
mad r0.xy, cb4[16].xzxx, r0.xxxx, r0.yzyy
add r0.xy, -r0.xyxx, v0.xzxx
mul r1.xyz, v0.yyyy, cb4[13].xyzx
mad r1.xyz, cb4[12].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb4[14].xyzx, r0.yyyy, r1.xyzx
add r1.xyz, r1.xyzx, cb4[15].xyzx
mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r3.x, v2.x, cb4[16].x
mul r3.y, v2.x, cb4[17].x
mul r3.z, v2.x, cb4[18].x
mul r4.x, v2.y, cb4[16].y
mul r4.y, v2.y, cb4[17].y
mul r4.z, v2.y, cb4[18].y
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.x, v2.z, cb4[16].z
mul r4.y, v2.z, cb4[17].z
mul r4.z, v2.z, cb4[18].z
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
dp3 r0.z, r3.xyzx, r2.xyzx
mad r0.z, -r0.z, r0.z, l(1.000000)
sqrt r0.z, r0.z
mul r0.z, r0.z, cb3[5].z
mad r1.xyz, -r3.xyzx, r0.zzzz, r1.xyzx
mul r2.xyzw, r1.yyyy, cb5[18].xyzw
mad r2.xyzw, cb5[17].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb5[19].xyzw, r1.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, cb5[20].xyzw
mul r2.xyzw, v0.yyyy, cb4[1].xyzw
mad r2.xyzw, cb4[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb4[2].xyzw, r0.yyyy, r2.xyzw
add r0.xyzw, r0.xyzw, cb4[3].xyzw
ne r2.x, cb3[5].z, l(0.000000)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ad03163dcb4e4708-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

div_sat r1.x, cb3[5].x, r0.w
add r0.z, r0.z, r1.x

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

max r0.x, r0.z, l(0.000000)
add r0.x, -r0.z, r0.x
mad o0.z, cb3[5].y, r0.x, r0.z
mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
ret 
// Approximately 0 instruction slots used