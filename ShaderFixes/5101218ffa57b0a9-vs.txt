// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5101218ffa57b0a9-vs.txt
// 3DMigoto: 5101218ffa57b0a9 | Matched 12 variants of 1 shaders: Standard (Specular setup)
//
//         Unity headers extracted from StandardSpecular.shader
//         Shader "Standard (Specular setup)" {
//           Properties {
//            _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//            _MainTex ("Albedo", 2D) = "white" { }
//            _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//            _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
//            _GlossMapScale ("Smoothness Factor", Range(0.000000,1.000000)) = 1.000000
//           [Enum(Specular Alpha,0,Albedo Alpha,1)]  _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0.000000
//            _SpecColor ("Specular", Color) = (0.200000,0.200000,0.200000,1.000000)
//            _SpecGlossMap ("Specular", 2D) = "white" { }
//           [ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
//           [ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
//            _BumpScale ("Scale", Float) = 1.000000
//            _BumpMap ("Normal Map", 2D) = "bump" { }
//            _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
//            _ParallaxMap ("Height Map", 2D) = "black" { }
//            _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
//            _OcclusionMap ("Occlusion", 2D) = "white" { }
//            _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//            _EmissionMap ("Emission", 2D) = "white" { }
//            _DetailMask ("Detail Mask", 2D) = "white" { }
//            _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//            _DetailNormalMapScale ("Scale", Float) = 1.000000
//            _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//           [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
//           [HideInInspector]  _Mode ("__mode", Float) = 0.000000
//           [HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
//           [HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
//           [HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
//           }
//           CustomEditor "StandardShaderGUI"
//           Fallback "VertexLit"
//           SubShader 2/2 {
//             LOD 150
//             Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//             Pass 1/3 {
//               Name "FORWARD"
//               Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
//               ZWrite [_ZWrite]
//               Blend [_SrcBlend] [_DstBlend]
//               GpuProgramID 385030
//               Program "vp" {
//                 SubProgram "d3d11_9x " {
// 001:              GpuProgramIndex 5839
// 002:              GpuProgramIndex 5893
// 004:              GpuProgramIndex 5947
// 008:              GpuProgramIndex 6001
// 010:              GpuProgramIndex 6055
// 020:              GpuProgramIndex 6109
// 040:              GpuProgramIndex 6163
// 080:              GpuProgramIndex 6217
// 100:              GpuProgramIndex 6271
// 200:              GpuProgramIndex 6325
// 400:              GpuProgramIndex 6379
// 800:              GpuProgramIndex 6433
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from StandardSpecular.shader.decompressed:
//        API d3d11_9x
//        Shader model vs_4_0_level_9_1
//        undeciphered1: 201510240 79 0 0
// 200:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHABLEND_ON" "_SPECGLOSSMAP" }
// 400:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHAPREMULTIPLY_ON" "_SPECGLOSSMAP" }
// 040:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_SPECGLOSSMAP" }
// 020:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" }
// 002:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" }
// 004:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
// 001:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
// 800:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHAPREMULTIPLY_ON" "_SPECGLOSSMAP" }
// 100:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_SPECGLOSSMAP" }
// 080:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" }
// 008:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" }
// 010:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
//        undeciphered2: 1 0 4 0 0 0
//        undeciphered3: 155 5 0 0 1 2 3 4 4 5 7 8
//        ConstBuffer "$Globals" 240
//        Vector 160 [_MainTex_ST]
//        Vector 176 [_DetailAlbedoMap_ST]
//        Float 220 [_UVSec]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 64 [_WorldSpaceCameraPos] 3
//        Vector 80 [_ProjectionParams]
//        ConstBuffer "UnityLighting" 720
//        Vector 32 [unity_4LightPosX0]
//        Vector 48 [unity_4LightPosY0]
//        Vector 64 [unity_4LightPosZ0]
//        Vector 80 [unity_4LightAtten0]
//        Vector 96 [unity_LightColor0]
//        Vector 112 [unity_LightColor1]
//        Vector 128 [unity_LightColor2]
//        Vector 144 [unity_LightColor3]
//        Vector 160 [unity_LightColor4]
//        Vector 176 [unity_LightColor5]
//        Vector 192 [unity_LightColor6]
//        Vector 208 [unity_LightColor7]
//        Vector 608 [unity_SHAr]
//        Vector 624 [unity_SHAg]
//        Vector 640 [unity_SHAb]
//        Vector 656 [unity_SHBr]
//        Vector 672 [unity_SHBg]
//        Vector 688 [unity_SHBb]
//        Vector 704 [unity_SHC]
//        ConstBuffer "UnityPerDraw" 352
//        Vector 336 [unity_WorldTransformParams]
//        Matrix 0 [glstate_matrix_mvp]
//        Matrix 192 [unity_ObjectToWorld]
//        Matrix 256 [unity_WorldToObject]
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityLighting" 2
//        BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:14:58 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c14        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c25        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c32        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c33, 0.5, 0, 1, 0.416666657
    def c34, 1.05499995, -0.0549999997, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mad oT0.xy, v2, c1, c1.zwzw
    mul r0.x, c3.w, c3.w
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c2.xyxy, c2
    mul r0.xyz, v0.y, c26
    mad r0.xyz, c25, v0.x, r0
    mad r0.xyz, c27, v0.z, r0
    mad r0.xyz, c28, v0.w, r0
    add r1.xyz, r0, -c4
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r0.w, v4.w, c32.w
    mul r1.xyz, v4.y, c26
    mad r1.xyz, c25, v4.x, r1
    mad r1.xyz, c27, v4.z, r1
    nrm r2.xyz, r1
    mul r1.x, v1.x, c29.x
    mul r1.y, v1.x, c30.x
    mul r1.z, v1.x, c31.x
    mul r3.x, v1.y, c29.y
    mul r3.y, v1.y, c30.y
    mul r3.z, v1.y, c31.y
    add r1.xyz, r1, r3
    mul r3.x, v1.z, c29.z
    mul r3.y, v1.z, c30.z
    mul r3.z, v1.z, c31.z
    add r1.xyz, r1, r3
    nrm r3.xyz, r1
    mul r1.xyz, r2.yzxw, r3.zxyw
    mad r1.xyz, r3.yzxw, r2.zxyw, -r1
    mov oT2.xyz, r2
    mul oT3.xyz, r0.w, r1
    mul r1, v0.y, c22
    mad r1, c21, v0.x, r1
    mad r1, c23, v0.z, r1
    add r1, r1, c24
    mul r0.w, r1.y, c5.x
    mul r2.w, r0.w, c33.x
    mul r2.xz, r1.xyww, c33.x
    add oT6.xy, r2.z, r2.xwzw
    mul r0.w, r3.y, r3.y
    mad r0.w, r3.x, r3.x, -r0.w
    mul r2, r3.yzzx, r3.xyzz
    dp4 r4.x, c17, r2
    dp4 r4.y, c18, r2
    dp4 r4.z, c19, r2
    mad r2.xyz, c20, r0.w, r4
    mov r3.w, c33.z
    dp4 r4.x, c14, r3
    dp4 r4.y, c15, r3
    dp4 r4.z, c16, r3
    add r2.xyz, r2, r4
    max r2.xyz, r2, c33.y
    mov r2.w, c33.w
    lit r4, r2.xxww
    mov r4.x, r4.z
    lit r5, r2.yyww
    lit r2, r2.zzww
    mov r4.z, r2.z
    mov r4.y, r5.z
    mad r2.xyz, r4, c34.x, c34.y
    max r2.xyz, r2, c33.y
    add r4, -r0.y, c7
    mul r5, r3.y, r4
    mul r4, r4, r4
    add r6, -r0.x, c6
    add r0, -r0.z, c8
    mad r5, r6, r3.x, r5
    mad r4, r6, r6, r4
    mad r4, r0, r0, r4
    mad r0, r0, r3.z, r5
    mov oT4.xyz, r3
    rsq r3.x, r4.x
    rsq r3.y, r4.y
    rsq r3.z, r4.z
    rsq r3.w, r4.w
    mov r5.z, c33.z
    mad r4, r4, c9, r5.z
    mul r0, r0, r3
    max r0, r0, c33.y
    rcp r3.x, r4.x
    rcp r3.y, r4.y
    rcp r3.z, r4.z
    rcp r3.w, r4.w
    mul r0, r0, r3
    mul r3.xyz, r0.y, c11
    mad r3.xyz, c10, r0.x, r3
    mad r0.xyz, c12, r0.z, r3
    mad r0.xyz, c13, r0.w, r0
    add oT5.xyz, r2, r0
    mad oPos.xy, r1.w, c0, r1
    mov oPos.zw, r1
    mov oT6.zw, r1
    mov oT2.w, c33.y
    mov oT3.w, c33.y
    mov oT4.w, c33.y
    mov oT5.w, c33.y

// approximately 104 instruction slots used
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xy
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5101218ffa57b0a9-vs.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5101218ffa57b0a9-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

eq r1.x, cb0[13].w, l(0.000000)
movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
mul r1.xyz, v0.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
add r2.xyz, r1.xyzx, -r8.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul o2.xyz, r1.wwww, r2.xyzx
mul r2.xyz, v4.yyyy, cb3[13].xyzx
mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mov o3.xyz, r2.xyzx
mov o3.w, l(0)
mul r3.x, v1.x, cb3[16].x
mul r3.y, v1.x, cb3[17].x
mul r3.z, v1.x, cb3[18].x
mul r4.x, v1.y, cb3[16].y
mul r4.y, v1.y, cb3[17].y
mul r4.z, v1.y, cb3[18].y
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.x, v1.z, cb3[16].z
mul r4.y, v1.z, cb3[17].z
mul r4.z, v1.z, cb3[18].z
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r4.xyz, r2.yzxy, r3.zxyz
mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
mul r1.w, v4.w, cb3[21].w
mul o4.xyz, r1.wwww, r2.xyzx
mov o4.w, l(0)
mov o5.w, l(0)
mov o5.xyz, r3.xyzx
mul r1.w, r3.y, r3.y
mad r1.w, r3.x, r3.x, -r1.w
mul r2.xyzw, r3.yzzx, r3.xyzz
dp4 r4.x, cb2[41].xyzw, r2.xyzw
dp4 r4.y, cb2[42].xyzw, r2.xyzw
dp4 r4.z, cb2[43].xyzw, r2.xyzw
mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
mov r3.w, l(1.000000)
dp4 r4.x, cb2[38].xyzw, r3.xyzw
dp4 r4.y, cb2[39].xyzw, r3.xyzw
dp4 r4.z, cb2[40].xyzw, r3.xyzw
add r2.xyz, r2.xyzx, r4.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.xyzw, -r1.yyyy, cb2[3].xyzw
mul r5.xyzw, r3.yyyy, r4.xyzw
mul r4.xyzw, r4.xyzw, r4.xyzw
add r6.xyzw, -r1.xxxx, cb2[2].xyzw
add r1.xyzw, -r1.zzzz, cb2[4].xyzw
mad r5.xyzw, r6.xyzw, r3.xxxx, r5.xyzw
mad r3.xyzw, r1.xyzw, r3.zzzz, r5.xyzw
mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
rsq r4.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
mul r3.xyzw, r3.xyzw, r4.xyzw
max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyzw, r1.xyzw, r3.xyzw
mul r3.xyz, r1.yyyy, cb2[7].xyzx
mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
add o6.xyz, r2.xyzx, r1.xyzx
mov o6.w, l(0)
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o7.zw, r0.zzzw
add o7.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used