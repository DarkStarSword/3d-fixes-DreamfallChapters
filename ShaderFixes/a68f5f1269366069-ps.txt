// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a68f5f1269366069-ps.txt
// 3DMigoto: a68f5f1269366069 |    Unity headers extracted from Standard_Disintegrate_Rift.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate_Rift" {
//      Properties {
//       _MainColor ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _DistortTex ("Distort Map(RGB)", 2D) = "white" { }
//       _DistortAmount ("Distort Amount", Float) = 0.000000
//       _ParallaxAdjust (" Height Adjust", Range(-10.000000,10.000000)) = 0.000000
//       _BorderControl ("Border Heigth Adjust", Float) = 0.000000
//       _DisintegrateAmount ("Effect Amount", Range(0.010000,1.010000)) = 0.000000
//       _DissolveColor ("Edge Color", Color) = (1.000000,0.500000,0.200000,0.000000)
//       _EdgeEmission ("Edge Emission", Color) = (0.000000,0.000000,0.000000,0.000000)
//       _DissolveEdge ("Edge Range", Range(0.000000,0.100000)) = 0.010000
//       _EdgeDarknesMax ("Edge Darknes Max", Range(-1.000000,1.000000)) = 1.000000
//       _EdgeDarknesMin ("Edge Darknes Min", Range(-1.000000,1.000000)) = 0.000000
//       _EmissionFloat ("Emission Strength", Float) = 1.000000
//       _Ilum ("Ilum Strength", Float) = 1.000000
//       _RotationSpeed ("RotationSpeed", Float) = 1.000000
//       _RotationSpeed2 ("Distort ScrollSpeed", Float) = -2.000000
//       _MainTexScroll ("Main Tex Scroll Speed", Float) = 0.100000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 49060
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 35
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_Rift.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 86 7 2
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 128 [_MainColor]
//   Float 144 [_DistortAmount]
//   Float 148 [_DisintegrateAmount]
//   Vector 160 [_DissolveColor]
//   Float 176 [_DissolveEdge]
//   Vector 192 [_EdgeEmission]
//   Float 208 [_Ilum]
//   Float 212 [_RotationSpeed]
//   Float 216 [_RotationSpeed2]
//   Float 224 [_EmissionFloat]
//   Float 228 [_ParallaxAdjust]
//   Float 232 [_EdgeDarknesMax]
//   Float 236 [_EdgeDarknesMin]
//   Float 240 [_BorderControl]
//   Float 244 [_MainTexScroll]
//   Float 272 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_DistortTex] 2D 3
//   SetTexture 1 [_NoiseTex] 2D 2
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:40:42 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 7     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[18], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a68f5f1269366069-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r7.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r1.xyw, v2.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v4.xyzx, r1.zzzz, r1.xywx
add r2.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.x, cb0[13].y, cb1[0].x
sincos r0.x, r3.x, r0.x
mov r3.yz, r0.xxxx
mad r3.xyz, r3.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp2 r4.x, r2.xyxx, r3.xzxx
dp2 r4.y, r2.yxyy, r3.xyxx
add r2.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.x, cb0[15].y, cb1[0].x
sincos r0.x, r3.x, r0.x
mov r3.yz, r0.xxxx
mad r3.xyz, r3.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp2 r4.x, v1.xyxx, r3.xzxx
dp2 r4.y, v1.yxyy, r3.xyxx
add r2.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mad r3.y, cb0[13].z, cb1[0].x, v1.y
mov r3.x, v1.x
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
mul r0.x, cb0[14].y, l(0.500000)
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xy, r1.wwww, r1.xyxx
mad r1.z, r1.z, r1.w, l(0.420000)
div r1.xy, r1.xyxx, r1.zzzz
mul r1.zw, r0.xxxx, r1.xxxy
mad r1.xy, r0.xxxx, r1.xyxx, r2.zwzz
mad r2.xy, r3.xxxx, cb0[9].xxxx, r2.xyxx
sample r3.xyzw, r2.xyxx, t1.xyzw, s2
add r0.x, r3.x, -cb0[9].y
mad r1.zw, r1.zzzw, cb0[15].xxxx, r2.xxxy
sample r2.xyzw, r1.zwzz, t1.xyzw, s2
add r1.z, r2.x, -cb0[9].y
sample r2.xyzw, r1.xyxx, t2.xyzw, s1
add r1.x, -cb0[14].w, cb0[14].z
add r1.y, r1.z, -cb0[14].w
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r1.y, r1.x, r1.y
mad r1.z, r1.y, l(-2.000000), l(3.000000)
mul r1.y, r1.y, r1.y
mul r1.y, r1.y, r1.z
mul r2.xyz, r1.yyyy, r2.xyzx
mul r2.xyz, r2.xyzx, v5.xyzx
mul r2.xyz, r2.xyzx, cb0[8].xyzx
lt r1.z, r0.x, cb0[11].x
lt r1.w, l(0.000000), cb0[9].y
and r1.z, r1.w, r1.z
mul r3.xyz, cb0[12].xyzx, cb0[14].xxxx
mul r4.xyz, r1.yyyy, cb0[10].xyzx
mul r5.xyz, r2.xyzx, cb0[13].xxxx
add r1.y, r0.x, -cb0[14].w
mul_sat r1.x, r1.x, r1.y
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mul r1.xyw, r1.xxxx, r5.xyxz
movc r2.xyz, r1.zzzz, r4.xyzx, r2.xyzx
movc r1.xyz, r1.zzzz, r3.xyzx, r1.xywx
add r1.w, r0.x, -cb0[17].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v3.wwww, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v2.wwww, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v4.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r0.yzw, r1.wwww, r3.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb4[6].xxyz
  mul r3.yzw, r0.yyzw, cb4[5].xxyz
  mul r0.y, r3.y, l(0.250000)
  mul r0.z, cb4[0].z, l(0.500000)
  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r3.x, r0.w, r0.y
  sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r5.xyzw, r0.yzwy, t3.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r3.xyzw, r0.yzwy, t3.xywz, s0
  mov r3.x, r4.w
  mov r3.y, r5.w
else 
  mov r3.x, cb2[38].w
  mov r3.y, cb2[39].w
  mov r3.z, cb2[40].w
endif 
add r0.yzw, r3.xxyz, v7.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
log r3.xyz, r0.yzwy
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.yzw, r1.wwww, r3.xxyz, r0.yyzw
mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
mul r1.x, v1.z, cb3[1].y
exp r1.x, -r1.x
min r1.x, r1.x, l(1.000000)
add r0.yzw, r0.yyzw, -cb3[0].xxyz
mad o0.xyz, r1.xxxx, r0.yzwy, cb3[0].xyzx
mov o0.w, r0.x
ret 
// Approximately 0 instruction slots used