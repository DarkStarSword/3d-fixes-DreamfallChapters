// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fbf63f5b12c07ce1-ps.txt
// 3DMigoto: fbf63f5b12c07ce1 |    Unity headers extracted from Rim_Transparent_2side.shader
//    Shader "Chickenlord/Transparent Rim Lighting 2Side" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RS ("Pre Power", Range(1.000000,10.000000)) = 2.500000
//       _RM ("Post Multiplier", Range(0.000000,5.000000)) = 2.000000
//       _RPS ("Post Power", Range(1.000000,5.000000)) = 2.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 3/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 201503
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 135
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rim_Transparent_2side.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 76 2 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered2: 1 2 5 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Float 144 [_Shininess]
//   Float 148 [_RS]
//   Float 152 [_RM]
//   Float 156 [_RPS]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityPerFrame" 352
//   Vector 0 [glstate_lightmodel_ambient]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BumpMap] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:04:13 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5      w        5     NONE   float      w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fbf63f5b12c07ce1-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

mul r0.xyz, cb0[3].xyzx, cb0[7].xyzx
add r0.xz, r0.yyzy, r0.xxxx
mul r0.y, r0.z, r0.y
mad r0.x, cb0[7].z, cb0[3].z, r0.x
sqrt r0.y, r0.y
add r0.y, r0.y, r0.y
mad r0.x, r0.y, cb0[3].w, r0.x
add r0.yzw, cb3[0].xxyz, cb3[0].xxyz
mul r1.xyz, r0.yzwy, cb0[3].xyzx
add r0.yz, r1.yyzy, r1.xxxx
mul r0.z, r0.z, r1.y
mad r0.y, r0.w, cb0[3].z, r0.y
sqrt r0.z, r0.z
add r0.z, r0.z, r0.z
mad r0.y, r0.z, cb0[3].w, r0.y
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r1.xyz, -r1.xyzx, r7.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
mad r1.xyz, r1.xyzx, r0.zzzz, cb2[0].xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r2.xyw, v2.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, v4.xyzx, r2.zzzz, r2.xywx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
sample r3.xyzw, v1.zwzz, t1.xyzw, s1
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.z, r3.xyxx, r3.xyxx
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
sqrt r3.z, r0.z
dp3_sat r0.z, r3.xyzx, r2.xyzx
log r0.w, r0.z
add r0.z, -r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb0[9].y
exp r0.z, r0.z
mul r0.z, r0.z, cb0[9].z
min r0.z, r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb0[9].w
exp r0.z, r0.z
mul r1.w, cb0[9].x, l(128.000000)
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
sample r2.xyzw, v1.xyxx, t0.xyzw, s0
mad r0.y, r0.w, r2.w, -r0.y
max r0.y, r0.y, l(0.000000)
mul r0.x, r0.x, r0.y
mul r0.y, r2.w, cb0[8].w
mad r0.x, r0.y, r0.z, r0.x
mad r2.xyz, r2.xyzx, cb0[8].xyzx, r0.xxxx
mul r4.xyz, r2.xyzx, cb0[6].xyzx
mul r5.xyz, r2.xyzx, v5.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r2.x, v2.xyzx, r3.xyzx
dp3 r2.y, v3.xyzx, r3.xyzx
dp3 r2.z, v4.xyzx, r3.xyzx
dp3 r0.z, r2.xyzx, r1.xyzx
dp3 r0.w, r2.xyzx, cb2[0].xyzx
max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.z, r0.z
mul r0.z, r0.z, r1.w
exp r0.z, r0.z
mul r0.z, r2.w, r0.z
mul r1.xyzw, cb0[6].xyzw, cb0[7].xyzw
mul r1.xyz, r0.zzzz, r1.xyzx
mad r2.w, r1.w, r0.z, r0.x
mad r0.xzw, r4.xxyz, r0.wwww, r1.xxyz
add r2.xyz, r0.xzwx, r0.xzwx
mov r5.w, l(0)
add r1.xyzw, r2.xyzw, r5.xyzw
mad r0.xyz, r0.yyyy, cb0[8].xyzx, r1.xyzx
mov o0.w, r1.w
add r0.xyz, r0.xyzx, -cb4[0].xyzx
mad_sat r0.w, v5.w, cb4[1].z, cb4[1].w
mad o0.xyz, r0.wwww, r0.xyzx, cb4[0].xyzx
ret 
// Approximately 0 instruction slots used