// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 594aa1180e973eb1-vs.txt
// 3DMigoto: 594aa1180e973eb1 |    Unity headers extracted from HighPrecisionDepthMap.shader
//    Shader "Hidden/SSAO Pro - High Precision Depth Map" {
//      Properties {
//       _MainTex ("", 2D) = "white" { }
//       _Cutoff ("", Float) = 0.500000
//       _Color ("", Color) = (1.000000,1.000000,1.000000,1.000000)
//      }
//      Fallback Off
//      SubShader 8/9 {
//        Tags { "RenderType"="GrassBillboard" }
//        Pass 1/1 {
//          Tags { "RenderType"="GrassBillboard" }
//          Cull Off
//          GpuProgramID 549256
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 27
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from HighPrecisionDepthMap.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 38 0 0
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 141 4 0 0 2 1 3 4 7 8
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   ConstBuffer "UnityTerrain" 272
//   Vector 0 [_WavingTint]
//   Vector 16 [_WaveAndDistance]
//   Vector 32 [_CameraPosition]
//   Vector 48 [_CameraRight] 3
//   Vector 64 [_CameraUp] 3
//   BindCB "UnityPerDraw" 0
//   BindCB "UnityTerrain" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:25:12 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         4  ( FLT, FLT, FLT, FLT)
// c5         cb1             0         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c10, 0.00600000005, 0.0199999996, 0.0500000007, -0.161616161
    def c11, 1.20000005, 2, 1.60000002, 4.80000019
    def c12, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c13, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c14, 0.0120000001, 0.0199999996, 0.0599999987, 0.0240000002
    def c15, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c16, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c17, -0.5, 0.5, 0, 1
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    add r0.xyz, v0, -c7
    dp3 r0.x, r0, r0
    slt r0.x, c6.w, r0.x
    mad r0.xy, r0.x, -v1, v1
    mad r0.xzw, r0.x, c8.xyyz, v0.xyyz
    mad r0.xyz, r0.y, c9, r0.xzww
    mul r1.xy, r0.xzzw, c6.y
    mul r2, r1.y, c10.xyyz
    mad r1, r1.x, c14, r2
    mov r2.x, c6.x
    mad r1, r2.x, c11, r1
    frc r1, r1
    mad r1, r1, c12.x, c12.y
    mul r2, r1, r1
    mul r3, r1, r2
    mad r1, r3, c10.w, r1
    mul r3, r2, r3
    mul r2, r2, r3
    mad r1, r3, c12.z, r1
    mad r1, r2, c12.w, r1
    mul r1, r1, r1
    mul r1, r1, r1
    mul r2, r1, v1.y
    dp4 r0.w, r1, c13.xxyz
    mul r0.w, r0.w, c13.w
    dp4 r1.x, r2, c15
    dp4 r1.z, r2, c16
    mad r0.xz, r1, -c6.z, r0
    mul r1, r0.y, c2
    mad r1, c1, r0.x, r1
    mad r1, c3, r0.z, r1
    add r0.xyz, r0, -c7
    dp3 r0.x, r0, r0
    add r0.x, -r0.x, c6.w
    mul r0.x, r0.x, c7.w
    add r0.x, r0.x, r0.x
    max r0.x, r0.x, c17.z
    min oT0.w, r0.x, c17.w
    mad r1, c4.xywz, v0.w, r1.xywz
    mov r0.x, c17.x
    add r0.xyz, r0.x, c5
    mad r0.xyz, r0.w, r0, c17.y
    add r0.xyz, r0, r0
    mul oT0.xyz, r0, v7
    mad oPos.xy, r1.z, c0, r1
    mov oPos.zw, r1.xywz
    mov oT1.zw, r1
    mov oT1.xy, v3

// approximately 48 instruction slots used
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[5], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v3.xy
dcl_input v7.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, -cb1[2].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
lt r0.x, cb1[1].w, r0.x
movc r0.xy, r0.xxxx, l(0,0,0,0), v1.xyxx
mad r0.xzw, r0.xxxx, cb1[3].xxyz, v0.xxyz
mad r0.xyz, r0.yyyy, cb1[4].xyzx, r0.xzwx
mul r1.xy, r0.xzxx, cb1[1].yyyy
mul r2.xyzw, r1.yyyy, l(0.006000, 0.020000, 0.020000, 0.050000)
mad r1.xyzw, r1.xxxx, l(0.012000, 0.020000, 0.060000, 0.024000), r2.xyzw
mad r1.xyzw, cb1[1].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r1.xyzw
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r2.xyzw, r1.xyzw, r1.xyzw
mul r3.xyzw, r1.xyzw, r2.xyzw
mad r1.xyzw, r3.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r1.xyzw
mul r3.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
mad r1.xyzw, r3.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r1.xyzw
mad r1.xyzw, r2.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r1.xyzw, r1.xyzw, r1.xyzw
mul r2.xyzw, r1.xyzw, v1.yyyy
dp4 r0.w, r1.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.w, r0.w, l(0.700000)
dp4 r1.x, r2.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
dp4 r1.z, r2.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
mad r0.xz, -r1.xxzx, cb1[1].zzzz, r0.xxzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
add r2.xyz, r0.xyzx, -cb1[2].xyzx
dp3 r0.y, r2.xyzx, r2.xyzx
add r0.y, -r0.y, cb1[1].w
dp2_sat o1.w, cb1[2].wwww, r0.yyyy
mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb0[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 594aa1180e973eb1-vs.txt
ne r4.w, r1.w, l(1.0)
if_nz r4.w
  add r4.w, r1.w, -r4.y
  mad r1.x, r4.w, r4.x, r1.x
endif

mov o2.zw, r1.zzzw
add r0.xyz, cb1[0].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r0.xyz, r0.wwww, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.xyz, r0.xyzx, r0.xyzx
mul o1.xyz, r0.xyzx, v7.xyzx
mov o2.xy, v3.xyxx
ret 
// Approximately 0 instruction slots used