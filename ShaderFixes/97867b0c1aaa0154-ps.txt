// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 97867b0c1aaa0154-ps.txt
// 3DMigoto: 97867b0c1aaa0154 |    Unity headers extracted from Standard_HeightBlend.shader
//    Shader "Dreamfall/Unity5/Standard_HightBlend" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _BlendColor ("Blend Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//       _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//       _BlendTile ("Blend Map Tile Factor", Float) = 1.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//       _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//       _DetailMainAmnt ("Detail Main layer Amount", Range(0.000000,1.000000)) = 1.000000
//       _DetailBlendAmnt ("Detail Blend layer Amount", Range(0.000000,1.000000)) = 0.000000
//       _Height ("Heigth", Float) = 1.000000
//       _Adjust ("Blend Contrast", Float) = 1.000000
//       _MainAlphaFactor ("Alpha Factor Main", Range(0.000000,1.000000)) = 1.000000
//       _2ndAlphaFactor ("Alpha Factor Seccond", Range(0.000000,1.000000)) = 1.000000
//       _MainGloss ("Gloss Main", Range(0.000000,1.000000)) = 0.800000
//       _2ndGloss ("Gloss Seccond", Range(0.000000,1.000000)) = 0.200000
//       _MainMetallness ("Metallness Main", Range(0.000000,1.000000)) = 0.000000
//       _2ndMetallness ("Metallness Seccond", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Specular"
//      SubShader 1/2 {
//        LOD 1000
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 130263
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 190
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_HeightBlend.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 133 7 0
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 7 3 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 192 [_Color]
//   Vector 208 [_BlendColor]
//   Float 240 [_Adjust]
//   Float 244 [_BlendTile]
//   Float 248 [_MainAlphaFactor]
//   Float 252 [_2ndAlphaFactor]
//   Float 256 [_MainGloss]
//   Float 260 [_2ndGloss]
//   Float 264 [_MainMetallness]
//   Float 268 [_2ndMetallness]
//   Float 272 [_Height]
//   Float 276 [_DetailMainAmnt]
//   Float 280 [_DetailBlendAmnt]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BlendTex] 2D 3
//   SetTexture 2 [_Detail] 2D 4
//   SetTexture 3 [_DetailBump] 2D 5
//   SetTexture 4 [_BumpMap] 2D 2
//   SetTexture 5 [_BlendBump] 2D 6
//   SetTexture 6 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:36:05 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[18], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 97867b0c1aaa0154-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

sample r0.xyzw, v1.xyxx, t4.xyzw, s2
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
sample r1.xyzw, v1.zwzz, t3.xyzw, s5
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
mad r0.xyz, cb0[17].yyyy, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xy, v1.xyxx, cb0[15].yyyy
sample r3.xyzw, r2.xyxx, t5.xyzw, s6
sample r2.xyzw, r2.xyxx, t1.xyzw, s3
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
mad r1.xyz, cb0[17].zzzz, r1.xyzx, r3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r1.xyz, r1.xyzx, r0.wwww, -r0.xyzx
add r0.w, v5.y, -cb0[17].x
mul_sat r0.w, r0.w, cb0[15].x
add r0.w, -r0.w, l(1.000000)
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
dp3 r1.x, v2.xyzx, r0.xyzx
dp3 r1.y, v3.xyzx, r0.xyzx
dp3 r1.z, v4.xyzx, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
dp3 r1.x, r1.xyzx, cb2[0].xyzx
add r1.yzw, -v5.xxyz, r8.xxyz
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mad r3.xyz, r1.yzwy, r2.wwww, cb2[0].xyzx
mul r1.yzw, r1.yyzw, r2.wwww
dp3 r1.y, r0.xyzx, r1.yzwy
dp3 r1.z, r3.xyzx, r3.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.001000, 0.000000)
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r0.x, r0.xyzx, r3.xyzx
dp3 r0.y, cb2[0].xyzx, r3.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.x, r0.x
sample r3.xyzw, v1.zwzz, t2.xyzw, s4
mul r3.xyz, r3.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000)
min r3.xyz, r3.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000)
add r3.xyz, r3.xyzx, l(-0.900000, -0.900000, -0.900000, 0.000000)
mad r4.xyz, cb0[17].zzzz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, cb0[17].yyyy, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r4.xyzx
add r0.z, r2.y, r2.x
mad r0.z, r2.z, l(0.333333343), r0.z
max r0.z, r0.z, cb0[15].w
sample r4.xyzw, v1.xyxx, t0.xyzw, s1
mul r3.xyz, r3.xyzx, r4.xyzx
add r1.z, r3.y, r3.x
mad r1.z, r3.z, l(0.333333343), r1.z
mul r3.xyz, r3.xyzx, cb0[12].xyzx
max r1.z, r1.z, cb0[15].z
mul r1.z, r1.z, cb0[16].x
mad r0.z, cb0[16].y, r0.z, -r1.z
mad r0.z, r0.w, r0.z, r1.z
add r0.z, -r0.z, l(1.000000)
add r1.z, -r0.z, l(1.000000)
mad r1.z, r1.z, l(0.968000), l(0.030000)
log r1.z, r1.z
div r1.z, l(10.000000), r1.z
mul r1.w, r1.z, r1.z
mad r1.z, r1.z, r1.z, l(2.000000)
mul r1.z, r1.z, l(0.159154937)
mul r0.x, r0.x, r1.w
exp r0.x, r0.x
mul r0.x, r1.z, r0.x
mul r1.z, r0.z, r0.z
mul r1.w, r1.z, l(0.797884583)
mad r1.z, -r1.z, l(0.797884583), l(1.000000)
mad r2.w, r1.y, r1.z, r1.w
add r1.y, -r1.y, l(1.000000)
mad r1.z, r1.x, r1.z, r1.w
mad r1.z, r1.z, r2.w, l(0.000010)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul r0.x, r0.x, r1.z
mul r0.x, r0.x, l(0.785398185)
max r1.z, r0.x, l(0.000100)
sqrt r1.z, r1.z
eq r1.w, cb0[3].w, l(0.000000)
movc r0.x, r1.w, r1.z, r0.x
mul r0.x, r1.x, r0.x
max r0.x, r0.x, l(0.000000)
mad r2.xyz, r2.xyzx, cb0[13].xyzx, -r3.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
add r3.xyz, r2.xyzx, -cb0[2].xyzx
add r1.z, -cb0[16].z, cb0[16].w
mad r0.w, r0.w, r1.z, cb0[16].z
mad r3.xyz, r0.wwww, r3.xyzx, cb0[2].xyzx
mad r0.w, -r0.w, cb0[2].w, cb0[2].w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.x, r0.w, r0.x
mul r1.zw, v5.yyyy, cb0[9].xxxy
mad r1.zw, cb0[8].xxxy, v5.xxxx, r1.zzzw
mad r1.zw, cb0[10].xxxy, v5.zzzz, r1.zzzw
add r1.zw, r1.zzzw, cb0[11].xxxy
sample r4.xyzw, r1.zwzz, t6.xyzw, s0
mul r4.xyz, r4.wwww, cb0[6].xyzx
mul r5.xyz, r0.xxxx, r4.xyzx
add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.x, -r0.y, l(1.000000)
mul r0.y, r0.y, r0.y
dp2 r0.y, r0.yyyy, r0.zzzz
add r0.y, r0.y, l(-0.500000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
mad r0.xzw, r6.xxyz, r0.xxxx, r3.xxyz
mul r0.xzw, r0.xxzw, r5.xxyz
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r1.y, r0.y, r1.y, l(1.000000)
add r1.z, -r1.x, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r1.y, r0.y
mul r0.y, r1.x, r0.y
mul r1.xyz, r0.yyyy, r4.xyzx
mad o0.xyz, r2.xyzx, r1.xyzx, r0.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used