// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f0d86e9209cb0692-ps.txt
// 3DMigoto: f0d86e9209cb0692 |    Unity headers extracted from CustomFog_BumpSpecIllum.shader
//    Shader "Dreamfall/Backdrop/CustomFog_BumpSpecIllum" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _ReflectColor ("Reflect Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//       _EmissiveColor ("Emissive Color Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB), Emission/spec(A)", 2D) = "white" { }
//       _FogColorTint ("Fog Color Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FogColorBoost ("Fog Color Boost", Float) = 1.000000
//       _FogFactor ("Illum Fog Blend (1 is full fog))", Range(0.000000,1.000000)) = 1.000000
//       _OverallFog ("Overall Fog Strength", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 102552
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 55
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from CustomFog_BumpSpecIllum.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 43 3 0
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 160 [_LightColor0]
//   Vector 176 [_SpecColor]
//   Vector 192 [_Color]
//   Vector 224 [_FogColorTint]
//   Float 240 [_Shininess]
//   Float 248 [_FogFactor]
//   Float 252 [_FogColorBoost]
//   Float 256 [_OverallFog]
//   Matrix 96 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 1
//   SetTexture 2 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:01:21 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f0d86e9209cb0692-ps.txt
mov r6.xyzw, cb1[4].xyzw
mul r7.x, -r5.x, r5.y
mul r8.xyzw, cb10[0].xyzw, r7.xxxx
add r6.xyz, r6.xyz, -r8.xyz

mul r0.xy, v5.yyyy, cb0[7].xyxx
mad r0.xy, cb0[6].xyxx, v5.xxxx, r0.xyxx
mad r0.xy, cb0[8].xyxx, v5.zzzz, r0.xyxx
add r0.xy, r0.xyxx, cb0[9].xyxx
sample r0.xyzw, r0.xyxx, t2.xyzw, s0
mul r0.xyz, r0.wwww, cb0[10].xyzx
mul r1.xyz, r0.xyzx, cb0[11].xyzx
add r2.xyz, -v5.xyzx, r6.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mad r2.xyz, r2.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample r3.xyzw, v1.xyxx, t1.xyzw, s1
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3 r1.w, r4.xyzx, cb2[0].xyzx
max r1.w, r1.w, l(0.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
mul r2.x, cb0[15].x, l(128.000000)
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyzw, r2.xyzw, cb0[12].xyzw
mul r0.w, r0.w, r3.w
mul r0.xyz, r0.xyzx, r3.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r0.xyzx, r1.wwww, r1.xyzx
mul r1.xyz, r2.xyzx, cb0[15].zzzz
mad r0.w, r2.w, cb0[15].z, cb0[16].x
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[14].xyzx
mad r2.xyz, -r1.xyzx, cb0[15].wwww, r0.xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r1.xyz, cb0[16].xxxx, r2.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, -r1.xyzx
mad o0.xyz, v1.zzzz, r0.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used