// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 77fe0c87e4de61c3-ps.txt
// 3DMigoto: 77fe0c87e4de61c3 |    Unity headers extracted from Standard_River.shader
//    Shader "Dreamfall/Unity5/Standard_River" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _ParallaxMap ("Height Map", 2D) = "white" { }
//       _BumpAmt ("BumpAmount", Range(0.000000,1.000000)) = 1.000000
//       _Gloss ("Water Gloss", Range(0.000000,1.000000)) = 1.000000
//       _Metallic ("Water Metalness", Range(0.000000,1.000000)) = 0.000000
//       _Fresnel ("Reflection Fresnel Exponent", Float) = 2.000000
//       _Parallax ("Height", Range(-10.000000,10.000000)) = 0.000000
//       _MapTrength ("Parallax Map Strength", Range(-1.000000,1.000000)) = 1.000000
//       _Smudge ("Water Smudge", Range(-10.000000,10.000000)) = 1.000000
//       _ReflAmount ("Reflection amount", Float) = 0.000000
//       _ReflPow ("Reflection pow", Float) = 1.000000
//       _Cube1 ("Reflection Cubemap", CUBE) = "" { }
//       _WaterSpeed ("Water Speed1", Float) = 1.000000
//       _WaterSpeed2 ("Water Speed1", Float) = 1.000000
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+999" "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+999" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 2846
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 137
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_River.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 219 9 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
//   undeciphered2: 1 8 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [_Color]
//   Float 144 [_BumpAmt]
//   Float 148 [_ReflAmount]
//   Float 152 [_ReflPow]
//   Float 156 [_Fresnel]
//   Float 160 [_Gloss]
//   Float 164 [_Metallic]
//   Float 168 [_WaterSpeed]
//   Float 172 [_WaterSpeed2]
//   Float 176 [_Parallax]
//   Float 180 [_MapTrength]
//   Float 184 [_Smudge]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParallaxMap] 2D 4
//   SetTexture 1 [_BumpMap] 2D 5
//   SetTexture 2 [_MainTex] 2D 3
//   SetTexture 3 [_Cube1] CUBE 6
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Tue Jan 31 06:33:28 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 6      w        5     NONE   float      w
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 77fe0c87e4de61c3-ps.txt
mov r17.xyzw, cb1[4].xyzw
mov r18.xyzw, l(0)
mul r18.x, -r16.x, r16.y
mul r20.xyzw, cb10[0].xyzw, r18.xxxx
mad r20.xyzw, cb10[1].xyzw, r18.yyyy, r20.xyzw
mad r20.xyzw, cb10[2].xyzw, r18.zzzz, r20.xyzw
mad r20.xyzw, cb10[3].xyzw, r18.wwww, r20.xyzw
mul r19.xyzw, cb11[12].xyzw, r20.xxxx
mad r19.xyzw, cb11[13].xyzw, r20.yyyy, r19.xyzw
mad r19.xyzw, cb11[14].xyzw, r20.zzzz, r19.xyzw
mad r19.xyzw, cb11[15].xyzw, r20.wwww, r19.xyzw
add r17.xyz, r17.xyz, -r19.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s4
mul r1.w, r4.x, cb0[11].y
mul r1.w, r1.w, l(0.500000)
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyw, r2.wwww, r3.xyxz
mad r2.w, r3.z, r2.w, l(0.420000)
div r4.xy, r3.xyxx, r2.wwww
mul r2.w, cb0[11].x, l(0.500000)
mul r4.zw, r4.xxxy, r2.wwww
mad r4.xy, r1.wwww, r4.xyxx, r4.zwzz
add r4.xy, r4.xyxx, v1.xyxx
mad r5.xy, cb1[0].xxxx, cb0[10].zwzz, v1.wwww
min r1.w, cb0[9].x, l(0.100000)
mov r5.z, v1.z
sample r6.xyzw, r5.zxzz, t1.xyzw, s5
mad r4.zw, r6.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r1.wwww, r4.zwzz
dp2 r2.w, r6.xyxx, r6.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r6.z, r2.w
sample r5.xyzw, r5.zyzz, t1.xyzw, s5
mad r4.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.xy, r1.wwww, r4.zwzz
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r5.xyz, r5.xyzx, r6.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r5.xyzx
dp3 r2.w, r3.xywx, r6.xyzx
add r2.w, -r2.w, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb0[9].w
exp r2.w, r2.w
add r2.w, -r2.w, l(1.000000)
mad r3.xy, r5.xyxx, r1.wwww, r4.xyxx
sample r3.xyzw, r3.xyxx, t2.xyzw, s3
dp3 r4.x, v2.xyzx, r6.xyzx
dp3 r4.y, v3.xyzx, r6.xyzx
dp3 r4.z, v4.xyzx, r6.xyzx
dp3 r1.w, -r2.xyzx, r4.xyzx
add r1.w, r1.w, r1.w
mad r5.xyz, r4.xyzx, -r1.wwww, -r2.xyzx
sample r6.xyzw, r5.xyzx, t3.xyzw, s6
mul r6.xyz, r2.wwww, r6.xyzx
log r6.xyz, r6.xyzx
mul r6.xyz, r6.xyzx, cb0[9].zzzz
exp r6.xyz, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[8].xyzx
mul r1.w, r2.w, cb0[11].z
mul r7.xyz, r1.wwww, r3.xyzx
div r8.xy, v6.xyxx, v6.wwww
sample r8.xyzw, r8.xyxx, t4.xyzw, s2
dp3 r2.w, r4.xyzx, cb2[0].xyzx
max r2.w, r2.w, l(0.000000)
add r3.w, -cb0[10].x, l(1.000000)
mul r8.xyz, r8.xxxx, cb0[6].xyzx
eq r5.w, cb5[0].x, l(1.000000)
if_nz r5.w
  eq r5.w, cb5[0].y, l(1.000000)
  mul r9.xyz, v3.wwww, cb5[2].xyzx
  mad r9.xyz, cb5[1].xyzx, v2.wwww, r9.xyzx
  mad r9.xyz, cb5[3].xyzx, v4.wwww, r9.xyzx
  add r9.xyz, r9.xyzx, cb5[4].xyzx
  movc r9.xyz, r5.wwww, r9.xyzx, r0.xyzx
  add r9.xyz, r9.xyzx, -cb5[6].xyzx
  mul r9.yzw, r9.xxyz, cb5[5].xxyz
  mul r5.w, r9.y, l(0.250000)
  mul r6.w, cb5[0].z, l(0.500000)
  mad r7.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r5.w, r5.w, r6.w
  min r9.x, r7.w, r5.w
  sample r10.xyzw, r9.xzwx, t7.xyzw, s1
  add r11.xyz, r9.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r11.xyzw, r11.xyzx, t7.xyzw, s1
  add r9.xyz, r9.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t7.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r10.x, r10.xyzw, r4.xyzw
  dp4 r10.y, r11.xyzw, r4.xyzw
  dp4 r10.z, r9.xyzw, r4.xyzw
else 
  mov r4.w, l(1.000000)
  dp4 r10.x, cb2[38].xyzw, r4.xyzw
  dp4 r10.y, cb2[39].xyzw, r4.xyzw
  dp4 r10.z, cb2[40].xyzw, r4.xyzw
endif 
add r9.xyz, r10.xyzx, v5.xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r4.w, cb0[3].w, l(0.000000)
log r10.xyz, r9.xyzx
mul r10.xyz, r10.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r10.xyz, r10.xyzx
mad r10.xyz, r10.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r9.xyz, r4.wwww, r10.xyzx, r9.xyzx
lt r5.w, l(0.000000), cb4[2].w
if_nz r5.w
  dp3 r5.w, r5.xyzx, r5.xyzx
  rsq r5.w, r5.w
  mul r10.xyz, r5.wwww, r5.xyzx
  add r11.xyz, -r0.xyzx, cb4[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb4[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r5.w, r11.y, r11.x
  min r5.w, r11.z, r5.w
  add r11.xyz, r0.xyzx, -cb4[2].xyzx
  mad r10.xyz, r10.xyzx, r5.wwww, r11.xyzx
else 
  mov r10.xyz, r5.xyzx
endif 
log r5.w, r3.w
mul r5.w, r5.w, l(0.750000)
exp r5.w, r5.w
mad r6.w, -r5.w, l(0.700000), l(1.700000)
mul r5.w, r5.w, r6.w
mul r5.w, r5.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t5.xyzw, s0, r5.w
log r6.w, r10.w
mul r6.w, r6.w, cb4[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb4[3].x
mul r11.xyz, r10.xyzx, r6.wwww
lt r7.w, cb4[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb4[6].w
  if_nz r7.w
    dp3 r7.w, r5.xyzx, r5.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r5.xyzx, r7.wwww
    add r13.xyz, -r0.xyzx, cb4[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb4[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r7.w, r13.y, r13.x
    min r7.w, r13.z, r7.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r5.xyz, r12.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r5.w
  log r0.x, r5.w
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r6.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb4[1].wwww, r5.xyzx, r0.xyzx
endif 
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
mad r3.xyz, r3.xyzx, r1.wwww, -cb0[2].xyzx
mad r3.xyz, cb0[10].yyyy, r3.xyzx, cb0[2].xyzx
mad r1.w, -cb0[10].y, cb0[2].w, cb0[2].w
mul r4.xyz, r1.wwww, r7.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r3.w, r3.w
mul r1.x, r0.z, l(0.797884583)
mad r1.y, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r2.w, r1.y, r1.x
mad r1.x, r0.x, r1.y, r1.x
mad r1.x, r1.z, r1.x, l(0.000010)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r3.w, l(1.000000)
mad r1.y, r1.y, l(0.968000), l(0.030000)
log r1.y, r1.y
div r1.y, l(10.000000), r1.y
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.y, l(2.000000)
mul r1.y, r1.y, l(0.159154937)
log r0.w, r0.w
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
mul r0.w, r1.y, r0.w
add r1.y, -r2.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r3.wwww
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r4.w, r1.x, r0.w
mul r0.w, r2.w, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r2.w, r1.y
mul r1.y, r0.z, r3.w
mad r1.y, -r1.y, l(0.280000), l(1.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
movc r0.z, r4.w, r1.y, r0.z
dp3 r1.y, r3.xyzx, r3.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
add r1.y, -r1.w, l(1.000000)
add_sat r1.y, r1.y, cb0[10].x
mad r1.xzw, r8.xxyz, r1.xxxx, r9.xxyz
mul r2.xyz, r8.xyzx, r0.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, r3.xyzx
mul r2.xyz, r2.xyzx, r5.xyzx
mad r1.xzw, r4.xxyz, r1.xxzw, r2.xxyz
mul r0.yzw, r11.xxyz, r0.zzzz
add r2.xyz, -r3.xyzx, r1.yyyy
mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
mad r0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mad r0.xyz, r6.xyzx, cb0[9].yyyy, r0.xyzx
mul r0.w, v5.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used