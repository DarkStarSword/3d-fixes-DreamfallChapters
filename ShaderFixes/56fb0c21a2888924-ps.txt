// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 56fb0c21a2888924-ps.txt
// 3DMigoto: 56fb0c21a2888924 |    Unity headers extracted from Standard_WetMask_Terrain.shader
//    Shader "Dreamfall/Unity5/Terrain/Standard_WetMask_Terrain" {
//      Properties {
//      [Header(Roughness Settings)]  _GlossValues ("Gloss Values for each layer Min Value 0 Max Value 1", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _GlossTerrainMin ("Gloss Terrain min", Range(0.000000,1.000000)) = 0.000000
//       _GlossTerrainMax ("Gloss Terrain Max", Range(0.000000,1.000000)) = 1.000000
//       _GlossWet ("Gloss Wet Mask", Range(0.000000,1.000000)) = 1.000000
//       _GlossBoost ("Gloss Boost", Float) = 1.000000
//      [Header(Normal Map Settings)]  _NormalBoost ("Normal Map Boost", Float) = 1.000000
//      [Header(Wetmask Settings)]  _RefMask ("Reflection Mask (R)", 2D) = "black" { }
//       _RefMaskOffsetTile ("RefMask Offset(RB), Tile(G), WetDarkening(A) ", Vector) = (0.000000,0.000000,10.000000,0.000000)
//       _RefMaskLayerControll ("Reflection Mask layer controll", Vector) = (1.000000,1.000000,1.000000,1.000000)
//       _WorldDirControl ("World Dir Control- Adjust wetmask based on surface normal", Vector) = (0.000000,0.000000,0.000000,0.000000)
//      [Header(UV Scale)]  _UvScale ("UV Scale", Float) = 0.300000
//      [HideInInspector]  _Control ("Control (RGBA)", 2D) = "red" { }
//      [HideInInspector]  _Splat3 ("Layer 3 (A)", 2D) = "white" { }
//      [HideInInspector]  _Splat2 ("Layer 2 (B)", 2D) = "white" { }
//      [HideInInspector]  _Splat1 ("Layer 1 (G)", 2D) = "white" { }
//      [HideInInspector]  _Splat0 ("Layer 0 (R)", 2D) = "white" { }
//      [HideInInspector]  _Normal3 ("Normal 3 (A)", 2D) = "bump" { }
//      [HideInInspector]  _Normal2 ("Normal 2 (B)", 2D) = "bump" { }
//      [HideInInspector]  _Normal1 ("Normal 1 (G)", 2D) = "bump" { }
//      [HideInInspector]  _Normal0 ("Normal 0 (R)", 2D) = "bump" { }
//      }
//      Fallback "Nature/Terrain/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+100" "RenderType"="Opaque" "SplatCount"="4" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry+100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "SplatCount"="4" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 96158
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 249
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_WetMask_Terrain.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 158 11 0
//   Keywords { "SPOT" "SHADOWS_DEPTH" "FOG_EXP" }
//   undeciphered2: 1 12 5 12 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 192 [_UvScale]
//   Vector 208 [_GlossValues]
//   Float 224 [_GlossWet]
//   Float 228 [_GlossTerrainMin]
//   Float 232 [_GlossTerrainMax]
//   Float 236 [_GlossBoost]
//   Float 240 [_NormalBoost]
//   Vector 256 [_WorldDirControl]
//   Vector 272 [_RefMaskOffsetTile]
//   Vector 288 [_RefMaskLayerControll]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_RefMask] 2D 11
//   SetTexture 1 [_Control] 2D 3
//   SetTexture 2 [_Normal0] 2D 8
//   SetTexture 3 [_Normal2] 2D 9
//   SetTexture 4 [_Normal3] 2D 10
//   SetTexture 5 [_Splat0] 2D 4
//   SetTexture 6 [_Splat1] 2D 5
//   SetTexture 7 [_Splat2] 2D 6
//   SetTexture 8 [_Splat3] 2D 7
//   SetTexture 9 [_LightTexture0] 2D 1
//   SetTexture 10 [_LightTextureB0] 2D 2
//   SetTexture 11 [_ShadowMapTexture] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:16:33 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 8     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   x z 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xz
dcl_input_ps linear v8.xyzw
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 56fb0c21a2888924-ps.txt
mov r8.xyzw, cb1[4].xyzw
mul r9.x, -r7.x, r7.y
mul r10.xyzw, cb10[0].xyzw, r9.xxxx
add r8.xyz, r8.xyz, -r10.xyz

mul r0.xyz, v6.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
mul r0.xyz, r0.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, r0.xyzx
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[16].xyzx
mul_sat r0.xyz, r0.xyzx, r1.xyzx
mad r1.xyz, r0.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r0.xyz, r0.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[16].wwww
exp r0.xyz, r0.xyzx
add r0.x, r0.z, r0.x
add_sat r0.x, -r0.x, r0.y
mad r0.yz, v1.xxyx, cb0[17].zzzz, cb0[17].xxyx
sample r1.xyzw, r0.yzyy, t0.xyzw, s11
mul r0.x, r0.x, r1.x
mul r1.xyzw, r0.xxxx, cb0[18].xyzw
mul r0.x, r0.x, cb0[14].x
sample r2.xyzw, v1.xyxx, t1.xyzw, s3
add r3.xyzw, -r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r1.xyzw, r3.xyzw, -r1.xyzw, r1.xyzw
add r0.y, r1.y, r1.x
add r0.y, r1.z, r0.y
add r0.y, r1.w, r0.y
mul r0.z, cb0[14].x, cb0[17].w
mad r0.z, -r0.y, r0.z, l(1.000000)
mul r1.xy, v7.xzxx, cb0[12].xxxx
sample r3.xyzw, r1.xyxx, t5.xyzw, s4
sample r4.xyzw, r1.xyxx, t6.xyzw, s5
mul r4.xyz, r2.yyyy, r4.xyzx
mad r3.xyz, r2.xxxx, r3.xyzx, r4.xyzx
sample r4.xyzw, r1.xyxx, t7.xyzw, s6
mad r3.xyz, r2.zzzz, r4.xyzx, r3.xyzx
sample r4.xyzw, r1.xyxx, t8.xyzw, s7
mad r3.xyz, r2.wwww, r4.xyzx, r3.xyzx
mul r3.xyw, r0.zzzz, r3.xyxz
add r0.w, r3.y, r3.x
mul r3.xyw, r3.xyxw, cb0[2].wwww
mad r0.z, r3.z, r0.z, r0.w
mul r0.z, r0.z, l(0.333333343)
add r0.w, -cb0[14].y, cb0[14].z
mad r0.z, r0.z, r0.w, cb0[14].y
dp4 r0.w, cb0[13].xyzw, r2.xyzw
mul_sat r0.z, r0.z, r0.w
mul r0.w, cb0[14].w, cb0[14].w
mul r0.z, r0.w, r0.z
min r0.z, r0.z, l(1.000000)
add r0.w, -r0.z, cb0[14].x
mad r0.y, r0.y, r0.w, r0.z
add r0.y, -r0.y, l(1.000000)
add r0.z, -r0.y, l(1.000000)
mad r0.z, r0.z, l(0.968000), l(0.030000)
log r0.z, r0.z
div r0.z, l(10.000000), r0.z
mul r0.w, r0.z, r0.z
mad r0.z, r0.z, r0.z, l(2.000000)
mul r0.z, r0.z, l(0.159154937)
sample r4.xyzw, r1.xyxx, t2.xyzw, s8
mul r4.xyzw, r2.xxyy, r4.ywyw
add r1.zw, r4.wwwz, r4.yyyx
sample r4.xyzw, r1.xyxx, t3.xyzw, s9
sample r5.xyzw, r1.xyxx, t4.xyzw, s10
mad r1.xy, r2.zzzz, r4.wyww, r1.zwzz
mad r1.xy, r2.wwww, r5.wyww, r1.xyxx
add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mad r1.xy, r0.xxxx, r1.zwzz, r1.xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[15].xxxx
dp2 r0.x, r1.xyxx, r1.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r1.z, r0.x
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r2.xyzx
add r4.xyz, -v5.xyzx, r8.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
add r5.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mad r6.xyz, r5.xyzx, r0.xxxx, r4.xyzx
dp3 r1.w, r1.xyzx, r4.xyzx
mul r4.xyz, r0.xxxx, r5.xyzx
dp3 r0.x, r6.xyzx, r6.xyzx
max r0.x, r0.x, l(0.001000)
rsq r0.x, r0.x
mul r5.xyz, r0.xxxx, r6.xyzx
dp3 r0.x, r1.xyzx, r5.xyzx
dp3 r1.x, r4.xyzx, r5.xyzx
dp3 r1.y, r2.xyzx, r4.xyzx
max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.w
exp r0.x, r0.x
mul r0.x, r0.z, r0.x
mul r0.z, r0.y, r0.y
mul r0.w, r0.z, l(0.797884583)
mad r0.z, -r0.z, l(0.797884583), l(1.000000)
mad r1.z, r1.w, r0.z, r0.w
mad r0.z, r1.y, r0.z, r0.w
mad r0.z, r0.z, r1.z, l(0.000010)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.x, r0.x, r0.z
mul r0.x, r0.x, l(0.785398185)
max r0.z, r0.x, l(0.000100)
sqrt r0.z, r0.z
eq r0.w, cb0[3].w, l(0.000000)
movc r0.x, r0.w, r0.z, r0.x
mul r0.x, r1.y, r0.x
max r0.x, r0.x, l(0.000000)
dp3 r0.z, cb0[2].xyzx, cb0[2].xyzx
ne r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mul r0.x, r0.z, r0.x
mul r2.xyzw, v5.yyyy, cb0[9].xyzw
mad r2.xyzw, cb0[8].xyzw, v5.xxxx, r2.xyzw
mad r2.xyzw, cb0[10].xyzw, v5.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[11].xyzw
div r0.zw, r2.xxxy, r2.wwww
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample r4.xyzw, r0.zwzz, t9.xyzw, s1
lt r0.z, l(0.000000), r2.z
dp3 r0.w, r2.xyzx, r2.xyzx
sample r2.xyzw, r0.wwww, t10.xyzw, s2
and r0.z, r0.z, l(0x3f800000)
mul r0.z, r4.w, r0.z
mul r0.z, r2.x, r0.z
div r2.xyz, v8.xyzx, v8.wwww
sample_c_lz r0.w, r2.xyxx, t11.xxxx, s0, r2.z
add r1.z, -cb3[24].x, l(1.000000)
mad r0.w, r0.w, r1.z, cb3[24].x
mul r0.z, r0.w, r0.z
mul r2.xyz, r0.zzzz, cb0[6].xyzx
mul r0.xzw, r0.xxxx, r2.xxyz
add r1.zw, -r1.xxxw, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r1.x, r1.x, r1.x
dp2 r0.y, r1.xxxx, r0.yyyy
add r0.y, r0.y, l(-0.500000)
mul r1.x, r1.z, r1.z
mul r1.x, r1.x, r1.x
mul r1.x, r1.z, r1.x
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r1.xxxx, cb0[2].xyzx
mul r0.xzw, r0.xxzw, r4.xxyz
mul r1.x, r1.w, r1.w
mul r1.x, r1.x, r1.x
mul r1.x, r1.w, r1.x
mad r1.x, r0.y, r1.x, l(1.000000)
add r1.z, -r1.y, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r1.x, r0.y
mul r0.y, r1.y, r0.y
mul r1.xyz, r0.yyyy, r2.xyzx
mad r0.xyz, r3.xywx, r1.xyzx, r0.xzwx
mul r0.w, v1.z, cb4[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used