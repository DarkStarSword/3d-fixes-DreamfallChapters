// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 86d5657aeafaff77-ps.txt
// 3DMigoto: 86d5657aeafaff77 | Matched 2 variants of 1 shaders: Hidden/TerrainEngine/Details/Vertexlit
//
//       Unity headers extracted from atsv2 vertexlit.shader
//       Shader "Hidden/TerrainEngine/Details/Vertexlit" {
//         Properties {
//          _Color ("Main Color r:ampl g:speed b:time", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//          _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//         }
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardAdd" "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//             ZWrite Off
//             Blend One One
//             ColorMask RGB
//             GpuProgramID 92090
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 212
// 2:              GpuProgramIndex 227
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from atsv2 vertexlit.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 26 2 0
// 2:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" }
// 1:   Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
//      undeciphered2: 1 2 3 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 256
//      Vector 96 [_LightColor0]
//      Vector 192 [_VertexLitTranslucencyColor] 3
//      Float 240 [_Cutoff]
//      Matrix 128 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_LightTexture0] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:30:48 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             8         5  ( FLT, FLT, FLT, FLT)
// c6         cb0            15         1  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c8         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, 0.850000024, -0.100000001, 0.699999988, 0.300000012
    def c10, 0, 4, 2, -2
    def c11, 0.800000012, 2, 0, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl t2.xyz
    dcl_2d s0
    dcl_2d s1
    texld_pp r0, t0, s1
    add_pp r1, r0.w, -c6.x
    mul r2.xy, t2.y, c2
    mad r2.xy, c1, t2.x, r2
    mad r2.xy, c3, t2.z, r2
    add r2.xy, r2, c4
    texkill r1
    texld_pp r1, r2, s0
    add r1.xyz, -t2, c7
    nrm_pp r2.xyz, r1
    dp3_sat_pp r1.x, r2, -c8
    dp3_pp r1.y, t1, c8
    mov_sat_pp r1.z, -r1.y
    mad_pp r1.y, r1.y, c9.z, c9.w
    max_pp r2.x, r1.y, c10.x
    lrp_pp r2.y, c9.x, r1.x, r1.z
    add_pp r1.x, r0.y, c9.y
    mul_pp r1.x, r1.x, r2.y
    mul_pp r1.xyz, r1.x, c5
    mad_pp r1.xyz, r1, c10.y, r2.x
    mul_pp r2.xyz, r0, c0
    mul_pp r1.xyz, r1, r2
    mad_pp r1.w, r1.w, c10.z, c10.w
    mad_pp r1.w, r1.w, c11.x, c11.y
    mul_pp r1.xyz, r1.w, r1
    mov_sat r1.w, t0.z
    mul_pp r0.xyz, r1, r1.w
    mov_pp oC0, r0

// approximately 30 instruction slots used (2 texture, 28 arithmetic)
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 86d5657aeafaff77-ps.txt
mov r3.xyzw, cb1[4].xyzw
mul r4.x, -r2.x, r2.y
mul r5.xyzw, cb10[0].xyzw, r4.xxxx
add r3.xyz, r3.xyz, -r5.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
add r1.x, r0.w, -cb0[15].x
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
add r1.xyz, -v3.xyzx, r3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r1.x, r1.xyzx, -cb2[0].xyzx
dp3 r1.y, v2.xyzx, cb2[0].xyzx
mov_sat r1.z, -r1.y
mad r1.y, r1.y, l(0.700000), l(0.300000)
max r1.y, r1.y, l(0.000000)
add r1.x, -r1.z, r1.x
mad r1.x, r1.x, l(0.850000), r1.z
add r1.z, r0.y, l(-0.100000)
mul r1.x, r1.z, r1.x
mul r1.xzw, r1.xxxx, cb0[12].xxyz
mad r1.xyz, r1.xzwx, l(4.000000, 4.000000, 4.000000, 0.000000), r1.yyyy
mul r0.xyz, r0.xyzx, cb0[6].xyzx
mov o0.w, r0.w
mul r0.xyz, r1.xyzx, r0.xyzx
mul r1.xy, v3.yyyy, cb0[9].xyxx
mad r1.xy, cb0[8].xyxx, v3.xxxx, r1.xyxx
mad r1.xy, cb0[10].xyxx, v3.zzzz, r1.xyxx
add r1.xy, r1.xyxx, cb0[11].xyxx
sample r1.xyzw, r1.xyxx, t1.xyzw, s0
mad r0.w, r1.w, l(2.000000), l(-2.000000)
mad r0.w, r0.w, l(0.800000), l(2.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mov_sat r0.w, v1.z
mul o0.xyz, r0.xyzx, r0.wwww
ret 
// Approximately 0 instruction slots used