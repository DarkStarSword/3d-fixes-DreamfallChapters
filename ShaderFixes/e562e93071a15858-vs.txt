// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e562e93071a15858-vs.txt
// 3DMigoto: e562e93071a15858 | Matched 4 variants of 2 shaders: Dreamfall/Bumped Specular 2 Sided, Dreamfall/Bumped Specular 2 Sided RIKKE
//
// 3:    Unity headers extracted from Normal-BumpSpec2Sided.shader
// c:    Unity headers extracted from Normal-BumpSpecEmissive2Sided_Rikke.shader
// c:    Shader "Dreamfall/Bumped Specular 2 Sided RIKKE" {
// 3:    Shader "Dreamfall/Bumped Specular 2 Sided" {
//         Properties {
//          _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,1.000000)
// 3:       _EmissionColor ("Emission Color", Color) = (0.500000,0.500000,0.500000,1.000000)
//          _Shininess ("Shininess", Range(0.030000,1.000000)) = 0.078125
//          _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
// 3:       _BumpMap ("Normalmap", 2D) = "bump" { }
// c:       _EmissiveColor ("Emissive Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// c:       _EmissiveMap ("Emissive", 2D) = "black" { }
// c:       _EmissiveStrength ("Emissionstrength", Float) = 1.000000
//         }
//         Fallback "Specular"
//         SubShader 1/1 {
//           LOD 400
//           Tags { "RenderType"="Opaque" }
//           Pass 4/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//             ZWrite Off
//             Cull Off
// c:          GpuProgramID 234495
// 3:          GpuProgramID 255809
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 5:              GpuProgramIndex 259
// a:              GpuProgramIndex 269
//               }
//             }
//           }
//         }
//       }
//
// 3: Unity 5.3 headers extracted from Normal-BumpSpec2Sided.shader.decompressed:
// c: Unity 5.3 headers extracted from Normal-BumpSpecEmissive2Sided_Rikke.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 22 0 0
// a:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" }
// 5:   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 224
//      Vector 176 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityShadows" 416
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityShadows" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityFog" 4
//      BindCB "UnityLightmaps" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.52 on Mon Jul 24 22:58:26 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     z         1     NONE   float     z 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            11         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2            25         1  ( FLT, FLT, FLT, FLT)
// c4         cb3             0         8  ( FLT, FLT, FLT, FLT)
// c12        cb3            12         4  ( FLT, FLT, FLT, FLT)
// c16        cb4             1         1  ( FLT, FLT, FLT, FLT)
// c17        cb5             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c18, 0.5, 1, 0, 0
    dcl_texcoord v0
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mad oT0.xy, v3, c1, c1.zwzw
    mul r0, v0.y, c5
    mad r0, c4, v0.x, r0
    mad r0, c6, v0.z, r0
    add r0, r0, c7
    mul r1.x, r0.y, c2.x
    mul r1.w, r1.x, c18.x
    mul r1.xz, r0.xyww, c18.x
    add oT2.xy, r1.z, r1.xwzw
    mad oT3.xy, v4, c17, c17.zwzw
    mul r1.xyz, v0.y, c13
    mad r1.xyz, c12, v0.x, r1
    mad r1.xyz, c14, v0.z, r1
    mad r1.xyz, c15, v0.w, r1
    add r2.xyz, r1, -c3
    mov oT1.xyz, r1
    mul oT4.xyz, r2, c3.w
    mul r1.x, v0.y, c9.z
    mad r1.x, c8.z, v0.x, r1.x
    mad r1.x, c10.z, v0.z, r1.x
    add r1.x, r1.x, c11.z
    mov r1.w, c3.w
    add r1.y, -r1.w, c18.y
    mul oT4.w, r1.y, -r1.x
    mad oT0.z, r0.z, c16.z, c16.w
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT2.zw, r0
    mov oT3.zw, c18.z

// approximately 29 instruction slots used
vs_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_constantbuffer cb3[16], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e562e93071a15858-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[11].xyxx, cb0[11].zwzz
mad o1.z, r0.z, cb4[1].z, cb4[1].w
mul r1.xyz, v0.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
mov o2.xyz, r1.xyzx
add r1.xyz, r1.xyzx, -cb2[25].xyzx
mul o5.xyz, r1.xyzx, cb2[25].wwww
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o3.zw, r0.zzzw
add o3.xy, r1.zzzz, r1.xwxx
mad o4.xy, v4.xyxx, cb5[0].xyxx, cb5[0].zwzz
mov o4.zw, l(0,0,0,0)
mul r0.x, v0.y, cb3[5].z
mad r0.x, cb3[4].z, v0.x, r0.x
mad r0.x, cb3[6].z, v0.z, r0.x
add r0.x, r0.x, cb3[7].z
add r0.y, -cb2[25].w, l(1.000000)
mul o5.w, r0.y, -r0.x
ret 
// Approximately 0 instruction slots used