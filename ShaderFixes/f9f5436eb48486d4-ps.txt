// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f9f5436eb48486d4-ps.txt
// 3DMigoto: f9f5436eb48486d4 |    Unity headers extracted from FogVolume_Rotation.shader
//    Shader "Hidden/FogVolume_Rotation" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//          ZTest Always
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha OneMinusSrcAlpha
//          GpuProgramID 59518
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 235
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FogVolume_Rotation.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 121 1 1
//   Keywords { "_DOUBLE_LAYER" "_COLLISION" "_FOG_VOLUME_NOISE" "_FOG_VOLUME_INSCATTERING" }
//   undeciphered2: 1 2 3 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 96 [_Color]
//   Vector 112 [_InscatteringColor]
//   Vector 128 [_BoxMin]
//   Vector 144 [_BoxMax]
//   Vector 160 [Speed]
//   Vector 176 [Stretch]
//   Vector 240 [L] 3
//   Float 252 [_InscatteringIntensity]
//   Float 256 [InscatteringShape]
//   Float 260 [_Visibility]
//   Float 264 [InscatteringStartDistance]
//   Float 272 [InscatteringTransitionWideness]
//   Float 276 [_3DNoiseScale]
//   Float 280 [_RayStep]
//   Float 284 [gain]
//   Float 288 [threshold]
//   Float 292 [SwirlAdjust]
//   Float 300 [_SceneIntersectionThreshold]
//   Float 308 [SlyCollision]
//   Float 312 [Exposure]
//   Float 316 [FadeDistance]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 192 [unity_ObjectToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_NoiseVolume] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 02:03:44 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f9f5436eb48486d4-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
add r2.xyz, -v5.xyzx, cb0[8].xyzx
div r2.xyz, r2.xyzx, r0.xyzx
add r3.xyz, -v5.xyzx, cb0[9].xyzx
div r3.xyz, r3.xzyx, r0.xzyx
mov r2.w, r3.x
movc r1.xw, r1.xxxx, r2.xxxw, r2.wwwx
mov r3.xw, r2.zzzy
movc r2.xy, r1.yyyy, r3.wzww, r3.zwzz
lt r0.w, r1.x, r2.x
movc r0.w, r0.w, r2.x, r1.x
lt r1.x, r2.y, r1.w
movc r1.x, r1.x, r2.y, r1.w
movc r1.yz, r1.zzzz, r3.xxyx, r3.yyxy
lt r1.w, r0.w, r1.y
movc r0.w, r1.w, r1.y, r0.w
lt r1.y, r1.z, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.yzw, |v5.xxyz|, -cb0[9].xxyz
ge r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.yzw, r1.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
add r1.y, r1.z, r1.y
add r1.y, r1.w, r1.y
min r1.y, r1.y, l(1.000000)
mul r0.w, r0.w, r1.y
div r1.yz, v2.xxyx, v2.wwww
sample r2.xyzw, r1.yzyy, t0.xyzw, s0
mad r1.w, cb1[7].z, r2.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.x, r2.x, v4.z
div r1.w, r1.w, r2.x
max r2.x, r1.x, r0.w
min r2.y, r1.x, r0.w
min r2.xy, |r1.wwww|, r2.xyxx
add r2.x, -r2.y, r2.x
div r2.x, r2.x, cb0[16].y
exp r2.x, -r2.x
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
add r2.yzw, v1.xxyz, -r14.xxyz
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r2.yzw, r2.yyzw, r3.xxxx
div r3.x, |r1.w|, cb0[17].x
add_sat r3.x, r3.x, -cb0[16].z
mad r3.yzw, r0.xxyz, r0.wwww, v5.xxyz
mad r0.xyz, r0.xyzx, r1.xxxx, v5.xyzx
add r0.xyz, -r3.yzwy, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
dp2 r1.x, r1.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r1.x, null, r1.x
mul r1.x, r1.x, l(43758.546875)
frc r1.x, r1.x
add r1.x, -r1.x, l(-1.000000)
mad r1.x, cb0[19].y, r1.x, l(1.000000)
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
add r1.xyz, -r3.yzwy, v5.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r1.x, |r1.w|
div r1.x, r1.x, cb0[18].w
mul r1.x, r0.w, r1.x
min r0.w, r0.w, r1.x
mul r1.xyzw, cb0[10].xyzw, cb1[0].xxxx
mul r4.xyz, cb0[11].xyzx, cb0[17].yyyy
mul r5.xyz, r1.yzwy, l(0.800000, 0.800000, 0.800000, 0.000000)
mov r6.xyz, r3.yzwy
mov r4.w, r0.w
mov r7.xyzw, l(0,0,0,0)
mov r5.w, l(0)
loop 
  ilt r6.w, r5.w, l(50)
  lt r8.x, l(0.000000), r4.w
  and r6.w, r6.w, r8.x
  breakc_z r6.w
  dp3 r8.x, r6.xyzx, cb2[12].xyzx
  dp3 r8.y, r6.xyzx, cb2[13].xyzx
  dp3 r8.z, r6.xyzx, cb2[14].xyzx
  dp3 r6.w, r8.xyzx, r8.xyzx
  sqrt r6.w, r6.w
  div r6.w, r6.w, cb0[19].w
  mul r6.w, r6.w, l(-1.442695)
  exp r6.w, r6.w
  min r6.w, r6.w, l(1.000000)
  mul r6.w, r6.w, cb0[17].w
  mul r8.x, r6.w, cb0[18].y
  mad r8.y, cb0[10].x, cb1[0].x, r8.x
  sincos r9.x, r10.x, r8.y
  mov r10.yz, r9.xxxx
  mad r8.yzw, r10.xxyz, l(0.000000, 0.500000, -0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
  mad r8.yzw, r8.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  mad r8.x, r1.x, l(1.200000), r8.x
  sincos r8.x, r9.x, r8.x
  mov r9.yz, r8.xxxx
  mad r9.xyz, r9.xyzx, l(0.500000, -0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r10.xyz, r6.xyzx, r4.xyzx, r1.yzwy
  dp2 r11.x, r10.xyxx, r8.ywyy
  dp2 r11.y, r10.yxyy, r8.yzyy
  mad r8.xyz, r6.xyzx, r4.xyzx, r5.xyzx
  dp2 r12.x, r8.xyxx, r9.xzxx
  dp2 r12.y, r8.yxyy, r9.xyxx
  mov r11.z, r10.z
  sample_l r9.xyzw, r11.xyzx, t1.xyzw, s1, l(1.000000)
  mov r12.z, r8.z
  sample_l r8.xyzw, r12.xyzx, t1.xyzw, s1, l(0.000000)
  add r8.x, -r9.x, r8.x
  mad r8.x, r8.x, l(0.500000), r9.x
  mul r8.y, r6.w, r8.x
  mad r6.w, r8.x, r6.w, -cb0[18].x
  mul_sat r6.w, r8.y, r6.w
  add r8.x, -r7.w, l(1.000000)
  mad r8.xyzw, r6.wwww, r8.xxxx, r7.xyzw
  min r7.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  iadd r5.w, r5.w, l(1)
  mad r6.xyz, r0.xyzx, cb0[17].zzzz, r6.xyzx
  add r4.w, r4.w, -cb0[17].z
endloop 
mul r0.xyz, r7.xyzx, cb0[6].xyzx
mul r1.xyz, r0.xyzx, r0.xyzx
dp3_sat r0.w, r2.yzwy, cb0[15].xyzx
mad r1.w, -cb0[16].x, cb0[16].x, l(1.000000)
dp2 r0.w, r0.wwww, cb0[16].xxxx
mad r0.w, cb0[16].x, cb0[16].x, -r0.w
add r0.w, r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, l(1.500000)
exp r0.w, r0.w
div r0.w, r1.w, r0.w
mul r0.w, r0.w, l(0.0795772821)
mul r1.w, r2.x, r3.x
mul r0.w, r0.w, r1.w
mul r1.xyz, r1.xyzx, cb0[7].xyzx
mul r1.xyz, r1.xyzx, cb0[15].wwww
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mul r7.xyz, r0.xyzx, cb0[19].zzzz
mov_sat o0.xyzw, r7.xyzw
ret 
// Approximately 0 instruction slots used