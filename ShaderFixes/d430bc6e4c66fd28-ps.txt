// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed d430bc6e4c66fd28-ps.txt
// 3DMigoto: d430bc6e4c66fd28 |    Unity headers extracted from ShadowSoftener-DeferredShading.shader
//    Shader "Hidden/ShadowSoftener-DeferredShading" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//       _SrcBlend ("", Float) = 1.000000
//       _DstBlend ("", Float) = 1.000000
//      }
//      Fallback "Hidden/Internal-DeferredShading"
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 28233
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 79
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ShadowSoftener-DeferredShading.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 88 5 0
//   Keywords { "POINT" "UNITY_HDR_ON" }
//   undeciphered2: 1 5 3 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 128 [_LightPos]
//   Vector 144 [_LightColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_LightTextureB0] 2D 1
//   SetTexture 2 [_CameraGBufferTexture0] 2D 2
//   SetTexture 3 [_CameraGBufferTexture1] 2D 3
//   SetTexture 4 [_CameraGBufferTexture2] 2D 4
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Thu Aug 17 01:53:50 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed d430bc6e4c66fd28-ps.txt
mov r7.xyzw, cb1[4].xyzw
mul r8.x, -r6.x, r6.y
mul r9.xyzw, cb10[0].xyzw, r8.xxxx
add r7.xyz, r7.xyz, -r9.xyz

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx

// copy depth from r0.z to r10.x:
mov r10.x, r0.z

mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed d430bc6e4c66fd28-ps.txt

add r11.x, r10.x, -r6.y
mul r11.x, r6.x, r11.x
mul r12.xyzw, cb10[0].xyzw, r11.xxxx
add r0.xyz, r0.xyzw, -r12.xyzx

add r2.xyz, r0.xyzx, -r7.xyzx
add r0.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.z, r0.w
mul r0.w, r0.w, cb0[8].w
sample r3.xyzw, r0.wwww, t1.xyzw, s1
mul r3.xyz, r3.xxxx, cb0[9].xyzx
mad r4.xyz, -r0.xyzx, r1.zzzz, -r2.xyzx
mul r0.xyz, r0.xyzx, r1.zzzz
dp3 r0.w, r4.xyzx, r4.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
sample r5.xyzw, r1.xyxx, t4.xyzw, s4
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r0.w, r5.xyzx, r4.xyzx
dp3 r1.z, -r0.xyzx, r4.xyzx
dp3 r0.x, r5.xyzx, -r0.xyzx
dp3 r0.y, r5.xyzx, -r2.xyzx
max r0.z, r1.z, l(0.000000)
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.w, r0.w
sample r2.xyzw, r1.xyxx, t3.xyzw, s3
sample r1.xyzw, r1.xyxx, t2.xyzw, s2
add r4.xyzw, -r2.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
add r1.w, -r4.x, l(1.000000)
mad r1.w, r1.w, l(0.968000), l(0.030000)
log r1.w, r1.w
div r1.w, l(10.000000), r1.w
mul r2.w, r1.w, r1.w
mad r1.w, r1.w, r1.w, l(2.000000)
mul r1.w, r1.w, l(0.159154937)
mul r0.w, r0.w, r2.w
exp r0.w, r0.w
mul r0.w, r1.w, r0.w
mul r1.w, r4.x, r4.x
mul r2.w, r1.w, l(0.797884583)
mad r1.w, -r1.w, l(0.797884583), l(1.000000)
mad r3.w, r0.y, r1.w, r2.w
mad r1.w, r0.x, r1.w, r2.w
mad r1.w, r1.w, r3.w, l(0.000010)
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(0.785398185)
max r1.w, r0.w, l(0.000100)
sqrt r1.w, r1.w
eq r2.w, cb0[3].w, l(0.000000)
movc r0.w, r2.w, r1.w, r0.w
mul r0.w, r0.x, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r1.w, r2.xyzx, r2.xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
mul r5.xyz, r3.xyzx, r0.wwww
add r0.yw, -r0.yyyz, l(0.000000, 1.000000, 0.000000, 1.000000)
mul r0.z, r0.z, r0.z
dp2 r0.z, r0.zzzz, r4.xxxx
add r0.z, r0.z, l(-0.500000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r2.xyz, r4.yzwy, r0.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, r5.xyzx
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r0.y, r0.z, r0.y, l(1.000000)
add r0.w, -r0.x, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.z, r0.z, r0.w, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, r3.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used